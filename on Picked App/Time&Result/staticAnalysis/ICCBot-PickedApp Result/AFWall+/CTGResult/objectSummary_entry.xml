<?xml version="1.0" encoding="UTF-8"?>

<root>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOld">
    <singleIntent>
      <method method="void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])" methodtrace="void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOld"/>
      <destinition name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <nodes>
        <node method="ToggleWidgetOld onUpdate" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ToggleWidgetOld onUpdate" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Ldev/ukanth/ufirewall/widget/ToggleWidgetOldActivity;&quot;)"/>
        <node method="ToggleWidgetOld onUpdate" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r4, 0, $r6, 0)"/>
        <node method="ToggleWidgetOld onUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131296584, $r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void showRules()" methodtrace="void showRules()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <nodes>
        <node method="MainActivity showRules" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showRules" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/RulesActivity;&quot;)"/>
        <node method="MainActivity showRules" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1202)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void showAbout()" methodtrace="void showAbout()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.HelpActivity"/>
      <nodes>
        <node method="MainActivity showAbout" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showAbout" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/HelpActivity;&quot;)"/>
        <node method="MainActivity showAbout" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1200)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void start(android.os.Bundle)" methodtrace="void start(android.os.Bundle)
&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt; --- $r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()
android.content.Intent build()"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender data="null"/>
      <nodes>
        <node method="LockPatternActivity$IntentBuilder start" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()"/>
        <node method="LockPatternActivity$IntentBuilder start" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity$IntentBuilder start" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r3, null, $r1, $r2)"/>
        <node method="LockPatternActivity$IntentBuilder start" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r3, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void startForResult(android.app.Fragment,int,android.os.Bundle)" methodtrace="void startForResult(android.app.Fragment,int,android.os.Bundle)
&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt; --- $r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()
android.content.Intent build()"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender data="null"/>
      <nodes>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r3, null, $r1, $r2)"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r3, $i0, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void startForResult(android.app.Activity,int)" methodtrace="void startForResult(android.app.Activity,int)
&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt; --- $r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()
android.content.Intent build()"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender data="null"/>
      <nodes>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r3, null, $r1, $r2)"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void registerNetworkObserver()" methodtrace="void registerNetworkObserver()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.FirewallService"/>
      <nodes>
        <node method="MainActivity registerNetworkObserver" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity registerNetworkObserver" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Ldev/ukanth/ufirewall/service/FirewallService;&quot;)"/>
        <node method="MainActivity registerNetworkObserver" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void startForResult(android.app.Activity,int,android.os.Bundle)" methodtrace="void startForResult(android.app.Activity,int,android.os.Bundle)
&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt; --- $r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()
android.content.Intent build()"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender data="null"/>
      <nodes>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r3, null, $r1, $r2)"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r3, $i0, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.StatusWidget">
    <singleIntent>
      <method method="void showWidget(android.content.Context,android.appwidget.AppWidgetManager,int[],boolean)" methodtrace="void showWidget(android.content.Context,android.appwidget.AppWidgetManager,int[],boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.TOGGLE_REQUEST"/>
      <nodes>
        <node method="StatusWidget showWidget" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="StatusWidget showWidget" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="StatusWidget showWidget" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.TOGGLE_REQUEST&quot;)"/>
        <node method="StatusWidget showWidget" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r4, -1, $r6, 134217728)"/>
        <node method="StatusWidget showWidget" type="sendOutWrapperredIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131296604, $r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.broadcast.PackageBroadcast">
    <singleIntent>
      <method method="void addNotification(android.content.Context,java.lang.String)" methodtrace="void addNotification(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.broadcast.PackageBroadcast"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="PackageBroadcast addNotification" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="PackageBroadcast addNotification" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="PackageBroadcast addNotification" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="PackageBroadcast addNotification" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="PackageBroadcast addNotification" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="PackageBroadcast addNotification" type="pendingIntentCreation" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r1, 0, $r7, 134217728)"/>
        <node method="PackageBroadcast addNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r9.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void setCustomScript()" methodtrace="void setCustomScript()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.CustomScriptActivity"/>
      <nodes>
        <node method="MainActivity setCustomScript" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity setCustomScript" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/CustomScriptActivity;&quot;)"/>
        <node method="MainActivity setCustomScript" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1201)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidget">
    <singleIntent>
      <method method="void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])" methodtrace="void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidget"/>
      <destinition name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <nodes>
        <node method="ToggleWidget onUpdate" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ToggleWidget onUpdate" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Ldev/ukanth/ufirewall/widget/ToggleWidgetActivity;&quot;)"/>
        <node method="ToggleWidget onUpdate" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r4, 0, $r6, 0)"/>
        <node method="ToggleWidget onUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131296583, $r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void lambda$checkAndAskForBatteryOptimization$0(dev.ukanth.ufirewall.MainActivity,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void lambda$checkAndAskForBatteryOptimization$0(dev.ukanth.ufirewall.MainActivity,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="interICC_android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS"/>
      <sender action="android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS"/>
      <nodes>
        <node method="MainActivity lambda$checkAndAskForBatteryOptimization$0" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MainActivity lambda$checkAndAskForBatteryOptimization$0" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS&quot;)"/>
        <node method="MainActivity lambda$checkAndAskForBatteryOptimization$0" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void showPreferences()" methodtrace="void showPreferences()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <nodes>
        <node method="MainActivity showPreferences" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showPreferences" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/preferences/PreferencesActivity;&quot;)"/>
        <node method="MainActivity showPreferences" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1205)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void startForResult(android.app.Fragment,int)" methodtrace="void startForResult(android.app.Fragment,int)
&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt; --- $r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()
android.content.Intent build()"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender data="null"/>
      <nodes>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r3, null, $r1, $r2)"/>
        <node method="LockPatternActivity$IntentBuilder startForResult" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void showLog()" methodtrace="void showLog()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.OldLogActivity"/>
      <nodes>
        <node method="MainActivity showLog" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showLog" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/OldLogActivity;&quot;)"/>
        <node method="MainActivity showLog" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1203)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void showLog()" methodtrace="void showLog()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.LogActivity"/>
      <nodes>
        <node method="MainActivity showLog" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showLog" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/LogActivity;&quot;)"/>
        <node method="MainActivity showLog" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1203)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void start()" methodtrace="void start()
&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt; --- $r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()
android.content.Intent build()"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender data="null"/>
      <nodes>
        <node method="LockPatternActivity$IntentBuilder start" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity$IntentBuilder: android.content.Intent build()&gt;()"/>
        <node method="LockPatternActivity$IntentBuilder start" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity$IntentBuilder start" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r3, null, $r1, $r2)"/>
        <node method="LockPatternActivity$IntentBuilder start" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.StatusWidget">
    <singleIntent>
      <method method="void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])" methodtrace="void showWidget(android.content.Context,android.appwidget.AppWidgetManager,int[],boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.TOGGLE_REQUEST"/>
      <nodes>
        <node method="StatusWidget showWidget" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="StatusWidget showWidget" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="StatusWidget showWidget" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.TOGGLE_REQUEST&quot;)"/>
        <node method="StatusWidget showWidget" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r4, -1, $r6, 134217728)"/>
        <node method="StatusWidget showWidget" type="sendOutWrapperredIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131296604, $r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.AppDetailActivity">
    <singleIntent>
      <method method="void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)" methodtrace="void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)
&lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt;($r2, $r1)
void showInstalledAppDetails(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.AppDetailActivity"/>
      <destinition name="com.android.settings.InstalledAppDetails"/>
      <sender action="android.intent.action.VIEW" extras="String-pkg,String-com.android.settings.ApplicationPkgName" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="Api showInstalledAppDetails" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)&gt;(&quot;com.android.settings&quot;, &quot;com.android.settings.InstalledAppDetails&quot;)"/>
        <node method="Api showInstalledAppDetails" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;($r4, $r3)"/>
        <node method="Api showInstalledAppDetails" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)" methodtrace="void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)
&lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt;($r2, $r1)
void showInstalledAppDetails(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.AppDetailActivity"/>
      <destinition name="interICC_android.settings.APPLICATION_DETAILS_SETTINGS"/>
      <sender action="android.settings.APPLICATION_DETAILS_SETTINGS" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="Api showInstalledAppDetails" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r2)"/>
        <node method="Api showInstalledAppDetails" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void lambda$checkAndAskForBatteryOptimization$0(dev.ukanth.ufirewall.MainActivity,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="interICC_android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS"/>
      <sender action="android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS"/>
      <nodes>
        <node method="MainActivity lambda$checkAndAskForBatteryOptimization$0" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MainActivity lambda$checkAndAskForBatteryOptimization$0" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS&quot;)"/>
        <node method="MainActivity lambda$checkAndAskForBatteryOptimization$0" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.AppDetailActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;dev.ukanth.ufirewall.activity.AppDetailActivity: void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.activity.AppDetailActivity: void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)&gt;($r2, $r3, $r1)
void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)
&lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt;($r2, $r1)
void showInstalledAppDetails(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.AppDetailActivity"/>
      <destinition name="com.android.settings.InstalledAppDetails"/>
      <sender action="android.intent.action.VIEW" extras="String-pkg,String-com.android.settings.ApplicationPkgName" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="Api showInstalledAppDetails" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)&gt;(&quot;com.android.settings&quot;, &quot;com.android.settings.InstalledAppDetails&quot;)"/>
        <node method="Api showInstalledAppDetails" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;($r4, $r3)"/>
        <node method="Api showInstalledAppDetails" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;dev.ukanth.ufirewall.activity.AppDetailActivity: void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.activity.AppDetailActivity: void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)&gt;($r2, $r3, $r1)
void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)
&lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt;($r2, $r1)
void showInstalledAppDetails(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.AppDetailActivity"/>
      <destinition name="com.android.settings.InstalledAppDetails"/>
      <sender action="android.intent.action.VIEW" extras="String-pkg:new java.lang.String,String-com.android.settings.ApplicationPkgName:new java.lang.String" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="Api showInstalledAppDetails" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;($r4, $r3)"/>
        <node method="Api showInstalledAppDetails" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)&gt;(&quot;com.android.settings&quot;, &quot;com.android.settings.InstalledAppDetails&quot;)"/>
        <node method="Api showInstalledAppDetails" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;($r4, $r3)"/>
        <node method="Api showInstalledAppDetails" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;dev.ukanth.ufirewall.activity.AppDetailActivity: void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.activity.AppDetailActivity: void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)&gt;($r2, $r3, $r1)
void lambda$onCreate$1(dev.ukanth.ufirewall.activity.AppDetailActivity,java.lang.String,android.view.View)
&lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void showInstalledAppDetails(android.content.Context,java.lang.String)&gt;($r2, $r1)
void showInstalledAppDetails(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.AppDetailActivity"/>
      <destinition name="interICC_android.settings.APPLICATION_DETAILS_SETTINGS"/>
      <sender action="android.settings.APPLICATION_DETAILS_SETTINGS" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="Api showInstalledAppDetails" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="Api showInstalledAppDetails" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r2)"/>
        <node method="Api showInstalledAppDetails" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void startCustomRules()" methodtrace="void startCustomRules()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.CustomRulesActivity"/>
      <nodes>
        <node method="MainActivity startCustomRules" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="MainActivity startCustomRules" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/CustomRulesActivity;&quot;)"/>
        <node method="MainActivity startCustomRules" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startCustomRules()" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void deviceCheck()" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void finishWithNegativeResult(int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void finishWithNegativeResult(int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void finishWithNegativeResult(int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void finishWithNegativeResult(int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void finishWithNegativeResult(int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.LogActivity">
    <singleIntent>
      <method method="void onItemClick(dev.ukanth.ufirewall.log.LogData)" methodtrace="void onItemClick(dev.ukanth.ufirewall.log.LogData)"/>
      <source name="dev.ukanth.ufirewall.activity.LogActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.LogDetailActivity"/>
      <sender extras="int-DATA:new int"/>
      <nodes>
        <node method="LogActivity$2 onItemClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LogActivity$2 onItemClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Ldev/ukanth/ufirewall/activity/LogDetailActivity;&quot;)"/>
        <node method="LogActivity$2 onItemClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;DATA&quot;, $i0)"/>
        <node method="LogActivity$2 onItemClick" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;dev.ukanth.ufirewall.activity.LogActivity: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onItemClick(dev.ukanth.ufirewall.log.LogData)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.activity.LogActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void disableFirewall()" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableFirewall()" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableFirewall()" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void access$300(dev.ukanth.ufirewall.MainActivity)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$300(dev.ukanth.ufirewall.MainActivity)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$300(dev.ukanth.ufirewall.MainActivity)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void complete(dev.ukanth.ufirewall.service.RootCommand,int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void complete(dev.ukanth.ufirewall.service.RootCommand,int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void createNotification(android.content.Context)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void sendUpdate(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void processCommands(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processCommands(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processCommands(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void runNextSubmission()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runNextSubmission()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runNextSubmission()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runNextSubmission()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void reOpenShell(android.content.Context)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void runScriptAsRoot(android.content.Context,java.util.List,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runScriptAsRoot(android.content.Context,java.util.List,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runScriptAsRoot(android.content.Context,java.util.List,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runScriptAsRoot(android.content.Context,java.util.List,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runScriptAsRoot(android.content.Context,java.util.List,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void finishWithResultOk(char[])" methodtrace="void finishWithResultOk(char[])
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;(-1, $r3)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithResultOk" type="ReceiveIntentFromOutMethod" unit="$r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithResultOk" type="sendOutWrapperredIntent" unit="virtualinvoke $r8.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, -1, $r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void startRootShell(eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startRootShell(eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startRootShell(eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startRootShell(eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startRootShell(eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void access$2900(dev.ukanth.ufirewall.MainActivity,eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$2900(dev.ukanth.ufirewall.MainActivity,eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$2900(dev.ukanth.ufirewall.MainActivity,eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$2900(dev.ukanth.ufirewall.MainActivity,eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$2900(dev.ukanth.ufirewall.MainActivity,eu.chainfire.libsuperuser.Shell$Interactive)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Void)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void purgeRules()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void purgeRules()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void purgeRules()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void purgeRules()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void purgeRules()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.StatusWidget">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1, 0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void invokeAction()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void invokeAction()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void invokeAction()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void invokeAction()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void invokeAction()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void invokeAction()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="void appendNetworkInterfaces(android.content.Context)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void appendNetworkInterfaces(android.content.Context)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void appendNetworkInterfaces(android.content.Context)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void appendNetworkInterfaces(android.content.Context)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void appendNetworkInterfaces(android.content.Context)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void access$100(haibison.android.lockpattern.LockPatternActivity,char[])" methodtrace="void finishWithResultOk(char[])
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;(-1, $r3)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithResultOk" type="ReceiveIntentFromOutMethod" unit="$r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithResultOk" type="sendOutWrapperredIntent" unit="virtualinvoke $r8.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, -1, $r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void access$500(haibison.android.lockpattern.LockPatternActivity,int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$500(haibison.android.lockpattern.LockPatternActivity,int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$500(haibison.android.lockpattern.LockPatternActivity,int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$500(haibison.android.lockpattern.LockPatternActivity,int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$500(haibison.android.lockpattern.LockPatternActivity,int)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void finishWithResultOk(char[])
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;(-1, $r3)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithResultOk" type="ReceiveIntentFromOutMethod" unit="$r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithResultOk" type="sendOutWrapperredIntent" unit="virtualinvoke $r8.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, -1, $r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.LogActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="dev.ukanth.ufirewall.activity.LogActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.OldLogActivity"/>
      <nodes>
        <node method="LogActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="LogActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/OldLogActivity;&quot;)"/>
        <node method="LogActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.activity.LogActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void access$200(dev.ukanth.ufirewall.widget.ToggleWidgetActivity,int)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(dev.ukanth.ufirewall.widget.ToggleWidgetActivity,int)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(dev.ukanth.ufirewall.widget.ToggleWidgetActivity,int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(dev.ukanth.ufirewall.widget.ToggleWidgetActivity,int)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(dev.ukanth.ufirewall.widget.ToggleWidgetActivity,int)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(dev.ukanth.ufirewall.widget.ToggleWidgetActivity,int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(dev.ukanth.ufirewall.widget.ToggleWidgetActivity,int)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(dev.ukanth.ufirewall.widget.ToggleWidgetActivity,int)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void fileSelected(java.io.File)" methodtrace="void fileSelected(java.io.File)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="MainActivity$8$2 fileSelected" type="ReceiveIntentFromOutMethod" unit="$r8 = virtualinvoke $r5.&lt;dev.ukanth.ufirewall.MainActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="MainActivity$8$2 fileSelected" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;dev.ukanth.ufirewall.MainActivity: void startActivity(android.content.Intent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.OldLogActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="dev.ukanth.ufirewall.activity.OldLogActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.LogActivity"/>
      <nodes>
        <node method="OldLogActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="OldLogActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/LogActivity;&quot;)"/>
        <node method="OldLogActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.activity.OldLogActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.Boolean)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Boolean)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Boolean)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void lambda$processCommands$0(dev.ukanth.ufirewall.service.RootCommand,int,int,java.util.List)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$processCommands$0(dev.ukanth.ufirewall.service.RootCommand,int,int,java.util.List)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$processCommands$0(dev.ukanth.ufirewall.service.RootCommand,int,int,java.util.List)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$processCommands$0(dev.ukanth.ufirewall.service.RootCommand,int,int,java.util.List)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void onCommandResult(int,int,java.util.List)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCommandResult(int,int,java.util.List)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCommandResult(int,int,java.util.List)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCommandResult(int,int,java.util.List)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.FirewallService">
    <singleIntent>
      <method method="void addNotification()" methodtrace="void addNotification()"/>
      <source name="dev.ukanth.ufirewall.service.FirewallService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="FirewallService addNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="FirewallService addNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="FirewallService addNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="FirewallService addNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="FirewallService addNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="FirewallService addNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, $r5, 134217728)"/>
        <node method="FirewallService addNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.FirewallService">
    <singleIntent>
      <method method="void onCreate()" methodtrace="void addNotification()"/>
      <source name="dev.ukanth.ufirewall.service.FirewallService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="FirewallService addNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="FirewallService addNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="FirewallService addNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="FirewallService addNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="FirewallService addNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="FirewallService addNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, $r5, 134217728)"/>
        <node method="FirewallService addNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void applyOrSaveRules()" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void applyOrSaveRules()" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void applyOrSaveRules()" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void disableOrEnable()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void disableOrEnable()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void disableOrEnable()" methodtrace="void disableOrEnable()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void showRules()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <nodes>
        <node method="MainActivity showRules" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showRules" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/RulesActivity;&quot;)"/>
        <node method="MainActivity showRules" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1202)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void showAbout()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.HelpActivity"/>
      <nodes>
        <node method="MainActivity showAbout" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showAbout" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/HelpActivity;&quot;)"/>
        <node method="MainActivity showAbout" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1200)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void setCustomScript()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.CustomScriptActivity"/>
      <nodes>
        <node method="MainActivity setCustomScript" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity setCustomScript" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/CustomScriptActivity;&quot;)"/>
        <node method="MainActivity setCustomScript" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1201)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void showLog()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.OldLogActivity"/>
      <nodes>
        <node method="MainActivity showLog" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showLog" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/OldLogActivity;&quot;)"/>
        <node method="MainActivity showLog" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1203)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void showPreferences()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <nodes>
        <node method="MainActivity showPreferences" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showPreferences" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/preferences/PreferencesActivity;&quot;)"/>
        <node method="MainActivity showPreferences" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1205)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void showLog()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.activity.LogActivity"/>
      <nodes>
        <node method="MainActivity showLog" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity showLog" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/activity/LogActivity;&quot;)"/>
        <node method="MainActivity showLog" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1203)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void disableOrEnable()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void setCustomScript(java.lang.String,java.lang.String)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void setCustomScript(java.lang.String,java.lang.String)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void setCustomScript(java.lang.String,java.lang.String)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void access$1000(dev.ukanth.ufirewall.MainActivity)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1000(dev.ukanth.ufirewall.MainActivity)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1000(dev.ukanth.ufirewall.MainActivity)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1000(dev.ukanth.ufirewall.MainActivity)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1000(dev.ukanth.ufirewall.MainActivity)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="void appendIfconfig(android.content.Context)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void appendIfconfig(android.content.Context)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void appendIfconfig(android.content.Context)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void appendIfconfig(android.content.Context)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void appendIfconfig(android.content.Context)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startAction(int)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void runProfile(java.lang.String)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runProfile(java.lang.String)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runProfile(java.lang.String)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runProfile(java.lang.String)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runProfile(java.lang.String)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void runProfile(java.lang.String)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void switchAction()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void switchAction()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void switchAction()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void switchAction()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void switchAction()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void switchAction()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void lambda$startShellInBackground$2(int,int,java.util.List)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$startShellInBackground$2(int,int,java.util.List)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$startShellInBackground$2(int,int,java.util.List)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$startShellInBackground$2(int,int,java.util.List)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void onCommandResult(int,int,java.util.List)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCommandResult(int,int,java.util.List)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCommandResult(int,int,java.util.List)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCommandResult(int,int,java.util.List)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.preferences.PreferencesActivity">
    <singleIntent>
      <method method="void ruleChangeApplyRules(dev.ukanth.ufirewall.events.RulesEvent)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void ruleChangeApplyRules(dev.ukanth.ufirewall.events.RulesEvent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void ruleChangeApplyRules(dev.ukanth.ufirewall.events.RulesEvent)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void ruleChangeApplyRules(dev.ukanth.ufirewall.events.RulesEvent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void ruleChangeApplyRules(dev.ukanth.ufirewall.events.RulesEvent)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.preferences.PreferencesActivity">
    <singleIntent>
      <method method="void logDmesgChangeApplyRules(dev.ukanth.ufirewall.events.LogChangeEvent)" methodtrace="void logDmesgChangeApplyRules(dev.ukanth.ufirewall.events.LogChangeEvent)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void logDmesgChangeApplyRules(dev.ukanth.ufirewall.events.LogChangeEvent)" methodtrace="void logDmesgChangeApplyRules(dev.ukanth.ufirewall.events.LogChangeEvent)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.preferences.PreferencesActivity">
    <singleIntent>
      <method method="void lambda$subscribe$0(dev.ukanth.ufirewall.preferences.PreferencesActivity,java.lang.Object)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$subscribe$0(dev.ukanth.ufirewall.preferences.PreferencesActivity,java.lang.Object)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$subscribe$0(dev.ukanth.ufirewall.preferences.PreferencesActivity,java.lang.Object)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$subscribe$0(dev.ukanth.ufirewall.preferences.PreferencesActivity,java.lang.Object)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$subscribe$0(dev.ukanth.ufirewall.preferences.PreferencesActivity,java.lang.Object)" methodtrace="void logDmesgChangeApplyRules(dev.ukanth.ufirewall.events.LogChangeEvent)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$subscribe$0(dev.ukanth.ufirewall.preferences.PreferencesActivity,java.lang.Object)" methodtrace="void logDmesgChangeApplyRules(dev.ukanth.ufirewall.events.LogChangeEvent)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$subscribe$0(dev.ukanth.ufirewall.preferences.PreferencesActivity,java.lang.Object)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.preferences.PreferencesActivity">
    <singleIntent>
      <method method="void accept(java.lang.Object)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void accept(java.lang.Object)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void accept(java.lang.Object)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void accept(java.lang.Object)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void accept(java.lang.Object)" methodtrace="void logDmesgChangeApplyRules(dev.ukanth.ufirewall.events.LogChangeEvent)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void accept(java.lang.Object)" methodtrace="void logDmesgChangeApplyRules(dev.ukanth.ufirewall.events.LogChangeEvent)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="PreferencesActivity logDmesgChangeApplyRules" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void accept(java.lang.Object)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void errorNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="Api errorNotification" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="Api errorNotification" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:new boolean"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void errorNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api errorNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api errorNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api errorNotification" type="pendingIntentCreation" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api errorNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r9.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>
        <node method="Api errorNotification" type="sendOutWrapperredIntent" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void errorNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="Api errorNotification" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="Api errorNotification" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:new boolean"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void errorNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api errorNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api errorNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api errorNotification" type="pendingIntentCreation" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api errorNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r9.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>
        <node method="Api errorNotification" type="sendOutWrapperredIntent" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void access$1400(dev.ukanth.ufirewall.MainActivity)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1400(dev.ukanth.ufirewall.MainActivity)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1400(dev.ukanth.ufirewall.MainActivity)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Boolean doInBackground(java.lang.Void[])" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object doInBackground(java.lang.Object[])" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.ApplyOnBootService">
    <singleIntent>
      <method method="void lambda$onStartCommand$0(dev.ukanth.ufirewall.service.ApplyOnBootService)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onStartCommand$0(dev.ukanth.ufirewall.service.ApplyOnBootService)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onStartCommand$0(dev.ukanth.ufirewall.service.ApplyOnBootService)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onStartCommand$0(dev.ukanth.ufirewall.service.ApplyOnBootService)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onStartCommand$0(dev.ukanth.ufirewall.service.ApplyOnBootService)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.ApplyOnBootService">
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity$6 onClick" type="ReceiveIntentFromOutMethod" unit="$r5 = virtualinvoke $r4.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity$6 onClick" type="sendOutWrapperredIntent" unit="virtualinvoke $r15.&lt;android.app.PendingIntent: void send()&gt;()"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void finishWithResultOk(char[])
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;(-1, $r3)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithResultOk" type="ReceiveIntentFromOutMethod" unit="$r3 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithResultOk" type="sendOutWrapperredIntent" unit="virtualinvoke $r8.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, -1, $r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void access$100()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$100()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$100()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$100()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.broadcast.OnBootReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)"/>
      <source name="dev.ukanth.ufirewall.broadcast.OnBootReceiver"/>
      <destinition name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <nodes>
        <node method="OnBootReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="OnBootReceiver onReceive" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/ApplyOnBootService;&quot;)"/>
        <node method="OnBootReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)"/>
      <source name="dev.ukanth.ufirewall.broadcast.OnBootReceiver"/>
      <destinition name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <nodes>
        <node method="OnBootReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="OnBootReceiver onReceive" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/ApplyOnBootService;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="void populateData(android.content.Context)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void populateData(android.content.Context)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void populateData(android.content.Context)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void populateData(android.content.Context)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void populateData(android.content.Context)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$4)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$4)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$4)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void menuActiviated()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="boolean onSelection(com.afollestad.materialdialogs.MaterialDialog,android.view.View,int,java.lang.CharSequence)" methodtrace="void fileSelected(java.io.File)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="MainActivity$8$2 fileSelected" type="ReceiveIntentFromOutMethod" unit="$r8 = virtualinvoke $r5.&lt;dev.ukanth.ufirewall.MainActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="MainActivity$8$2 fileSelected" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;dev.ukanth.ufirewall.MainActivity: void startActivity(android.content.Intent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onSelection(com.afollestad.materialdialogs.MaterialDialog,android.view.View,int,java.lang.CharSequence)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r5, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r5, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1, 0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r5, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, 1, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, 1, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, 1, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.plugin.FireReceiver">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r6, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r6, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r6, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="boolean onKeyDown(int,android.view.KeyEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onKeyDown(int,android.view.KeyEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onKeyDown(int,android.view.KeyEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onKeyDown(int,android.view.KeyEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onKeyDown(int,android.view.KeyEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.ToggleTileService">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1, 0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.StatusWidget">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1, 0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.plugin.FireReceiver">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r3, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r3, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r3, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="haibison.android.lockpattern.LockPatternActivity">
    <singleIntent>
      <method method="boolean onTouchEvent(android.view.MotionEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onTouchEvent(android.view.MotionEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onTouchEvent(android.view.MotionEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onTouchEvent(android.view.MotionEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onTouchEvent(android.view.MotionEvent)" methodtrace="void finishWithNegativeResult(int)
&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt; --- virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: void setResult(int,android.content.Intent)&gt;($i0, $r2)
void setResult(int,android.content.Intent)"/>
      <source name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender extras="int-new java.lang.String.RETRY_COUNT:new int"/>
      <nodes>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;($r1, $i1)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="sendOutWrapperredIntent" unit="virtualinvoke $r7.&lt;android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)&gt;(r0, $i0, $r2)"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;haibison.android.lockpattern.LockPatternActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockPatternActivity setResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
        <node method="LockPatternActivity finishWithNegativeResult" type="ReceiveIntentFromParatMethod" unit="parameter1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.plugin.FireReceiver">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r3, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r3, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r3, 1, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.plugin.FireReceiver">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void errorNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="Api errorNotification" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="Api errorNotification" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:new boolean"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void errorNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api errorNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api errorNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api errorNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api errorNotification" type="pendingIntentCreation" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api errorNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r9.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>
        <node method="Api errorNotification" type="sendOutWrapperredIntent" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void lambda$cbFunc$0(dev.ukanth.ufirewall.MainActivity$RunApply$1,dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.LogService">
    <singleIntent>
      <method method="void onTaskRemoved(android.content.Intent)" methodtrace="void onTaskRemoved(android.content.Intent)"/>
      <source name="dev.ukanth.ufirewall.service.LogService"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="LogService onTaskRemoved" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="LogService onTaskRemoved" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="LogService onTaskRemoved" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r2, 1001, $r1, 1073741824)"/>
        <node method="LogService onTaskRemoved" type="sendOutWrapperredIntent" unit="virtualinvoke $r6.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(2, 1000L, $r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetActivity">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r4, 0, 0)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.ToggleTileService">
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:1, 0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)" methodtrace="void cbFunc(dev.ukanth.ufirewall.service.RootCommand)
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r2, $z0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.preferences.PreferencesActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.broadcast.PackageBroadcast">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.broadcast.PackageBroadcast"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.broadcast.PackageBroadcast"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.broadcast.PackageBroadcast"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.broadcast.PackageBroadcast"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void addNotification(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.broadcast.PackageBroadcast"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="PackageBroadcast addNotification" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="PackageBroadcast addNotification" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="PackageBroadcast addNotification" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="PackageBroadcast addNotification" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="PackageBroadcast addNotification" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="PackageBroadcast addNotification" type="pendingIntentCreation" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r1, 0, $r7, 134217728)"/>
        <node method="PackageBroadcast addNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r9.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.broadcast.PackageBroadcast"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.StatusWidget">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void showWidget(android.content.Context,android.appwidget.AppWidgetManager,int[],boolean)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.TOGGLE_REQUEST"/>
      <nodes>
        <node method="StatusWidget showWidget" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="StatusWidget showWidget" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="StatusWidget showWidget" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.TOGGLE_REQUEST&quot;)"/>
        <node method="StatusWidget showWidget" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r4, -1, $r6, 134217728)"/>
        <node method="StatusWidget showWidget" type="sendOutWrapperredIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131296604, $r7)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.plugin.FireReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.plugin.FireReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.broadcast.ConnectivityChangeReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.broadcast.ConnectivityChangeReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.broadcast.ConnectivityChangeReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.broadcast.ConnectivityChangeReceiver"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.broadcast.ConnectivityChangeReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.broadcast.ConnectivityChangeReceiver"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="void run()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.LogActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.activity.LogActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.activity.LogActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RootShellService">
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RootShellService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.RulesApplyService">
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.RulesApplyService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RulesApplyService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RulesApplyService"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.RulesApplyService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void onHandleIntent(android.content.Intent)"/>
      <source name="dev.ukanth.ufirewall.service.RulesApplyService"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="RulesApplyService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="RulesApplyService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void onHandleIntent(android.content.Intent)"/>
      <source name="dev.ukanth.ufirewall.service.RulesApplyService"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="RulesApplyService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="RulesApplyService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="RulesApplyService onHandleIntent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void onHandleIntent(android.content.Intent)"/>
      <source name="dev.ukanth.ufirewall.service.RulesApplyService"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="RulesApplyService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="RulesApplyService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.RulesApplyService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.preferences.PreferencesActivity">
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SetAttribute" unit="specialinvoke $r9.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SetAttribute" unit="specialinvoke $r9.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SetAttribute" unit="specialinvoke $r9.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SetAttribute" unit="specialinvoke $r9.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SetAttribute" unit="specialinvoke $r9.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)" methodtrace="void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.preferences.PreferencesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="PreferencesActivity onSharedPreferenceChanged" type="SetAttribute" unit="specialinvoke $r9.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onItemSelected(android.widget.AdapterView,android.view.View,int,long)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onItemSelected(android.widget.AdapterView,android.view.View,int,long)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onItemSelected(android.widget.AdapterView,android.view.View,int,long)" methodtrace="void applyOrSaveRules()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;($r1, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.ApplyOnBootService">
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="int onStartCommand(android.content.Intent,int,int)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.service.FirewallService"/>
      <nodes>
        <node method="ApplyOnBootService onStartCommand" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApplyOnBootService onStartCommand" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Ldev/ukanth/ufirewall/service/FirewallService;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="int onStartCommand(android.content.Intent,int,int)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.service.LogService"/>
      <nodes>
        <node method="ApplyOnBootService onStartCommand" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApplyOnBootService onStartCommand" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ldev/ukanth/ufirewall/service/LogService;&quot;)"/>
        <node method="ApplyOnBootService onStartCommand" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.service.ApplyOnBootService: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="int onStartCommand(android.content.Intent,int,int)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.service.FirewallService"/>
      <nodes>
        <node method="ApplyOnBootService onStartCommand" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApplyOnBootService onStartCommand" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Ldev/ukanth/ufirewall/service/FirewallService;&quot;)"/>
        <node method="ApplyOnBootService onStartCommand" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.service.ApplyOnBootService: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.ApplyOnBootService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.activity.RulesActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="interICC_android.intent.action.SEND"/>
      <sender action="android.intent.action.SEND" type="plain/text" extras="String-android.intent.extra.TEXT:new java.lang.String\n\n\n\n,String-android.intent.extra.SUBJECT:AFWall+ problem report - vnew java.lang.String,String[]-android.intent.extra.EMAIL:newarray (java.lang.String)[1]"/>
      <nodes>
        <node method="RulesActivity onOptionsItemSelected" type="CreateMethod" unit="$r8 = new android.content.Intent"/>
        <node method="RulesActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r8.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>
        <node method="RulesActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r8.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;plain/text&quot;)"/>
        <node method="RulesActivity onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke $r8.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])&gt;(&quot;android.intent.extra.EMAIL&quot;, $r9)"/>
        <node method="RulesActivity onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke $r8.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.SUBJECT&quot;, $r4)"/>
        <node method="RulesActivity onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke $r8.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.TEXT&quot;, $r7)"/>
        <node method="RulesActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.activity.RulesActivity: void startActivity(android.content.Intent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.activity.RulesActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void updateNotification(boolean,android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.widget.ToggleWidgetOldActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.MainActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <sender action="android.intent.action.MAIN" category="android.intent.category.LAUNCHER" flags="FLAG_ACTIVITY_CLEAR_TOP FLAG_ACTIVITY_SINGLE_TOP "/>
      <nodes>
        <node method="Api updateNotification" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="Api updateNotification" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.MAIN&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.LAUNCHER&quot;)"/>
        <node method="Api updateNotification" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(603979776)"/>
        <node method="Api updateNotification" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 134217728)"/>
        <node method="Api updateNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r10.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS:0"/>
      <nodes>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void requestPassword()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="haibison.android.lockpattern.LockPatternActivity"/>
      <sender action="new java.lang.String.COMPARE_PATTERN" data="null" extras="char[]-new java.lang.String.PATTERN"/>
      <nodes>
        <node method="SecurityUtil requestPassword" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SecurityUtil requestPassword" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)&gt;($r1, null, $r3, class &quot;Lhaibison/android/lockpattern/LockPatternActivity;&quot;)"/>
        <node method="SecurityUtil requestPassword" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])&gt;($r5, $r6)"/>
        <node method="SecurityUtil requestPassword" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 9755)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" data="market://search?q=pub:ukpriya"/>
      <nodes>
        <node method="Api$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="Api$5 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>
        <node method="Api$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void registerNetworkObserver()"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.service.FirewallService"/>
      <nodes>
        <node method="MainActivity registerNetworkObserver" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="MainActivity registerNetworkObserver" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Ldev/ukanth/ufirewall/service/FirewallService;&quot;)"/>
        <node method="MainActivity registerNetworkObserver" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;dev.ukanth.ufirewall.MainActivity: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void disableFirewall()
&lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void setEnabled(android.content.Context,boolean,boolean)&gt;(r0, 0, 1)
void setEnabled(android.content.Context,boolean,boolean)"/>
      <source name="dev.ukanth.ufirewall.MainActivity"/>
      <destinition name="dev.ukanth.ufirewall.widget.StatusWidget"/>
      <sender action="dev.ukanth.ufirewall.intent.action.STATUS_CHANGED" extras="boolean-dev.ukanth.ufirewall.intent.extra.STATUS"/>
      <nodes>
        <node method="Api setEnabled" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="Api setEnabled" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/widget/StatusWidget;&quot;)"/>
        <node method="Api setEnabled" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;dev.ukanth.ufirewall.intent.action.STATUS_CHANGED&quot;)"/>
        <node method="Api setEnabled" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;dev.ukanth.ufirewall.intent.extra.STATUS&quot;, $z0)"/>
        <node method="Api setEnabled" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="dev.ukanth.ufirewall.service.ToggleTileService">
    <singleIntent>
      <method method="void onClick()" methodtrace="void lambda$sendUpdate$1(dev.ukanth.ufirewall.service.RootCommand)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$3"/>
      <sender action="UPDATEUI" extras="int-INDEX:new int,int-SIZE:0L"/>
      <nodes>
        <node method="RootShellService lambda$sendUpdate$1" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;UPDATEUI&quot;)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;SIZE&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;INDEX&quot;, $i0)"/>
        <node method="RootShellService lambda$sendUpdate$1" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick()" methodtrace="void reOpenShell(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.service.RootShellService"/>
      <nodes>
        <node method="RootShellService reOpenShell" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="RootShellService reOpenShell" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Ldev/ukanth/ufirewall/service/RootShellService;&quot;)"/>
        <node method="RootShellService reOpenShell" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick()" methodtrace="void complete(dev.ukanth.ufirewall.service.RootCommand,int)
&lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt; --- staticinvoke &lt;dev.ukanth.ufirewall.Api: void sendToastBroadcast(android.content.Context,java.lang.String)&gt;($r2, $r4)
void sendToastBroadcast(android.content.Context,java.lang.String)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity$2"/>
      <sender action="TOAST" extras="String-MSG"/>
      <nodes>
        <node method="Api sendToastBroadcast" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="Api sendToastBroadcast" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;TOAST&quot;)"/>
        <node method="Api sendToastBroadcast" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MSG&quot;, $r1)"/>
        <node method="Api sendToastBroadcast" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick()" methodtrace="void createNotification(android.content.Context)"/>
      <source name="dev.ukanth.ufirewall.service.ToggleTileService"/>
      <destinition name="dev.ukanth.ufirewall.MainActivity"/>
      <nodes>
        <node method="RootShellService createNotification" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="RootShellService createNotification" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Ldev/ukanth/ufirewall/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
</root>
