<?xml version="1.0" encoding="UTF-8"?>

<root>
  <Component source="com.csipsimple.ui.prefs.cupcake.MainPrefs">
    <singleIntent>
      <method method="android.content.Intent getIntentForType(int)" methodtrace="android.content.Intent getIntentForType(int)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity"/>
      <sender extras="int-preference_type"/>
      <nodes>
        <node method="MainPrefs getIntentForType" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MainPrefs getIntentForType" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/cupcake/PrefsLoaderActivity;&quot;)"/>
        <node method="MainPrefs getIntentForType" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;preference_type&quot;, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.PrefsFilters">
    <singleIntent>
      <method method="void onAccountClicked(long)" methodtrace="void onAccountClicked(long)"/>
      <source name="com.csipsimple.ui.prefs.PrefsFilters"/>
      <destinition name="com.csipsimple.ui.filters.AccountFilters"/>
      <sender extras="long-id"/>
      <nodes>
        <node method="PrefsFilters onAccountClicked" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="PrefsFilters onAccountClicked" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/filters/AccountFilters;&quot;)"/>
        <node method="PrefsFilters onAccountClicked" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>
        <node method="PrefsFilters onAccountClicked" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.PrefsFilters: void startActivity(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void startSipStack()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipStack()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipStack()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipStack()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipStack()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipStack()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipStack()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <sender action="com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void access$9(com.csipsimple.service.SipService)" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$9(com.csipsimple.service.SipService)" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$9(com.csipsimple.service.SipService)" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$9(com.csipsimple.service.SipService)" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$9(com.csipsimple.service.SipService)" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$9(com.csipsimple.service.SipService)" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$9(com.csipsimple.service.SipService)" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <sender action="com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.hc.MainPrefs">
    <singleIntent>
      <method method="void onBuildHeaders(java.util.List)" methodtrace="void onBuildHeaders(java.util.List)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST"/>
      <nodes>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onBuildHeaders(java.util.List)" methodtrace="void onBuildHeaders(java.util.List)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST"/>
      <nodes>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onBuildHeaders(java.util.List)" methodtrace="void onBuildHeaders(java.util.List)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST"/>
      <nodes>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onBuildHeaders(java.util.List)" methodtrace="void onBuildHeaders(java.util.List)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters, com.csipsimple.ui.prefs.PrefsFilters"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST, com.csipsimple.ui.action.PREFS_FAST"/>
      <nodes>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="MainPrefs onBuildHeaders" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onBuildHeaders" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onActivityResult(int,int,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_SIP_REQUEST_RESTART"/>
      <nodes>
        <node method="SipHome onActivityResult" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SipHome onActivityResult" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>
        <node method="SipHome onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.outgoingcall.OutgoingCallChooser">
    <singleIntent>
      <method method="void finishServiceIfNeeded(boolean)" methodtrace="void finishServiceIfNeeded(boolean)"/>
      <source name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_OUTGOING_UNREGISTER, com.csipsimple.service.ACTION_DEFER_OUTGOING_UNREGISTER" extras="Parcelable@-outgoing_activity"/>
      <nodes>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r3)"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void sendBroadcast(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.incall.InCallActivity">
    <singleIntent>
      <method method="void onNewIntent(android.content.Intent)" methodtrace="void onNewIntent(android.content.Intent)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <nodes>
        <node method="InCallActivity onNewIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="InCallActivity onNewIntent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void setIntent(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <sender action="com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void doRun()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <sender action="com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.outgoingcall.OutgoingCallChooser">
    <singleIntent>
      <method method="void onBackPressed()" methodtrace="void finishServiceIfNeeded(boolean)"/>
      <source name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_OUTGOING_UNREGISTER, com.csipsimple.service.ACTION_DEFER_OUTGOING_UNREGISTER" extras="Parcelable@-outgoing_activity"/>
      <nodes>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r3)"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void sendBroadcast(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void disconnect(boolean)" methodtrace="void disconnect(boolean)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_OUTGOING_UNREGISTER" extras="Parcelable@-outgoing_activity:new android.content.ComponentName"/>
      <nodes>
        <node method="SipHome disconnect" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="SipHome disconnect" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_OUTGOING_UNREGISTER&quot;)"/>
        <node method="SipHome disconnect" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="SipHome disconnect" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void sendBroadcast(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void access$6(com.csipsimple.ui.SipHome,boolean)" methodtrace="void disconnect(boolean)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_OUTGOING_UNREGISTER" extras="Parcelable@-outgoing_activity:new android.content.ComponentName"/>
      <nodes>
        <node method="SipHome disconnect" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="SipHome disconnect" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_OUTGOING_UNREGISTER&quot;)"/>
        <node method="SipHome disconnect" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="SipHome disconnect" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void sendBroadcast(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.outgoingcall.OutgoingCallChooser">
    <singleIntent>
      <method method="boolean onKeyDown(int,android.view.KeyEvent)" methodtrace="void finishServiceIfNeeded(boolean)"/>
      <source name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_OUTGOING_UNREGISTER, com.csipsimple.service.ACTION_DEFER_OUTGOING_UNREGISTER" extras="Parcelable@-outgoing_activity"/>
      <nodes>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r3)"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="OutgoingCallChooser finishServiceIfNeeded" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void sendBroadcast(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.cupcake.MainPrefs">
    <singleIntent>
      <method method="void onListItemClick(android.widget.ListView,android.view.View,int,long)" methodtrace="void onListItemClick(android.widget.ListView,android.view.View,int,long)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <nodes>
        <node method="MainPrefs onListItemClick" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onListItemClick" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onListItemClick" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onListItemClick" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onListItemClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: void startActivity(android.content.Intent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.Downloader">
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void onHandleIntent(android.content.Intent)"/>
      <source name="com.csipsimple.service.Downloader"/>
      <nodes>
        <node method="Downloader onHandleIntent" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, r5, 134217728)"/>
        <node method="Downloader onHandleIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r6.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>
        <node method="Downloader onHandleIntent" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, r5, 134217728)"/>
        <node method="Downloader onHandleIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r6.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void onHandleIntent(android.content.Intent)"/>
      <source name="com.csipsimple.service.Downloader"/>
      <destinition name="com.csipsimple.ui.SipHome"/>
      <nodes>
        <node method="Downloader onHandleIntent" type="CreateMethod" unit="r5 = new android.content.Intent"/>
        <node method="Downloader onHandleIntent" type="SetAttribute" unit="specialinvoke r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/SipHome;&quot;)"/>
        <node method="Downloader onHandleIntent" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, r5, 134217728)"/>
        <node method="Downloader onHandleIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r6.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void onHandleIntent(android.content.Intent)"/>
      <source name="com.csipsimple.service.Downloader"/>
      <nodes>
        <node method="Downloader onHandleIntent" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;com.csipsimple.service.Downloader: android.content.Intent getIntent()&gt;()"/>
        <node method="Downloader onHandleIntent" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, r5, 134217728)"/>
        <node method="Downloader onHandleIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r6.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void onHandleIntent(android.content.Intent)"/>
      <source name="com.csipsimple.service.Downloader"/>
      <nodes>
        <node method="Downloader onHandleIntent" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;com.csipsimple.service.Downloader: android.content.Intent getIntent()&gt;()"/>
        <node method="Downloader onHandleIntent" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, r5, 134217728)"/>
        <node method="Downloader onHandleIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r6.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void adjustVolume(com.csipsimple.api.SipCallSession,int,int)" methodtrace="void adjustVolume(com.csipsimple.api.SipCallSession,int,int)
&lt;com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)&gt; --- virtualinvoke $r4.&lt;com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)&gt;($i2, $i0, $i1)
void adjustStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)&gt; --- virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)&gt;($i0, $i1, 1)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, -9999)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void adjustVolume(com.csipsimple.api.SipCallSession,int,int)" methodtrace="void adjustVolume(com.csipsimple.api.SipCallSession,int,int)
&lt;com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)&gt; --- virtualinvoke $r4.&lt;com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)&gt;($i2, $i0, $i1)
void adjustStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)&gt; --- virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)&gt;($i0, $i1, 1)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, -9999)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void adjustVolume(com.csipsimple.api.SipCallSession,int,int)" methodtrace="void adjustVolume(com.csipsimple.api.SipCallSession,int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.ui.incall.InCallMediaControl"/>
      <sender extras="int-android.intent.extra.KEY_EVENT" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipService$1 adjustVolume" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipService$1 adjustVolume" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/csipsimple/ui/incall/InCallMediaControl;&quot;)"/>
        <node method="SipService$1 adjustVolume" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;android.intent.extra.KEY_EVENT&quot;, $i0)"/>
        <node method="SipService$1 adjustVolume" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipService$1 adjustVolume" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;com.csipsimple.service.SipService: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void adjustVolume(com.csipsimple.api.SipCallSession,int,int)" methodtrace="void adjustVolume(com.csipsimple.api.SipCallSession,int,int)
&lt;com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)&gt; --- virtualinvoke $r4.&lt;com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)&gt;($i2, $i0, $i1)
void adjustStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)&gt; --- virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)&gt;($i0, $i1, 1)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, -9999)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index:-9999"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.AudioTester">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="com.csipsimple.ui.prefs.AudioTester"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="AudioTester onResume" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AudioTester onResume" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>
        <node method="AudioTester onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.AudioTester: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void sendMessage(java.lang.String,java.lang.String,long)" methodtrace="void sendMessage(java.lang.String,java.lang.String,long)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="SipService$1 sendMessage" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="SipService$1 sendMessage" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>
        <node method="SipService$1 sendMessage" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;com.csipsimple.service.SipService: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.wizards.BasePrefsWizard">
    <singleIntent>
      <method method="void saveAccount(java.lang.String)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAccount(java.lang.String)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAccount(java.lang.String)" methodtrace="void saveAccount(java.lang.String)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_SIP_REQUEST_RESTART"/>
      <nodes>
        <node method="BasePrefsWizard saveAccount" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="BasePrefsWizard saveAccount" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>
        <node method="BasePrefsWizard saveAccount" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void sendBroadcast(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAccount(java.lang.String)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.wizards.BasePrefsWizard">
    <singleIntent>
      <method method="void saveAccount()" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAccount()" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAccount()" methodtrace="void saveAccount(java.lang.String)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_SIP_REQUEST_RESTART"/>
      <nodes>
        <node method="BasePrefsWizard saveAccount" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="BasePrefsWizard saveAccount" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>
        <node method="BasePrefsWizard saveAccount" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void sendBroadcast(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAccount()" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void doRun()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.wizards.BasePrefsWizard">
    <singleIntent>
      <method method="void saveAndFinish()" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAndFinish()" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAndFinish()" methodtrace="void saveAccount(java.lang.String)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_SIP_REQUEST_RESTART"/>
      <nodes>
        <node method="BasePrefsWizard saveAccount" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="BasePrefsWizard saveAccount" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>
        <node method="BasePrefsWizard saveAccount" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void sendBroadcast(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveAndFinish()" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void updateRegistrationsState()" methodtrace="void notifyRegisteredAccounts(java.util.ArrayList,boolean)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.ui.SipHome"/>
      <sender action="com.csipsimple.phone.action.DIALER" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipNotifications notifyRegisteredAccounts" type="CreateMethod" unit="r4 = new android.content.Intent"/>
        <node method="SipNotifications notifyRegisteredAccounts" type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.DIALER&quot;)"/>
        <node method="SipNotifications notifyRegisteredAccounts" type="SetAttribute" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipNotifications notifyRegisteredAccounts" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, r4, 134217728)"/>
        <node method="SipNotifications notifyRegisteredAccounts" type="sendOutWrapperredIntent" unit="virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void onChange(boolean)" methodtrace="void notifyRegisteredAccounts(java.util.ArrayList,boolean)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.ui.SipHome"/>
      <sender action="com.csipsimple.phone.action.DIALER" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipNotifications notifyRegisteredAccounts" type="CreateMethod" unit="r4 = new android.content.Intent"/>
        <node method="SipNotifications notifyRegisteredAccounts" type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.DIALER&quot;)"/>
        <node method="SipNotifications notifyRegisteredAccounts" type="SetAttribute" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipNotifications notifyRegisteredAccounts" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, r4, 134217728)"/>
        <node method="SipNotifications notifyRegisteredAccounts" type="sendOutWrapperredIntent" unit="virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void doRun()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <sender action="com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void doRun()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.cupcake.MainPrefs">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.AudioTester"/>
      <nodes>
        <node method="PrefsLogic onMainActivityOptionsItemSelected" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="PrefsLogic onMainActivityOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/csipsimple/ui/prefs/AudioTester;&quot;)"/>
        <node method="PrefsLogic onMainActivityOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void restartSipStack()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void restartSipStack()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void restartSipStack()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void restartSipStack()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void restartSipStack()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void restartSipStack()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void restartSipStack()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <sender action="com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.wizards.BasePrefsWizard">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void saveAccount(java.lang.String)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_SIP_REQUEST_RESTART"/>
      <nodes>
        <node method="BasePrefsWizard saveAccount" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="BasePrefsWizard saveAccount" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>
        <node method="BasePrefsWizard saveAccount" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void sendBroadcast(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.AccountWidgetProvider">
    <singleIntent>
      <method method="android.widget.RemoteViews buildUpdate(android.content.Context,int)" methodtrace="android.widget.RemoteViews buildUpdate(android.content.Context,int)
&lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt; --- $r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)
android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)"/>
      <source name="com.csipsimple.widgets.AccountWidgetProvider"/>
      <destinition name="com.csipsimple.service.DeviceStateReceiver"/>
      <sender action="com.csipsimple.accounts.activate" extras="boolean-active,long-id"/>
      <nodes>
        <node method="AccountWidgetProvider buildUpdate" type="ReceiveIntentFromRetValue" unit="$r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.accounts.activate&quot;)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;active&quot;, $z0)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, r1, 134217728)"/>
        <node method="AccountWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099902, $r11)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.AccountWidgetProvider">
    <singleIntent>
      <method method="void updateWidget(android.content.Context)" methodtrace="void updateWidget(android.content.Context)
&lt;com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt;($r0, i0)
android.widget.RemoteViews buildUpdate(android.content.Context,int)
&lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt; --- $r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)
android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)"/>
      <source name="com.csipsimple.widgets.AccountWidgetProvider"/>
      <nodes>
        <node method="AccountWidgetProvider buildUpdate" type="ReceiveIntentFromRetValue" unit="$r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)"/>
        <node method="AccountWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099902, $r11)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.AccountWidgetConfigure">
    <singleIntent>
      <method method="void onAccountClicked(long)" methodtrace="android.widget.RemoteViews buildUpdate(android.content.Context,int)
&lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt; --- $r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)
android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)"/>
      <source name="com.csipsimple.widgets.AccountWidgetConfigure"/>
      <destinition name="com.csipsimple.service.DeviceStateReceiver"/>
      <sender action="com.csipsimple.accounts.activate" extras="boolean-active,long-id"/>
      <nodes>
        <node method="AccountWidgetProvider buildUpdate" type="ReceiveIntentFromRetValue" unit="$r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.accounts.activate&quot;)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;active&quot;, $z0)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, r1, 134217728)"/>
        <node method="AccountWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099902, $r11)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.hc.MainPrefs">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.AudioTester"/>
      <nodes>
        <node method="PrefsLogic onMainActivityOptionsItemSelected" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="PrefsLogic onMainActivityOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/csipsimple/ui/prefs/AudioTester;&quot;)"/>
        <node method="PrefsLogic onMainActivityOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void doRun()" methodtrace="void stopRecording(int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.CALL_RECORDED"/>
      <sender action="com.csipsimple.service.CALL_RECORDED" extras="Parcelable@-call_info:null,String-file_path"/>
      <nodes>
        <node method="PjSipService stopRecording" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="PjSipService stopRecording" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.CALL_RECORDED&quot;)"/>
        <node method="PjSipService stopRecording" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;call_info&quot;, $r6)"/>
        <node method="PjSipService stopRecording" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;file_path&quot;, r5)"/>
        <node method="PjSipService stopRecording" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doRun()" methodtrace="void onBroadcastCallState(com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.CALL_CHANGED"/>
      <sender action="com.csipsimple.service.CALL_CHANGED" extras="Parcelable@-call_info"/>
      <nodes>
        <node method="UAStateReceiver onBroadcastCallState" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="UAStateReceiver onBroadcastCallState" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.CALL_CHANGED&quot;)"/>
        <node method="UAStateReceiver onBroadcastCallState" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;call_info&quot;, $r1)"/>
        <node method="UAStateReceiver onBroadcastCallState" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.utils.TimerWrapper">
    <singleIntent>
      <method method="int doSchedule(int,int)" methodtrace="int doSchedule(int,int)
&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt; --- $r1 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)
android.app.PendingIntent getPendingIntentForTimer(int)"/>
      <source name="com.csipsimple.utils.TimerWrapper"/>
      <destinition name="com.csipsimple.utils.TimerWrapper"/>
      <sender action="com.csipsimple.PJ_TIMER" data="timer://" extras="int-entry"/>
      <nodes>
        <node method="TimerWrapper doSchedule" type="ReceiveIntentFromRetValue" unit="$r1 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.PJ_TIMER&quot;)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetAttribute" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;entry&quot;, $i0)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, r1, 268435456)"/>
        <node method="TimerWrapper doSchedule" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(2, $l2, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.utils.TimerWrapper">
    <singleIntent>
      <method method="int schedule(int,int,int)" methodtrace="int schedule(int,int,int)
&lt;com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)&gt; --- $i0 = specialinvoke $r0.&lt;com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)&gt;($i1, $i2)
int doSchedule(int,int)
&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt; --- $r1 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)
android.app.PendingIntent getPendingIntentForTimer(int)"/>
      <source name="com.csipsimple.utils.TimerWrapper"/>
      <destinition name="com.csipsimple.utils.TimerWrapper"/>
      <sender action="com.csipsimple.PJ_TIMER" data="timer://" extras="int-entry"/>
      <nodes>
        <node method="TimerWrapper doSchedule" type="ReceiveIntentFromRetValue" unit="$r1 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.PJ_TIMER&quot;)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetAttribute" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;entry&quot;, $i0)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, r1, 268435456)"/>
        <node method="TimerWrapper doSchedule" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(2, $l2, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int schedule(int,int,int)" methodtrace="int schedule(int,int,int)
&lt;com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)&gt; --- $i0 = specialinvoke $r0.&lt;com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)&gt;($i1, $i2)
int doSchedule(int,int)
&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt; --- $r1 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)
android.app.PendingIntent getPendingIntentForTimer(int)"/>
      <source name="com.csipsimple.utils.TimerWrapper"/>
      <destinition name="com.csipsimple.utils.TimerWrapper"/>
      <sender action="com.csipsimple.PJ_TIMER" data="timer://" extras="int-entry"/>
      <nodes>
        <node method="TimerWrapper doSchedule" type="ReceiveIntentFromRetValue" unit="$r1 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)"/>
        <node method="TimerWrapper doSchedule" type="ReceiveIntentFromRetValue" unit="$r1 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.PJ_TIMER&quot;)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetAttribute" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;entry&quot;, $i0)"/>
        <node method="TimerWrapper getPendingIntentForTimer" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, r1, 268435456)"/>
        <node method="TimerWrapper doSchedule" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(2, $l2, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void postStartSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void postStartSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void postStartSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFast"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void postStartSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <sender flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void postStartSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void access$4(com.csipsimple.ui.SipHome)" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$4(com.csipsimple.ui.SipHome)" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$4(com.csipsimple.ui.SipHome)" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFast"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$4(com.csipsimple.ui.SipHome)" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <sender flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$4(com.csipsimple.ui.SipHome)" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void run()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFast"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <sender flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void run()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <sender action="com.csipsimple.service.SipService" extras="Parcelable@-outgoing_activity:new android.content.ComponentName"/>
      <nodes>
        <node method="SipHome$3 run" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="SipHome$3 run" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>
        <node method="SipHome$3 run" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="SipHome$3 run" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;com.csipsimple.ui.SipHome: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void asyncSanityCheck()" methodtrace="void onClick(android.content.DialogInterface,int)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.Downloader"/>
      <sender data="http://nightlies.csipsimple.com/" extras="String-outpath,boolean-checkMd5:1,Parcelable@-pendingIntent,String-title:CSipSimple nightly build,int-icon:2130837685"/>
      <nodes>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r8)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/service/Downloader;&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;icon&quot;, 2130837685)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;title&quot;, &quot;CSipSimple nightly build&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;checkMd5&quot;, 1)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;outpath&quot;, $r7)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;pendingIntent&quot;, $r11)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SendIntent2ICC" unit="virtualinvoke $r9.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void asyncSanityCheck()" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void asyncSanityCheck()" methodtrace="void onClick(android.content.DialogInterface,int)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.DeviceStateReceiver"/>
      <sender action="com.csipsimple.action.APPLY_NIGHTLY" extras="int-dl_version:new int,Parcelable@-pendingIntent"/>
      <nodes>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/service/DeviceStateReceiver;&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.csipsimple.action.APPLY_NIGHTLY&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;dl_version&quot;, $i0)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="pendingIntentCreation" unit="$r11 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r9, 0, r3, 134217728)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;pendingIntent&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void asyncSanityCheck()" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void asyncSanityCheck()" methodtrace="java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void access$3(com.csipsimple.ui.SipHome)" methodtrace="void onClick(android.content.DialogInterface,int)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.Downloader"/>
      <sender data="http://nightlies.csipsimple.com/" extras="String-outpath,boolean-checkMd5:1,Parcelable@-pendingIntent,String-title:CSipSimple nightly build,int-icon:2130837685"/>
      <nodes>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r8)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/service/Downloader;&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;icon&quot;, 2130837685)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;title&quot;, &quot;CSipSimple nightly build&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;checkMd5&quot;, 1)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;outpath&quot;, $r7)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;pendingIntent&quot;, $r11)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SendIntent2ICC" unit="virtualinvoke $r9.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$3(com.csipsimple.ui.SipHome)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$3(com.csipsimple.ui.SipHome)" methodtrace="void onClick(android.content.DialogInterface,int)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.DeviceStateReceiver"/>
      <sender action="com.csipsimple.action.APPLY_NIGHTLY" extras="int-dl_version:new int,Parcelable@-pendingIntent"/>
      <nodes>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/service/DeviceStateReceiver;&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.csipsimple.action.APPLY_NIGHTLY&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;dl_version&quot;, $i0)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="pendingIntentCreation" unit="$r11 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r9, 0, r3, 134217728)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;pendingIntent&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$3(com.csipsimple.ui.SipHome)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$3(com.csipsimple.ui.SipHome)" methodtrace="java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void run()" methodtrace="void onClick(android.content.DialogInterface,int)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.Downloader"/>
      <sender data="http://nightlies.csipsimple.com/" extras="String-outpath,boolean-checkMd5:1,Parcelable@-pendingIntent,String-title:CSipSimple nightly build,int-icon:2130837685"/>
      <nodes>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r8)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/service/Downloader;&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;icon&quot;, 2130837685)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;title&quot;, &quot;CSipSimple nightly build&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;checkMd5&quot;, 1)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;outpath&quot;, $r7)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;pendingIntent&quot;, $r11)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SendIntent2ICC" unit="virtualinvoke $r9.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void onClick(android.content.DialogInterface,int)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.DeviceStateReceiver"/>
      <sender action="com.csipsimple.action.APPLY_NIGHTLY" extras="int-dl_version:new int,Parcelable@-pendingIntent"/>
      <nodes>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/service/DeviceStateReceiver;&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.csipsimple.action.APPLY_NIGHTLY&quot;)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;dl_version&quot;, $i0)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="pendingIntentCreation" unit="$r11 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r9, 0, r3, 134217728)"/>
        <node method="NightlyUpdater$UpdaterPopupLauncher$1 onClick" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;pendingIntent&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void onDestroy()" methodtrace="void disconnect(boolean)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_OUTGOING_UNREGISTER" extras="Parcelable@-outgoing_activity:new android.content.ComponentName"/>
      <nodes>
        <node method="SipHome disconnect" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="SipHome disconnect" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_OUTGOING_UNREGISTER&quot;)"/>
        <node method="SipHome disconnect" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="SipHome disconnect" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void sendBroadcast(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void onAttachFragment(android.support.v4.app.Fragment)" methodtrace="void viewDetails(int,long[])"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.calllog.CallLogDetailsActivity"/>
      <sender extras="long[]-EXTRA_CALL_LOG_IDS"/>
      <nodes>
        <node method="CallLogListFragment viewDetails" type="CreateMethod" unit="r4 = new android.content.Intent"/>
        <node method="CallLogListFragment viewDetails" type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/ui/calllog/CallLogDetailsActivity;&quot;)"/>
        <node method="CallLogListFragment viewDetails" type="SetIntentExtra" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;EXTRA_CALL_LOG_IDS&quot;, $r1)"/>
        <node method="CallLogListFragment viewDetails" type="SendIntent2ICC" unit="virtualinvoke $r9.&lt;android.support.v4.app.FragmentActivity: void startActivity(android.content.Intent)&gt;(r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onAttachFragment(android.support.v4.app.Fragment)" methodtrace="void viewDetails(int,java.lang.String,java.lang.String)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.messages.MessageActivity"/>
      <sender extras="Bundle-,(,)"/>
      <nodes>
        <node method="ConversationsListFragment viewDetails" type="CreateMethod" unit="r4 = new android.content.Intent"/>
        <node method="ConversationsListFragment viewDetails" type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/ui/messages/MessageActivity;&quot;)"/>
        <node method="ConversationsListFragment viewDetails" type="SetIntentExtra" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)&gt;($r5)"/>
        <node method="ConversationsListFragment viewDetails" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void startActivity(android.content.Intent)&gt;(r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.PickupSipUri">
    <singleIntent>
      <method method="void sendPositiveResult()" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void sendPositiveResult()" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void sendPositiveResult()" methodtrace="java.util.Map getAvailableCallHandlers(android.content.Context)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <destinition name="com.csipsimple.plugins.telephony.CallHandler"/>
      <sender action="com.csipsimple.phone.action.HANDLE_CALL"/>
      <nodes>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.HANDLE_CALL&quot;)"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void sendPositiveResult()" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.PickupSipUri">
    <singleIntent>
      <method method="void access$0(com.csipsimple.ui.PickupSipUri)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$0(com.csipsimple.ui.PickupSipUri)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$0(com.csipsimple.ui.PickupSipUri)" methodtrace="java.util.Map getAvailableCallHandlers(android.content.Context)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <destinition name="com.csipsimple.plugins.telephony.CallHandler"/>
      <sender action="com.csipsimple.phone.action.HANDLE_CALL"/>
      <nodes>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.HANDLE_CALL&quot;)"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$0(com.csipsimple.ui.PickupSipUri)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.ShortcutWidgetProvider">
    <singleIntent>
      <method method="android.widget.RemoteViews buildUpdate(android.content.Context,int)" methodtrace="android.widget.RemoteViews buildUpdate(android.content.Context,int)"/>
      <source name="com.csipsimple.widgets.ShortcutWidgetProvider"/>
      <nodes>
        <node method="ShortcutWidgetProvider buildUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 0)"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r2.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099907, $r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.ShortcutWidgetProvider">
    <singleIntent>
      <method method="void updateWidget(android.content.Context)" methodtrace="android.widget.RemoteViews buildUpdate(android.content.Context,int)"/>
      <source name="com.csipsimple.widgets.ShortcutWidgetProvider"/>
      <nodes>
        <node method="ShortcutWidgetProvider buildUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 0)"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r2.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099907, $r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.ShortcutWidgetConfigure">
    <singleIntent>
      <method method="void onListItemClick(android.widget.ListView,android.view.View,int,long)" methodtrace="android.widget.RemoteViews buildUpdate(android.content.Context,int)"/>
      <source name="com.csipsimple.widgets.ShortcutWidgetConfigure"/>
      <nodes>
        <node method="ShortcutWidgetProvider buildUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 0)"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r2.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099907, $r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.plugins.telephony.CallHandler">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.plugins.telephony.CallHandler"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.plugins.telephony.CallHandler"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void makeCallWithOptions(java.lang.String,int,android.os.Bundle)" methodtrace="void makeCallWithOptions(java.lang.String,int,android.os.Bundle)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="SipService$1 makeCallWithOptions" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="SipService$1 makeCallWithOptions" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>
        <node method="SipService$1 makeCallWithOptions" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;com.csipsimple.service.SipService: android.content.ComponentName startService(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.wizards.BasePrefsWizard">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.ui.filters.AccountFilters"/>
      <sender extras="long-id:new long"/>
      <nodes>
        <node method="BasePrefsWizard onOptionsItemSelected" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="BasePrefsWizard onOptionsItemSelected" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/filters/AccountFilters;&quot;)"/>
        <node method="BasePrefsWizard onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l1)"/>
        <node method="BasePrefsWizard onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void startActivityForResult(android.content.Intent,int)&gt;(r2, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="void saveAccount(java.lang.String)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_SIP_REQUEST_RESTART"/>
      <nodes>
        <node method="BasePrefsWizard saveAccount" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="BasePrefsWizard saveAccount" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>
        <node method="BasePrefsWizard saveAccount" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void sendBroadcast(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.wizards.WizardChooser"/>
      <nodes>
        <node method="BasePrefsWizard onOptionsItemSelected" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="BasePrefsWizard onOptionsItemSelected" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/WizardChooser;&quot;)"/>
        <node method="BasePrefsWizard onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void startActivityForResult(android.content.Intent,int)&gt;(r2, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.AccountWidgetProvider">
    <singleIntent>
      <method method="void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])" methodtrace="void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])
&lt;com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt;($r1, i0)
android.widget.RemoteViews buildUpdate(android.content.Context,int)
&lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt; --- $r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)
android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)"/>
      <source name="com.csipsimple.widgets.AccountWidgetProvider"/>
      <nodes>
        <node method="AccountWidgetProvider buildUpdate" type="ReceiveIntentFromRetValue" unit="$r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)"/>
        <node method="AccountWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099902, $r11)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String"/>
      <nodes>
        <node method="SipHome onOptionsItemSelected" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="SipHome onOptionsItemSelected" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r4)"/>
        <node method="SipHome onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivityForResult(android.content.Intent,int)&gt;(r3, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <nodes>
        <node method="SipHome onOptionsItemSelected" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="SipHome onOptionsItemSelected" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
        <node method="SipHome onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.prefs.hc.MainPrefs, com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <sender action="com.csipsimple.ui.action.PREFS_GLOBAL"/>
      <nodes>
        <node method="SipHome onOptionsItemSelected" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="SipHome onOptionsItemSelected" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_GLOBAL&quot;)"/>
        <node method="SipHome onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivityForResult(android.content.Intent,int)&gt;(r3, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="void disconnect(boolean)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_OUTGOING_UNREGISTER" extras="Parcelable@-outgoing_activity:new android.content.ComponentName"/>
      <nodes>
        <node method="SipHome disconnect" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="SipHome disconnect" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_OUTGOING_UNREGISTER&quot;)"/>
        <node method="SipHome disconnect" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="SipHome disconnect" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void sendBroadcast(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="Serializable@-id:null, $l1,String-wizard:new java.lang.String"/>
      <nodes>
        <node method="SipHome onOptionsItemSelected" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="SipHome onOptionsItemSelected" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r4)"/>
        <node method="SipHome onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;id&quot;, r19)"/>
        <node method="SipHome onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivityForResult(android.content.Intent,int)&gt;(r3, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.PickupSipUri">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="java.util.Map getAvailableCallHandlers(android.content.Context)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <destinition name="com.csipsimple.plugins.telephony.CallHandler"/>
      <sender action="com.csipsimple.phone.action.HANDLE_CALL"/>
      <nodes>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.HANDLE_CALL&quot;)"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.ShortcutWidgetProvider">
    <singleIntent>
      <method method="void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])" methodtrace="android.widget.RemoteViews buildUpdate(android.content.Context,int)"/>
      <source name="com.csipsimple.widgets.ShortcutWidgetProvider"/>
      <nodes>
        <node method="ShortcutWidgetProvider buildUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 0)"/>
        <node method="ShortcutWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r2.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099907, $r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity">
    <singleIntent>
      <method method="void afterBuildPrefs()" methodtrace="void afterBuildPrefs()
&lt;com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)&gt; --- staticinvoke &lt;com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)&gt;(r0, r0, $i0)
void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity"/>
      <destinition name="com.csipsimple.ui.prefs.Codecs"/>
      <nodes>
        <node method="PrefsLogic afterBuildPrefsForType" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="PrefsLogic afterBuildPrefsForType" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/csipsimple/ui/prefs/Codecs;&quot;)"/>
        <node method="PrefsLogic afterBuildPrefsForType" type="SendIntent2ICC" unit="virtualinvoke $r6.&lt;android.preference.Preference: void setIntent(android.content.Intent)&gt;(r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void afterBuildPrefs()" methodtrace="java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.hc.MainPrefs">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.hc.MainPrefs"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.prefs.cupcake.MainPrefs">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427477, 2131427478, 2130837700, $r5)
void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(20)
android.content.Intent getIntentForType(int)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427479, 2131427480, 2130837704, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(0)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427481, 2131427482, 2130837702, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(60)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427483, 2131427484, 2130837705, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(40)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427485, 2131427486, 2130837699, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427796, 2131427797, 2130837701, $r5)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity"/>
      <sender extras="int-preference_type"/>
      <nodes>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromRetValue" unit="$r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(0)"/>
        <node method="MainPrefs getIntentForType" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MainPrefs getIntentForType" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/cupcake/PrefsLoaderActivity;&quot;)"/>
        <node method="MainPrefs getIntentForType" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;preference_type&quot;, $i0)"/>
        <node method="MainPrefs$PrefGroup &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427477, 2131427478, 2130837700, $r5)
void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(20)
android.content.Intent getIntentForType(int)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427479, 2131427480, 2130837704, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(0)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427481, 2131427482, 2130837702, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(60)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427483, 2131427484, 2130837705, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(40)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427485, 2131427486, 2130837699, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427796, 2131427797, 2130837701, $r5)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity"/>
      <sender extras="int-preference_type"/>
      <nodes>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromRetValue" unit="$r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(60)"/>
        <node method="MainPrefs getIntentForType" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MainPrefs getIntentForType" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/cupcake/PrefsLoaderActivity;&quot;)"/>
        <node method="MainPrefs getIntentForType" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;preference_type&quot;, $i0)"/>
        <node method="MainPrefs$PrefGroup &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427477, 2131427478, 2130837700, $r5)
void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(20)
android.content.Intent getIntentForType(int)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427479, 2131427480, 2130837704, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(0)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427481, 2131427482, 2130837702, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(60)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427483, 2131427484, 2130837705, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(40)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427485, 2131427486, 2130837699, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427796, 2131427797, 2130837701, $r5)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity"/>
      <sender extras="int-preference_type"/>
      <nodes>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromRetValue" unit="$r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(40)"/>
        <node method="MainPrefs getIntentForType" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MainPrefs getIntentForType" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/cupcake/PrefsLoaderActivity;&quot;)"/>
        <node method="MainPrefs getIntentForType" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;preference_type&quot;, $i0)"/>
        <node method="MainPrefs$PrefGroup &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427477, 2131427478, 2130837700, $r5)
void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(20)
android.content.Intent getIntentForType(int)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427479, 2131427480, 2130837704, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(0)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427481, 2131427482, 2130837702, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(60)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427483, 2131427484, 2130837705, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(40)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427485, 2131427486, 2130837699, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427796, 2131427797, 2130837701, $r5)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity"/>
      <sender extras="int-preference_type"/>
      <nodes>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromRetValue" unit="$r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(20)"/>
        <node method="MainPrefs getIntentForType" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MainPrefs getIntentForType" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/cupcake/PrefsLoaderActivity;&quot;)"/>
        <node method="MainPrefs getIntentForType" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;preference_type&quot;, $i0)"/>
        <node method="MainPrefs$PrefGroup &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427477, 2131427478, 2130837700, $r5)
void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(20)
android.content.Intent getIntentForType(int)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427479, 2131427480, 2130837704, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(0)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427481, 2131427482, 2130837702, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(60)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427483, 2131427484, 2130837705, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt; --- $r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(40)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427485, 2131427486, 2130837699, $r5)
&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt; --- specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427796, 2131427797, 2130837701, $r5)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFilters"/>
      <nodes>
        <node method="MainPrefs onCreate" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="MainPrefs onCreate" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>
        <node method="MainPrefs$PrefGroup &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="MainPrefs onCreate" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.prefs.cupcake.MainPrefs"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="void restoreAudioState()
&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt; --- virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)
void setStreamVolume(int,int,int)
&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt; --- specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)
void broadcastVolumeWillBeUpdated(int,int)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_org.openintents.audio.action_volume_update"/>
      <sender action="org.openintents.audio.action_volume_update" extras="int-org.openintents.audio.extra_ringer_mode:-9999,int-org.openintents.audio.extra_stream_type,int-org.openintents.audio.extra_volume_index"/>
      <nodes>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>
        <node method="MediaManager broadcastVolumeWillBeUpdated" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.plugins.codecs.ReceiverSilk"/>
      <sender action="com.csipsimple.codecs.action.REGISTER_CODEC"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object runWithReturn()" methodtrace="boolean sipStart()
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)
java.util.Map getDynPlugins(android.content.Context,java.lang.String)
&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt; --- $r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <sender action="com.csipsimple.plugins.action.REGISTER_VIDEO"/>
      <nodes>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
        <node method="ExtraPlugins getDynPlugins" type="CreateMethod" unit="r6 = new android.content.Intent"/>
        <node method="ExtraPlugins getDynPlugins" type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>
        <node method="ExtraPlugins getDynPlugins" type="sendOutWrapperredIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.outgoingcall.OutgoingCallChooser">
    <singleIntent>
      <method method="void connectService()" methodtrace="void connectService()"/>
      <source name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <sender action="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="OutgoingCallChooser connectService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="OutgoingCallChooser connectService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>
        <node method="OutgoingCallChooser connectService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;(r2, $r4, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void connectService()" methodtrace="void connectService()"/>
      <source name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <sender action="com.csipsimple.service.SipService" extras="Parcelable@-outgoing_activity"/>
      <nodes>
        <node method="OutgoingCallChooser connectService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="OutgoingCallChooser connectService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>
        <node method="OutgoingCallChooser connectService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r3)"/>
        <node method="OutgoingCallChooser connectService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: android.content.ComponentName startService(android.content.Intent)&gt;(r2)"/>
        <node method="OutgoingCallChooser connectService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;(r2, $r4, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.outgoingcall.OutgoingCallChooser">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void connectService()"/>
      <source name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <sender action="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="OutgoingCallChooser connectService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="OutgoingCallChooser connectService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>
        <node method="OutgoingCallChooser connectService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;(r2, $r4, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void connectService()"/>
      <source name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <sender action="com.csipsimple.service.SipService" extras="Parcelable@-outgoing_activity"/>
      <nodes>
        <node method="OutgoingCallChooser connectService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="OutgoingCallChooser connectService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>
        <node method="OutgoingCallChooser connectService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r3)"/>
        <node method="OutgoingCallChooser connectService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: android.content.ComponentName startService(android.content.Intent)&gt;(r2)"/>
        <node method="OutgoingCallChooser connectService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;(r2, $r4, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.widgets.AccountWidgetProvider">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="android.widget.RemoteViews buildUpdate(android.content.Context,int)
&lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt; --- $r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)
android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)"/>
      <source name="com.csipsimple.widgets.AccountWidgetProvider"/>
      <destinition name="com.csipsimple.service.DeviceStateReceiver"/>
      <sender action="com.csipsimple.accounts.activate" extras="boolean-active,long-id"/>
      <nodes>
        <node method="AccountWidgetProvider buildUpdate" type="ReceiveIntentFromRetValue" unit="$r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.accounts.activate&quot;)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;active&quot;, $z0)"/>
        <node method="AccountWidgetProvider getLaunchPendingIntent" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, r1, 134217728)"/>
        <node method="AccountWidgetProvider buildUpdate" type="sendOutWrapperredIntent" unit="virtualinvoke r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099902, $r11)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.incall.InCallActivity">
    <singleIntent>
      <method method="void onTrigger(int,com.csipsimple.api.SipCallSession)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onTrigger(int,com.csipsimple.api.SipCallSession)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.incall.InCallMediaControl"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/incall/InCallMediaControl;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onTrigger(int,com.csipsimple.api.SipCallSession)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
        <node method="InCallActivity onTrigger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivityForResult(android.content.Intent,int)&gt;($r16, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onTrigger(int,com.csipsimple.api.SipCallSession)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <sender extras="int-call_id:new int"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
        <node method="InCallActivity onTrigger" type="SetIntentExtra" unit="virtualinvoke $r16.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;call_id&quot;, $i0)"/>
        <node method="InCallActivity onTrigger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivityForResult(android.content.Intent,int)&gt;($r16, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onTrigger(int,com.csipsimple.api.SipCallSession)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.incall.InCallMediaControl"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/incall/InCallMediaControl;&quot;)"/>
        <node method="InCallActivity onTrigger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivity(android.content.Intent)&gt;($r16)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onTrigger(int,com.csipsimple.api.SipCallSession)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onTrigger(int,com.csipsimple.api.SipCallSession)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <sender extras="int-call_id:new int"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
        <node method="InCallActivity onTrigger" type="SetIntentExtra" unit="virtualinvoke $r16.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;call_id&quot;, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void startSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFast"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <sender flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipService()" methodtrace="void run()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <sender action="com.csipsimple.service.SipService" extras="Parcelable@-outgoing_activity:new android.content.ComponentName"/>
      <nodes>
        <node method="SipHome$3 run" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="SipHome$3 run" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>
        <node method="SipHome$3 run" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="SipHome$3 run" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;com.csipsimple.ui.SipHome: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSipService()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void onResume()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onResume()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="String-wizard:new java.lang.String"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onResume()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.prefs.PrefsFast"/>
      <sender action="com.csipsimple.ui.action.PREFS_FAST" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onResume()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <sender flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="SipHome postStartSipService" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onResume()" methodtrace="void run()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <sender action="com.csipsimple.service.SipService" extras="Parcelable@-outgoing_activity:new android.content.ComponentName"/>
      <nodes>
        <node method="SipHome$3 run" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="SipHome$3 run" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>
        <node method="SipHome$3 run" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="SipHome$3 run" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;com.csipsimple.ui.SipHome: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onResume()" methodtrace="void postStartSipService()"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.ui.account.AccountsEditList"/>
      <nodes>
        <node method="SipHome postStartSipService" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="SipHome postStartSipService" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void makeCall(java.lang.String,int)" methodtrace="void makeCallWithOptions(java.lang.String,int,android.os.Bundle)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="SipService$1 makeCallWithOptions" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="SipService$1 makeCallWithOptions" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>
        <node method="SipService$1 makeCallWithOptions" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;com.csipsimple.service.SipService: android.content.ComponentName startService(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void doRun()" methodtrace="void onBroadcastCallState(com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.CALL_CHANGED"/>
      <sender action="com.csipsimple.service.CALL_CHANGED" extras="Parcelable@-call_info"/>
      <nodes>
        <node method="UAStateReceiver onBroadcastCallState" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="UAStateReceiver onBroadcastCallState" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.CALL_CHANGED&quot;)"/>
        <node method="UAStateReceiver onBroadcastCallState" type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;call_info&quot;, $r1)"/>
        <node method="UAStateReceiver onBroadcastCallState" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.SipService">
    <singleIntent>
      <method method="void doRun()" methodtrace="void broadcastMediaChanged()"/>
      <source name="com.csipsimple.service.SipService"/>
      <destinition name="interICC_com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <sender action="com.csipsimple.service.MEDIA_CHANGED, com.csipsimple.service.MEDIA_CHANGED"/>
      <nodes>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="MediaManager broadcastMediaChanged" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>
        <node method="MediaManager broadcastMediaChanged" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.OutgoingCall">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="java.util.Map getAvailableCallHandlers(android.content.Context)"/>
      <source name="com.csipsimple.service.OutgoingCall"/>
      <destinition name="com.csipsimple.plugins.telephony.CallHandler"/>
      <sender action="com.csipsimple.phone.action.HANDLE_CALL"/>
      <nodes>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.HANDLE_CALL&quot;)"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.service.OutgoingCall"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="OutgoingCall onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="OutgoingCall onReceive" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL&quot;)"/>
        <node method="OutgoingCall onReceive" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>
        <node method="OutgoingCall onReceive" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)&gt;($r1, $r4)"/>
        <node method="OutgoingCall onReceive" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="OutgoingCall onReceive" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.PickupSipUri">
    <singleIntent>
      <method method="boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)" methodtrace="java.util.Map getAvailableCallHandlers(android.content.Context)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <destinition name="com.csipsimple.plugins.telephony.CallHandler"/>
      <sender action="com.csipsimple.phone.action.HANDLE_CALL"/>
      <nodes>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.HANDLE_CALL&quot;)"/>
        <node method="CallHandlerPlugin getAvailableCallHandlers" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.wizards.BasePrefsWizard">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void saveAccount(java.lang.String)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_SIP_REQUEST_RESTART"/>
      <nodes>
        <node method="BasePrefsWizard saveAccount" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="BasePrefsWizard saveAccount" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>
        <node method="BasePrefsWizard saveAccount" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void sendBroadcast(android.content.Intent)&gt;(r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.wizards.BasePrefsWizard">
    <singleIntent>
      <method method="void onPause()" methodtrace="void setPreferenceScreenType(java.lang.Class,java.lang.String,int)"/>
      <source name="com.csipsimple.wizards.BasePrefsWizard"/>
      <sender extras="int-preference_type"/>
      <nodes>
        <node method="GenericPrefs setPreferenceScreenType" type="CreateMethod" unit="r3 = new android.content.Intent"/>
        <node method="GenericPrefs setPreferenceScreenType" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, r1)"/>
        <node method="GenericPrefs setPreferenceScreenType" type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;preference_type&quot;, $i0)"/>
        <node method="GenericPrefs setPreferenceScreenType" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.preference.Preference: void setIntent(android.content.Intent)&gt;(r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.SipHome">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void disconnect(boolean)"/>
      <source name="com.csipsimple.ui.SipHome"/>
      <destinition name="com.csipsimple.service.receiver.DynamicReceiver5"/>
      <sender action="com.csipsimple.service.ACTION_OUTGOING_UNREGISTER" extras="Parcelable@-outgoing_activity:new android.content.ComponentName"/>
      <nodes>
        <node method="SipHome disconnect" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="SipHome disconnect" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_OUTGOING_UNREGISTER&quot;)"/>
        <node method="SipHome disconnect" type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>
        <node method="SipHome disconnect" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void sendBroadcast(android.content.Intent)&gt;(r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.incall.InCallActivity">
    <singleIntent>
      <method method="void onLeftRightChoice(int)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onLeftRightChoice(int)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.incall.InCallMediaControl"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/incall/InCallMediaControl;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onLeftRightChoice(int)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
        <node method="InCallActivity onTrigger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivityForResult(android.content.Intent,int)&gt;($r16, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onLeftRightChoice(int)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <sender extras="int-call_id:new int"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
        <node method="InCallActivity onTrigger" type="SetIntentExtra" unit="virtualinvoke $r16.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;call_id&quot;, $i0)"/>
        <node method="InCallActivity onTrigger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivityForResult(android.content.Intent,int)&gt;($r16, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onLeftRightChoice(int)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.incall.InCallMediaControl"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/incall/InCallMediaControl;&quot;)"/>
        <node method="InCallActivity onTrigger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivity(android.content.Intent)&gt;($r16)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onLeftRightChoice(int)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onLeftRightChoice(int)" methodtrace="void onTrigger(int,com.csipsimple.api.SipCallSession)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.PickupSipUri"/>
      <sender extras="int-call_id:new int"/>
      <nodes>
        <node method="InCallActivity onTrigger" type="CreateMethod" unit="$r16 = new android.content.Intent"/>
        <node method="InCallActivity onTrigger" type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>
        <node method="InCallActivity onTrigger" type="SetIntentExtra" unit="virtualinvoke $r16.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;call_id&quot;, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.service.DeviceStateReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void applyUpdate(android.content.Intent)"/>
      <source name="com.csipsimple.service.DeviceStateReceiver"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" type="application/vnd.android.package-archive" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="NightlyUpdater applyUpdate" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="NightlyUpdater applyUpdate" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="NightlyUpdater applyUpdate" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)&gt;($r3, &quot;application/vnd.android.package-archive&quot;)"/>
        <node method="NightlyUpdater applyUpdate" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="NightlyUpdater applyUpdate" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;com.csipsimple.utils.NightlyUpdater: void applyUpdate(android.content.Intent)&gt; --- virtualinvoke r4.&lt;com.csipsimple.utils.NightlyUpdater: void applyUpdate(android.content.Intent)&gt;($r2)
void applyUpdate(android.content.Intent)"/>
      <source name="com.csipsimple.service.DeviceStateReceiver"/>
      <destinition name="interICC_android.intent.action.VIEW"/>
      <sender action="android.intent.action.VIEW" type="application/vnd.android.package-archive" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="DeviceStateReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.service.DeviceStateReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="NightlyUpdater applyUpdate" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="NightlyUpdater applyUpdate" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="NightlyUpdater applyUpdate" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>
        <node method="NightlyUpdater applyUpdate" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)&gt;($r3, &quot;application/vnd.android.package-archive&quot;)"/>
        <node method="NightlyUpdater applyUpdate" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="NightlyUpdater applyUpdate" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.service.DeviceStateReceiver"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="DeviceStateReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="DeviceStateReceiver onReceive" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>
        <node method="DeviceStateReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.incall.InCallMediaControl">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="com.csipsimple.ui.incall.InCallMediaControl"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <sender action="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="InCallMediaControl onResume" type="CreateMethod" unit="r1 = new android.content.Intent"/>
        <node method="InCallMediaControl onResume" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>
        <node method="InCallMediaControl onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallMediaControl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;(r1, $r2, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.csipsimple.ui.incall.InCallActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.ui.outgoingcall.OutgoingCallChooser"/>
      <sender action="android.intent.action.CALL_PRIVILEGED"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="CreateMethod" unit="r2 = new android.content.Intent"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>
        <node method="PhoneCapabilityTester getPriviledgedIntent" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <nodes>
        <node method="PhoneCapabilityTester getPossibleActivities" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="PhoneCapabilityTester getPossibleActivities" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <destinition name="com.csipsimple.service.SipService"/>
      <nodes>
        <node method="InCallActivity onCreate" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="InCallActivity onCreate" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>
        <node method="InCallActivity onCreate" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, $r7, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="boolean isPhone(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt; --- staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)
void initialize(android.content.Context)
&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt; --- $r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)
android.content.Intent getPriviledgedIntent(java.lang.String)
&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)
java.util.List getPossibleActivities(android.content.Context,android.content.Intent)"/>
      <source name="com.csipsimple.ui.incall.InCallActivity"/>
      <nodes>
        <node method="PhoneCapabilityTester initialize" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>
        <node method="PhoneCapabilityTester initialize" type="SendIntent2ICC" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/>
      </nodes>
    </singleIntent>
  </Component>
</root>
