<?xml version="1.0" encoding="UTF-8"?>

<root>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void scanQrCode()" methodtrace="void scanQrCode()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.SCAN_QR_CODE_WITH_RESULT"/>
      <nodes>
        <node method="ViewKeyActivity scanQrCode" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity scanQrCode" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/ImportKeysProxyActivity;&quot;)"/>
        <node method="ViewKeyActivity scanQrCode" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.SCAN_QR_CODE_WITH_RESULT&quot;)"/>
        <node method="ViewKeyActivity scanQrCode" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void showQrCodeDialog()" methodtrace="void showQrCodeDialog()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.QrCodeViewActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity showQrCodeDialog" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/QrCodeViewActivity;&quot;)"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l1)"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SendIntent2ICC" unit="staticinvoke &lt;android.support.v4.app.ActivityCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)&gt;(r0, $r1, $r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SettingsActivity">
    <singleIntent>
      <method method="boolean onPreferenceClick(android.preference.Preference)" methodtrace="boolean onPreferenceClick(android.preference.Preference)"/>
      <source name="org.sufficientlysecure.keychain.ui.SettingsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SettingsSmartPGPAuthoritiesActivity"/>
      <nodes>
        <node method="SettingsActivity$ExperimentalPrefsFragment$1 onPreferenceClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SettingsActivity$ExperimentalPrefsFragment$1 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/ui/SettingsSmartPGPAuthoritiesActivity;&quot;)"/>
        <node method="SettingsActivity$ExperimentalPrefsFragment$1 onPreferenceClick" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;org.sufficientlysecure.keychain.ui.SettingsActivity$ExperimentalPrefsFragment: void startActivityForResult(android.content.Intent,int)&gt;($r3, 28678)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void certifyFingerprint()" methodtrace="void certifyFingerprint()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CertifyFingerprintActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity certifyFingerprint" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity certifyFingerprint" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CertifyFingerprintActivity;&quot;)"/>
        <node method="ViewKeyActivity certifyFingerprint" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l0)"/>
        <node method="ViewKeyActivity certifyFingerprint" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity">
    <singleIntent>
      <method method="void showOpenKeychainIntent()" methodtrace="void showOpenKeychainIntent()"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <nodes>
        <node method="RemoteSelectIdKeyActivity$RemoteSelectIdentityKeyDialogFragment$1 showOpenKeychainIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="RemoteSelectIdKeyActivity$RemoteSelectIdentityKeyDialogFragment$1 showOpenKeychainIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="RemoteSelectIdKeyActivity$RemoteSelectIdentityKeyDialogFragment$1 showOpenKeychainIntent" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity$RemoteSelectIdentityKeyDialogFragment: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.HelpActivity">
    <singleIntent>
      <method method="void startHelpActivity(android.content.Context,int)" methodtrace="void startHelpActivity(android.content.Context,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.HelpActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.HelpActivity"/>
      <sender extras="int-selected_tab"/>
      <nodes>
        <node method="HelpActivity startHelpActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="HelpActivity startHelpActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/ui/HelpActivity;&quot;)"/>
        <node method="HelpActivity startHelpActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;selected_tab&quot;, $i0)"/>
        <node method="HelpActivity startHelpActivity" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity"/>
      <nodes>
        <node method="RedirectImportKeysActivity$2 onClick" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="RedirectImportKeysActivity$2 onClick" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="RedirectImportKeysActivity$2 onClick" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="android.content.Intent getViewKeyActivityIntent(android.content.Context,long)" methodtrace="android.content.Intent getViewKeyActivityIntent(android.content.Context,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity getViewKeyActivityIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="ViewKeyActivity getViewKeyActivityIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/ui/keyview/ViewKeyActivity;&quot;)"/>
        <node method="ViewKeyActivity getViewKeyActivityIntent" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.PanicExitActivity">
    <singleIntent>
      <method method="void exitAndRemoveFromRecentApps(android.app.Activity)" methodtrace="void exitAndRemoveFromRecentApps(android.app.Activity)"/>
      <source name="org.sufficientlysecure.keychain.ui.PanicExitActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PanicExitActivity"/>
      <sender flags="FLAG_ACTIVITY_CLEAR_TASK FLAG_ACTIVITY_NO_ANIMATION FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="PanicExitActivity exitAndRemoveFromRecentApps" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PanicExitActivity exitAndRemoveFromRecentApps" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PanicExitActivity;&quot;)"/>
        <node method="PanicExitActivity exitAndRemoveFromRecentApps" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(276922368)"/>
        <node method="PanicExitActivity exitAndRemoveFromRecentApps" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void startSafeSlinger()" methodtrace="void startSafeSlinger()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity startSafeSlinger" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/SafeSlingerActivity;&quot;)"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l0)"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)" methodtrace="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="Parcelable@-token_info:new org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo"/>
      <nodes>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;token_info&quot;, $r1)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.ImportKeyResult)" methodtrace="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.ImportKeyResult)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CertifyKeyActivity"/>
      <sender extras="Parcelable@-operation_result,long[]-extra_key_ids:new long[]"/>
      <nodes>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CertifyKeyActivity;&quot;)"/>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;operation_result&quot;, $r3)"/>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_key_ids&quot;, $r2)"/>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)" methodtrace="org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService">
    <singleIntent>
      <method method="java.util.UUID addCryptoInputParcel(android.content.Context,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)" methodtrace="java.util.UUID addCryptoInputParcel(android.content.Context,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)"/>
      <source name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.ADD" extras="long-uuid2,Parcelable@-crypto_input_parcel,long-uuid1"/>
      <nodes>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ADD&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input_parcel&quot;, $r2)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void startBackupActivity()" methodtrace="void startBackupActivity()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.BackupActivity"/>
      <sender extras="long[]-master_key_ids:newarray (long)[1],boolean-export_secret:1"/>
      <nodes>
        <node method="ViewKeyActivity startBackupActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/BackupActivity;&quot;)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;export_secret&quot;, 1)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void certifyImmediate()" methodtrace="void certifyImmediate()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CertifyKeyActivity"/>
      <sender extras="long[]-extra_key_ids:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity certifyImmediate" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity certifyImmediate" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CertifyKeyActivity;&quot;)"/>
        <node method="ViewKeyActivity certifyImmediate" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity certifyImmediate" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void lambda$onCreate$3$ViewKeyActivity(android.view.View)" methodtrace="void showQrCodeDialog()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.QrCodeViewActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity showQrCodeDialog" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/QrCodeViewActivity;&quot;)"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l1)"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SendIntent2ICC" unit="staticinvoke &lt;android.support.v4.app.ActivityCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)&gt;(r0, $r1, $r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClickViewKey()"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <sender extras="Serializable@-master_key_id:new java.lang.Long"/>
      <nodes>
        <node method="SecurityProblemPresenter onClickViewKey" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/keyview/ViewKeyActivity;&quot;)"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;master_key_id&quot;, $r3)"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void showQrCodeDialog()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.QrCodeViewActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity showQrCodeDialog" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/QrCodeViewActivity;&quot;)"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l1)"/>
        <node method="ViewKeyActivity showQrCodeDialog" type="SendIntent2ICC" unit="staticinvoke &lt;android.support.v4.app.ActivityCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)&gt;(r0, $r1, $r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SafeSlingerActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.ImportKeyResult)" methodtrace="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.ImportKeyResult)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CertifyKeyActivity"/>
      <sender extras="Parcelable@-operation_result,long-certify_key_id:new long,long[]-extra_key_ids:new long[]"/>
      <nodes>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CertifyKeyActivity;&quot;)"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;operation_result&quot;, $r3)"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_key_ids&quot;, $r2)"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;certify_key_id&quot;, $l0)"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService">
    <singleIntent>
      <method method="void addCryptoInputParcel(android.content.Context,android.content.Intent,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)" methodtrace="java.util.UUID addCryptoInputParcel(android.content.Context,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)"/>
      <source name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.ADD" extras="long-uuid2,Parcelable@-crypto_input_parcel,long-uuid1"/>
      <nodes>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ADD&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input_parcel&quot;, $r2)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SafeSlingerActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.ImportKeyResult)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CertifyKeyActivity"/>
      <sender extras="Parcelable@-operation_result,long-certify_key_id:new long,long[]-extra_key_ids:new long[]"/>
      <nodes>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CertifyKeyActivity;&quot;)"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;operation_result&quot;, $r3)"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_key_ids&quot;, $r2)"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;certify_key_id&quot;, $l0)"/>
        <node method="SafeSlingerActivity onCryptoOperationSuccess" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.ImportKeyResult)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CertifyKeyActivity"/>
      <sender extras="Parcelable@-operation_result,long[]-extra_key_ids:new long[]"/>
      <nodes>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CertifyKeyActivity;&quot;)"/>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;operation_result&quot;, $r3)"/>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_key_ids&quot;, $r2)"/>
        <node method="ImportKeysProxyActivity onCryptoOperationSuccess" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void showVerify(byte[],byte[],byte[],int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void showVerify(byte[],byte[],byte[],int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void showVerify(byte[],byte[],byte[],int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void showVerify(byte[],byte[],byte[],int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.RemoteBackupActivity">
    <singleIntent>
      <method method="void handleBackupOperation(org.sufficientlysecure.keychain.service.input.CryptoInputParcel)" methodtrace="java.util.UUID addCryptoInputParcel(android.content.Context,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemoteBackupActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.ADD" extras="long-uuid2,Parcelable@-crypto_input_parcel,long-uuid1"/>
      <nodes>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ADD&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input_parcel&quot;, $r2)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity">
    <singleIntent>
      <method method="void handleResult(org.sufficientlysecure.keychain.service.input.CryptoInputParcel)" methodtrace="java.util.UUID addCryptoInputParcel(android.content.Context,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.ADD" extras="long-uuid2,Parcelable@-crypto_input_parcel,long-uuid1"/>
      <nodes>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ADD&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input_parcel&quot;, $r2)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity">
    <singleIntent>
      <method method="void handleResult(org.sufficientlysecure.keychain.service.input.CryptoInputParcel)" methodtrace="java.util.UUID addCryptoInputParcel(android.content.Context,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.ADD" extras="long-uuid2,Parcelable@-crypto_input_parcel,long-uuid1"/>
      <nodes>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ADD&quot;)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input_parcel&quot;, $r2)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService addCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void lambda$onCreate$2$ViewKeyActivity(android.view.View)" methodtrace="void startSafeSlinger()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity startSafeSlinger" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/SafeSlingerActivity;&quot;)"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l0)"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onCreate$2$ViewKeyActivity(android.view.View)" methodtrace="void scanQrCode()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.SCAN_QR_CODE_WITH_RESULT"/>
      <nodes>
        <node method="ViewKeyActivity scanQrCode" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity scanQrCode" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/ImportKeysProxyActivity;&quot;)"/>
        <node method="ViewKeyActivity scanQrCode" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.SCAN_QR_CODE_WITH_RESULT&quot;)"/>
        <node method="ViewKeyActivity scanQrCode" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)" methodtrace="void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void showLowestUserIdPrompt(int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void showLowestUserIdPrompt(int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void showLowestUserIdPrompt(int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void showLowestUserIdPrompt(int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void access$1100(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1100(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1100(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$1100(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startSafeSlinger()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity startSafeSlinger" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/SafeSlingerActivity;&quot;)"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l0)"/>
        <node method="ViewKeyActivity startSafeSlinger" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void scanQrCode()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.SCAN_QR_CODE_WITH_RESULT"/>
      <nodes>
        <node method="ViewKeyActivity scanQrCode" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity scanQrCode" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/ImportKeysProxyActivity;&quot;)"/>
        <node method="ViewKeyActivity scanQrCode" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.SCAN_QR_CODE_WITH_RESULT&quot;)"/>
        <node method="ViewKeyActivity scanQrCode" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="void startRevocationOperation()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startRevocationOperation()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startRevocationOperation()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="void access$400(org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$400(org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$400(org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="android.app.Dialog onCreateDialog(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.app.Dialog onCreateDialog(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.app.Dialog onCreateDialog(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.ImportKeyResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.ImportKeyResult"/>
      <nodes>
        <node method="ImportKeyResult$2 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ImportKeyResult$2 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="ImportKeyResult$2 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="ImportKeyResult$2 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.ImportKeyResult"/>
      <nodes>
        <node method="ImportKeyResult$2 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ImportKeyResult$2 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="ImportKeyResult$2 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="ImportKeyResult$2 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.network.orbot.OrbotStatusReceiver">
    <singleIntent>
      <method method="boolean isTorRunning(android.content.Context)" methodtrace="boolean requestStartTor(android.content.Context)
&lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()
android.content.Intent getOrbotStartIntent()"/>
      <source name="org.sufficientlysecure.keychain.network.orbot.OrbotStatusReceiver"/>
      <destinition name="interICC_org.torproject.android.intent.action.START"/>
      <sender action="org.torproject.android.intent.action.START" extras="String-org.torproject.android.intent.extra.PACKAGE_NAME"/>
      <nodes>
        <node method="OrbotHelper requestStartTor" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()"/>
        <node method="OrbotHelper getOrbotStartIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="OrbotHelper getOrbotStartIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.torproject.android.intent.action.START&quot;)"/>
        <node method="OrbotHelper requestStartTor" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;org.torproject.android.intent.extra.PACKAGE_NAME&quot;, $r2)"/>
        <node method="OrbotHelper requestStartTor" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity">
    <singleIntent>
      <method method="void checkPinAvailability()" methodtrace="void checkPinAvailability()
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService">
    <singleIntent>
      <method method="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService">
    <singleIntent>
      <method method="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.SshAuthenticationService">
    <singleIntent>
      <method method="android.content.Intent authenticate(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.ssh.AuthenticationResult executeInternal(org.sufficientlysecure.keychain.ssh.AuthenticationData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.ssh.AuthenticationParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r28 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ssh.AuthenticationOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l3)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent authenticate(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.ssh.AuthenticationResult executeInternal(org.sufficientlysecure.keychain.ssh.AuthenticationData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.ssh.AuthenticationParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r28 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ssh.AuthenticationOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l3)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent authenticate(android.content.Intent)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent authenticate(android.content.Intent)" methodtrace="android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent authenticate(android.content.Intent)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent authenticate(android.content.Intent)" methodtrace="android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent authenticate(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.ssh.AuthenticationResult executeInternal(org.sufficientlysecure.keychain.ssh.AuthenticationData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.ssh.AuthenticationParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r28 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ssh.AuthenticationOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l3)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent authenticate(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.SshAuthenticationService">
    <singleIntent>
      <method method="android.content.Intent redirectToKeySelection(android.content.Intent)" methodtrace="android.content.Intent redirectToKeySelection(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt;($r2, $r4)
android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.SshAuthenticationService: android.content.Intent packagePendingIntent(android.app.PendingIntent)&gt; --- $r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.SshAuthenticationService: android.content.Intent packagePendingIntent(android.app.PendingIntent)&gt;($r5)
android.content.Intent packagePendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectAuthenticationKeyActivity"/>
      <sender extras="String-package_name"/>
      <nodes>
        <node method="SshAuthenticationService redirectToKeySelection" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt;($r2, $r4)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectAuthenticationKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="SshAuthenticationService redirectToKeySelection" type="ReceiveIntentFromRetValue" unit="$r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.SshAuthenticationService: android.content.Intent packagePendingIntent(android.app.PendingIntent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.SshAuthenticationService">
    <singleIntent>
      <method method="android.content.Intent getAuthenticationKey(android.content.Intent)" methodtrace="android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectAuthenticationKeyActivity"/>
      <sender extras="String-package_name"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectAuthenticationKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.SshAuthenticationService">
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="android.content.Intent redirectToKeySelection(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt;($r2, $r4)
android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.SshAuthenticationService: android.content.Intent packagePendingIntent(android.app.PendingIntent)&gt; --- $r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.SshAuthenticationService: android.content.Intent packagePendingIntent(android.app.PendingIntent)&gt;($r5)
android.content.Intent packagePendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectAuthenticationKeyActivity"/>
      <sender extras="String-package_name"/>
      <nodes>
        <node method="SshAuthenticationService redirectToKeySelection" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt;($r2, $r4)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectAuthenticationKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="SshAuthenticationService redirectToKeySelection" type="ReceiveIntentFromRetValue" unit="$r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.SshAuthenticationService: android.content.Intent packagePendingIntent(android.app.PendingIntent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectAuthenticationKeyActivity"/>
      <sender extras="String-package_name"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectAuthenticationKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.ssh.AuthenticationResult executeInternal(org.sufficientlysecure.keychain.ssh.AuthenticationData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.ssh.AuthenticationParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r28 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ssh.AuthenticationOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l3)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.ssh.AuthenticationResult executeInternal(org.sufficientlysecure.keychain.ssh.AuthenticationData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.ssh.AuthenticationParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r28 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ssh.AuthenticationOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l3)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.ssh.AuthenticationResult executeInternal(org.sufficientlysecure.keychain.ssh.AuthenticationData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.ssh.AuthenticationParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r28 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ssh.AuthenticationOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l3)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void startPendingIntent(android.app.PendingIntent)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.AppSettingsActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.AppSettingsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent getSignKeyIdImpl(android.content.Intent)" methodtrace="android.content.Intent getSignKeyIdImpl(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt; --- $r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r1, $r4, $r5, $r6, $z0)
android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="Parcelable@-intent,boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="OpenPgpService getSignKeyIdImpl" type="ReceiveIntentFromRetValue" unit="$r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r1, $r4, $r5, $r6, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpService getSignKeyIdImpl" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getSignKeyIdImpl(android.content.Intent)" methodtrace="android.content.Intent getSignKeyIdImpl(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt; --- $r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, $r4, $r5, null)
android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="Parcelable@-intent,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="OpenPgpService getSignKeyIdImpl" type="ReceiveIntentFromRetValue" unit="$r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, $r4, $r5, null)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpService getSignKeyIdImpl" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r8)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent getSignKeyMasterId(android.content.Intent)" methodtrace="android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getSignKeyMasterId(android.content.Intent)" methodtrace="android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)" methodtrace="void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity">
    <singleIntent>
      <method method="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id:new long,int-ttl:new int,Parcelable@-passphrase,String-user_id:new java.lang.Object, null, null,long-subkey_id:new long"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id:new long,int-ttl:new int,Parcelable@-passphrase,String-user_id:new java.lang.Object, null, null,long-subkey_id:new long"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.UploadKeyActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void startImportService(java.util.ArrayList)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startImportService(java.util.ArrayList)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startImportService(java.util.ArrayList)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void importKeysFromFingerprint(byte[])" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void importKeysFromFingerprint(byte[])" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void importKeysFromFingerprint(byte[])" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void processScannedContent(android.net.Uri)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processScannedContent(android.net.Uri)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processScannedContent(android.net.Uri)" methodtrace="void processScannedContent(android.net.Uri)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <sender extras="int-init_frag:5,Parcelable@-openpgp_skt_info" flags="FLAG_ACTIVITY_CLEAR_TOP "/>
      <nodes>
        <node method="ImportKeysProxyActivity processScannedContent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;init_frag&quot;, 5)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;openpgp_skt_info&quot;, $r1)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(67108864)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processScannedContent(android.net.Uri)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void importKeys(byte[])" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void importKeys(byte[])" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void importKeys(byte[])" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void handleActionNdefDiscovered(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActionNdefDiscovered(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActionNdefDiscovered(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44new java.lang.Object" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44new java.lang.Object" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <nodes>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <nodes>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <nodes>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void processScannedContent(android.net.Uri)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <sender extras="int-init_frag:5,Parcelable@-openpgp_skt_info" flags="FLAG_ACTIVITY_CLEAR_TOP "/>
      <nodes>
        <node method="ImportKeysProxyActivity processScannedContent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;init_frag&quot;, 5)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;openpgp_skt_info&quot;, $r1)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(67108864)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44new java.lang.Object" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleActions(android.content.Intent)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44new java.lang.Object" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44new java.lang.Object" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <nodes>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <nodes>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <nodes>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void processScannedContent(android.net.Uri)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <sender extras="int-init_frag:5,Parcelable@-openpgp_skt_info" flags="FLAG_ACTIVITY_CLEAR_TOP "/>
      <nodes>
        <node method="ImportKeysProxyActivity processScannedContent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;init_frag&quot;, 5)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;openpgp_skt_info&quot;, $r1)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(67108864)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44new java.lang.Object" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void initiateScan()
&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt; --- $r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()
android.content.Intent createScanIntent()
&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void attachMoreExtras(android.content.Intent)&gt;($r1)
void attachMoreExtras(android.content.Intent)
&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)
void startActivityForResult(android.content.Intent,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="IntentIntegrator initiateScan" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: android.content.Intent createScanIntent()&gt;()"/>
        <node method="IntentIntegrator createScanIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="IntentIntegrator createScanIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="IntentIntegrator initiateScan" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;com.google.zxing.integration.android.IntentIntegrator: void startActivityForResult(android.content.Intent,int)&gt;($r1, 49374)"/>
        <node method="IntentIntegrator startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="IntentIntegrator startActivityForResult" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void displayResult(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void access$400(org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity,org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="void clearCachedPassphrase(android.content.Context,long,long)" methodtrace="void clearCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR" extras="long-subkey_id,long-key_id"/>
      <nodes>
        <node method="PassphraseCacheService clearCachedPassphrase" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.EditKeyResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.EditKeyResult)" methodtrace="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.EditKeyResult)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void clearCachedPassphrase(android.content.Context,long,long)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void clearCachedPassphrase(android.content.Context,long,long)&gt;($r4, $l0, $l0)
void clearCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR" extras="long-subkey_id,long-key_id"/>
      <nodes>
        <node method="PassphraseCacheService clearCachedPassphrase" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.EditKeyResult)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void clearCachedPassphrase(android.content.Context,long,long)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void clearCachedPassphrase(android.content.Context,long,long)&gt;($r4, $l0, $l0)
void clearCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR" extras="long-subkey_id,long-key_id"/>
      <nodes>
        <node method="PassphraseCacheService clearCachedPassphrase" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void lambda$createView$6$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$6$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt; --- $r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r2, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;, 1)
android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$6$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r2, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;, 1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$6$DebugActionsActivity(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$6$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt; --- $r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r2, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;, 1)
android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$6$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r2, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;, 1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.SshAuthenticationService">
    <singleIntent>
      <method method="android.content.Intent checkRequirements(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkRequirements(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkRequirements(android.content.Intent)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.SshAuthenticationService">
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkIntent(android.content.Intent)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.SshAuthenticationService">
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent access$000(org.sufficientlysecure.keychain.remote.SshAuthenticationService,android.content.Intent)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.SshAuthenticationService">
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.SshAuthenticationService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity">
    <singleIntent>
      <method method="void checkPassphraseAndFinishCaching(android.widget.Button,org.sufficientlysecure.keychain.util.Passphrase,int)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void checkPassphraseAndFinishCaching(android.widget.Button,org.sufficientlysecure.keychain.util.Passphrase,int)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id:new long,int-ttl:new int,Parcelable@-passphrase,String-user_id:new java.lang.Object, null, null,long-subkey_id:new long"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity">
    <singleIntent>
      <method method="void access$700(org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment,android.widget.Button,org.sufficientlysecure.keychain.util.Passphrase,int)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$700(org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment,android.widget.Button,org.sufficientlysecure.keychain.util.Passphrase,int)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id:new long,int-ttl:new int,Parcelable@-passphrase,String-user_id:new java.lang.Object, null, null,long-subkey_id:new long"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r15, -1L, -1L, $r10, $r11, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r15, -1L, -1L, $r10, $r11, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id:-1L,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id:-1L"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id:new long,int-ttl:new int,Parcelable@-passphrase,String-user_id:new java.lang.Object, null, null,long-subkey_id:new long"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity">
    <singleIntent>
      <method method="void onStart()" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r15, -1L, -1L, $r10, $r11, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onStart()" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r15, -1L, -1L, $r10, $r11, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id:-1L,int-ttl,Parcelable@-passphrase,String-user_id,long-subkey_id:-1L"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onStart()" methodtrace="void onPostExecute(org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)&gt;($r10, $l1, $l2, $r1, $r5, $i0)
void addCachedPassphrase(android.content.Context,long,long,org.sufficientlysecure.keychain.util.Passphrase,java.lang.String,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD" extras="long-key_id:new long,int-ttl:new int,Parcelable@-passphrase,String-user_id:new java.lang.Object, null, null,long-subkey_id:new long"/>
      <nodes>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_ADD&quot;)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;ttl&quot;, $i2)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;passphrase&quot;, $r3)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r1)"/>
        <node method="PassphraseCacheService addCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.UploadKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationError(org.sufficientlysecure.keychain.operations.results.UploadResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.UploadKeyActivity">
    <singleIntent>
      <method method="void uploadKey()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void uploadKey()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void uploadKey()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.UploadKeyActivity">
    <singleIntent>
      <method method="void lambda$onCreate$0$UploadKeyActivity(android.view.View)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onCreate$0$UploadKeyActivity(android.view.View)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onCreate$0$UploadKeyActivity(android.view.View)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void encrypt(boolean)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptFilesActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_DATA" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptFilesActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_DATA&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void encrypt(boolean)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptTextActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_TEXT" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptTextActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_TEXT&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void lambda$onCreate$0$ViewKeyActivity(android.view.View)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptFilesActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_DATA" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptFilesActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_DATA&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onCreate$0$ViewKeyActivity(android.view.View)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptTextActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_TEXT" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptTextActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_TEXT&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptFilesActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_DATA" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptFilesActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_DATA&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptTextActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_TEXT" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptTextActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_TEXT&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ViewKeyAdvActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.ViewKeyAdvActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void lambda$createView$8$DebugActionsActivity(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$8$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$8$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt; --- $r2 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;(&quot;org.sufficientlysecure.keychain&quot;, $r1, $r4)
android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r2)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$8$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;(&quot;org.sufficientlysecure.keychain&quot;, $r1, $r4)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$8$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt; --- $r2 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;(&quot;org.sufficientlysecure.keychain&quot;, $r1, $r4)
android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r2)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$8$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;(&quot;org.sufficientlysecure.keychain&quot;, $r1, $r4)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent checkRequirements(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkRequirements(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkRequirements(android.content.Intent)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent checkPermissionImpl(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkPermissionImpl(android.content.Intent)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent checkPermissionImpl(android.content.Intent)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.content.Intent getSignKeyIdImpl(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt; --- $r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, $r4, $r5, null)
android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="Parcelable@-intent,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="OpenPgpService getSignKeyIdImpl" type="ReceiveIntentFromRetValue" unit="$r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, $r4, $r5, null)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpService getSignKeyIdImpl" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.content.Intent getSignKeyIdImpl(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt; --- $r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r1, $r4, $r5, $r6, $z0)
android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="Parcelable@-intent,boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="OpenPgpService getSignKeyIdImpl" type="ReceiveIntentFromRetValue" unit="$r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r1, $r4, $r5, $r6, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpService getSignKeyIdImpl" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent signImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent autocryptQueryImpl(android.content.Intent)" methodtrace="android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent autocryptQueryImpl(android.content.Intent)" methodtrace="android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent autocryptQueryImpl(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createDuplicateKeysResult(android.content.Intent,java.lang.String,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt; --- $r1 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;($r3, $r2, $r4)
android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r1, $r7, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createDuplicateKeysResult" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;($r3, $r2, $r4)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent autocryptQueryImpl(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createMissingKeysResult(android.content.Intent,java.util.HashSet,java.util.ArrayList,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r8.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r7, $r9, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createMissingKeysResult" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent autocryptQueryImpl(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createNoKeysResult(android.content.Intent,java.util.HashSet,java.util.ArrayList,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r8.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r7, $r9, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createNoKeysResult" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="void processSignatureResultForResultIntent(int,android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)" methodtrace="void processSignatureResultForResultIntent(int,android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createImportFromKeyserverPendingIntent(android.content.Intent,long)&gt; --- $r7 = virtualinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createImportFromKeyserverPendingIntent(android.content.Intent,long)&gt;($r2, $l2)
android.app.PendingIntent createImportFromKeyserverPendingIntent(android.content.Intent,long)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r3, $r1)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteImportKeysActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.IMPORT_KEY_FROM_KEY_SERVER_AND_RETURN_RESULT" extras="long-org.sufficientlysecure.keychain.EXTRA_KEY_ID,Parcelable@-intent"/>
      <nodes>
        <node method="OpenPgpService processSignatureResultForResultIntent" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createImportFromKeyserverPendingIntent(android.content.Intent,long)&gt;($r2, $l2)"/>
        <node method="ApiPendingIntentFactory createImportFromKeyserverPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createImportFromKeyserverPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createImportFromKeyserverPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteImportKeysActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createImportFromKeyserverPendingIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.IMPORT_KEY_FROM_KEY_SERVER_AND_RETURN_RESULT&quot;)"/>
        <node method="ApiPendingIntentFactory createImportFromKeyserverPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_KEY_ID&quot;, $l0)"/>
        <node method="ApiPendingIntentFactory createImportFromKeyserverPendingIntent" type="ReceiveIntentFromRetValue" unit="$r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r3, $r1)"/>
        <node method="OpenPgpService processSignatureResultForResultIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r7)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processSignatureResultForResultIntent(int,android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)" methodtrace="android.content.Intent getViewKeyActivityIntent(android.content.Context,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity getViewKeyActivityIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="ViewKeyActivity getViewKeyActivityIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/ui/keyview/ViewKeyActivity;&quot;)"/>
        <node method="ViewKeyActivity getViewKeyActivityIntent" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="void processSecurityProblemsPendingIntent(android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)" methodtrace="void processSecurityProblemsPendingIntent(android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt; --- $r10 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt;($r7, $r5, $z0)
android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity"/>
      <sender extras="Parcelable@-insecure_detail_intent,String-package_name,Serializable@-security_problem,boolean-support_override"/>
      <nodes>
        <node method="OpenPgpService processSecurityProblemsPendingIntent" type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt;($r7, $r5, $z0)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityProblemDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;security_problem&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;support_override&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="pendingIntentCreation" unit="$r5 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r4, 0, $r1, 335544320)"/>
        <node method="OpenPgpService processSecurityProblemsPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;insecure_detail_intent&quot;, $r10)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processSecurityProblemsPendingIntent(android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)" methodtrace="void processSecurityProblemsPendingIntent(android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt; --- $r10 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt;($r7, $r5, $z0)
android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity"/>
      <sender extras="Parcelable@-insecure_detail_intent,String-package_name,Serializable@-security_problem,boolean-support_override"/>
      <nodes>
        <node method="OpenPgpService processSecurityProblemsPendingIntent" type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt;($r7, $r5, $z0)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityProblemDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;security_problem&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;support_override&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="pendingIntentCreation" unit="$r5 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r4, 0, $r1, 268435456)"/>
        <node method="OpenPgpService processSecurityProblemsPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;insecure_detail_intent&quot;, $r10)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processSecurityProblemsPendingIntent(android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)" methodtrace="void processSecurityProblemsPendingIntent(android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt; --- $r10 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt;($r7, $r5, $z0)
android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity"/>
      <sender extras="Parcelable@-insecure_detail_intent,String-package_name,Serializable@-security_problem,boolean-support_override"/>
      <nodes>
        <node method="OpenPgpService processSecurityProblemsPendingIntent" type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt;($r7, $r5, $z0)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityProblemDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;security_problem&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;support_override&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="pendingIntentCreation" unit="$r5 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r4, 0, $r1, 335544320)"/>
        <node method="OpenPgpService processSecurityProblemsPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;insecure_detail_intent&quot;, $r10)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processSecurityProblemsPendingIntent(android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)" methodtrace="void processSecurityProblemsPendingIntent(android.content.Intent,android.content.Intent,org.sufficientlysecure.keychain.operations.results.DecryptVerifyResult)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt; --- $r10 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt;($r7, $r5, $z0)
android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity"/>
      <sender extras="Parcelable@-insecure_detail_intent,String-package_name,Serializable@-security_problem,boolean-support_override"/>
      <nodes>
        <node method="OpenPgpService processSecurityProblemsPendingIntent" type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityProblemIntent(java.lang.String,org.sufficientlysecure.keychain.pgp.DecryptVerifySecurityProblem,boolean)&gt;($r7, $r5, $z0)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityProblemDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;security_problem&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;support_override&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSecurityProblemIntent" type="pendingIntentCreation" unit="$r5 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r4, 0, $r1, 268435456)"/>
        <node method="OpenPgpService processSecurityProblemsPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;insecure_detail_intent&quot;, $r10)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:-1L,long-key_id:-1L,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;(-1L, -1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService, org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET, org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent decryptAndVerifyImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean,org.sufficientlysecure.keychain.pgp.Progressable)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent getSignKeyIdImplLegacy(android.content.Intent)" methodtrace="android.content.Intent getSignKeyIdImplLegacy(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r2, $r4, $r5, $r6)
android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="Parcelable@-intent,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="OpenPgpService getSignKeyIdImplLegacy" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r2, $r4, $r5, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpService getSignKeyIdImplLegacy" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent getKeyIdsImpl(android.content.Intent)" methodtrace="android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getKeyIdsImpl(android.content.Intent)" methodtrace="android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getKeyIdsImpl(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createDuplicateKeysResult(android.content.Intent,java.lang.String,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt; --- $r1 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;($r3, $r2, $r4)
android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r1, $r7, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createDuplicateKeysResult" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;($r3, $r2, $r4)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getKeyIdsImpl(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createMissingKeysResult(android.content.Intent,java.util.HashSet,java.util.ArrayList,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r8.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r7, $r9, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createMissingKeysResult" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getKeyIdsImpl(android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createNoKeysResult(android.content.Intent,java.util.HashSet,java.util.ArrayList,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r8.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r7, $r9, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createNoKeysResult" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent getKeyImpl(android.content.Intent,java.io.OutputStream)" methodtrace="android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getKeyImpl(android.content.Intent,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createDuplicateKeysResult(android.content.Intent,java.lang.String,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt; --- $r1 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;($r3, $r2, $r4)
android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r1, $r7, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createDuplicateKeysResult" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;($r3, $r2, $r4)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getKeyImpl(android.content.Intent,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createMissingKeysResult(android.content.Intent,java.util.HashSet,java.util.ArrayList,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r8.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r7, $r9, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createMissingKeysResult" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getKeyImpl(android.content.Intent,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createNoKeysResult(android.content.Intent,java.util.HashSet,java.util.ArrayList,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r8.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r7, $r9, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createNoKeysResult" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent getKeyImpl(android.content.Intent,java.io.OutputStream)" methodtrace="android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent backupImpl(android.content.Intent,java.io.OutputStream)" methodtrace="android.content.Intent backupImpl(android.content.Intent,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService: org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService: org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,android.content.Intent)&gt;(r0, $r1)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createBackupPendingIntent(android.content.Intent,long[],boolean)&gt; --- $r7 = virtualinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createBackupPendingIntent(android.content.Intent,long[],boolean)&gt;($r1, $r3, $z0)
android.app.PendingIntent createBackupPendingIntent(android.content.Intent,long[],boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r3, $r1)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpService: android.content.Intent createErrorResultIntent(int,java.lang.String)&gt; --- $r1 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpService: android.content.Intent createErrorResultIntent(int,java.lang.String)&gt;(0, $r15)
android.content.Intent createErrorResultIntent(int,java.lang.String)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteBackupActivity"/>
      <sender extras="Parcelable@-intent,long[]-master_key_ids,boolean-export_secret"/>
      <nodes>
        <node method="OpenPgpService backupImpl" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createBackupPendingIntent(android.content.Intent,long[],boolean)&gt;($r1, $r3, $z0)"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteBackupActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;export_secret&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="ReceiveIntentFromRetValue" unit="$r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r3, $r1)"/>
        <node method="OpenPgpService backupImpl" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r7)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent backupImpl(android.content.Intent,java.io.OutputStream)" methodtrace="android.content.Intent backupImpl(android.content.Intent,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService: org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,android.content.Intent)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService: org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,android.content.Intent)&gt;(r0, $r1)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createBackupPendingIntent(android.content.Intent,long[],boolean)&gt; --- $r7 = virtualinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createBackupPendingIntent(android.content.Intent,long[],boolean)&gt;($r1, $r3, $z0)
android.app.PendingIntent createBackupPendingIntent(android.content.Intent,long[],boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r3, $r1)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpService: android.content.Intent createErrorResultIntent(int,java.lang.String)&gt; --- $r1 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpService: android.content.Intent createErrorResultIntent(int,java.lang.String)&gt;(0, $r15)
android.content.Intent createErrorResultIntent(int,java.lang.String)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteBackupActivity"/>
      <sender extras="long[]-master_key_ids,boolean-export_secret"/>
      <nodes>
        <node method="OpenPgpService backupImpl" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createBackupPendingIntent(android.content.Intent,long[],boolean)&gt;($r1, $r3, $z0)"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteBackupActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;export_secret&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createBackupPendingIntent" type="ReceiveIntentFromRetValue" unit="$r2 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r3, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent backupImpl(android.content.Intent,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent autocryptKeyTransferImpl(android.content.Intent,java.io.OutputStream)" methodtrace="android.content.Intent autocryptKeyTransferImpl(android.content.Intent,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt; --- $r10 = virtualinvoke $r9.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt;($r1, $r8, $r3)
android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpService: android.content.Intent createErrorResultIntent(int,java.lang.String)&gt; --- $r1 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpService: android.content.Intent createErrorResultIntent(int,java.lang.String)&gt;(0, $r8)
android.content.Intent createErrorResultIntent(int,java.lang.String)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RequestKeyPermissionActivity"/>
      <sender extras="String-package_name,long[]-requested_key_ids"/>
      <nodes>
        <node method="OpenPgpService autocryptKeyTransferImpl" type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r9.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt;($r1, $r8, $r3)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RequestKeyPermissionActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;requested_key_ids&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent autocryptKeyTransferImpl(android.content.Intent,java.io.OutputStream)" methodtrace="android.content.Intent autocryptKeyTransferImpl(android.content.Intent,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt; --- $r10 = virtualinvoke $r9.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt;($r1, $r8, $r3)
android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RequestKeyPermissionActivity"/>
      <sender extras="Parcelable@-intent,String-package_name,long[]-requested_key_ids"/>
      <nodes>
        <node method="OpenPgpService autocryptKeyTransferImpl" type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r9.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt;($r1, $r8, $r3)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RequestKeyPermissionActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;requested_key_ids&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="OpenPgpService autocryptKeyTransferImpl" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r10)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createDuplicateKeysResult(android.content.Intent,java.lang.String,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt; --- $r1 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;($r3, $r2, $r4)
android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r6.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r1, $r7, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteDeduplicateActivity"/>
      <sender extras="String-package_name,Serializable@-duplicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createDuplicateKeysResult" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createDeduplicatePendingIntent(java.lang.String,android.content.Intent,java.util.ArrayList)&gt;($r3, $r2, $r4)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteDeduplicateActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;duplicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createDeduplicatePendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r1, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createMissingKeysResult(android.content.Intent,java.util.HashSet,java.util.ArrayList,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r8.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r7, $r9, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createMissingKeysResult" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult createNoKeysResult(android.content.Intent,java.util.HashSet,java.util.ArrayList,java.util.ArrayList)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt; --- specialinvoke $r8.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)&gt;($r7, $r9, null)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$1)
&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResult: void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)&gt;($r1, $r2)
void &lt;init&gt;(android.app.PendingIntent,org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractor$KeyIdResultStatus)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="OpenPgpServiceKeyIdExtractor createNoKeysResult" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r6, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpServiceKeyIdExtractor$KeyIdResult &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.content.Intent getSignKeyIdImpl(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt; --- $r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, $r4, $r5, null)
android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="Parcelable@-intent,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="OpenPgpService getSignKeyIdImpl" type="ReceiveIntentFromRetValue" unit="$r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, $r4, $r5, null)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpService getSignKeyIdImpl" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.content.Intent getSignKeyIdImpl(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt; --- $r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r1, $r4, $r5, $r6, $z0)
android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="Parcelable@-intent,boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="OpenPgpService getSignKeyIdImpl" type="ReceiveIntentFromRetValue" unit="$r8 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r1, $r4, $r5, $r6, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="OpenPgpService getSignKeyIdImpl" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent encryptAndSignImpl(android.content.Intent,java.io.InputStream,java.io.OutputStream,boolean)" methodtrace="android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService, org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET, org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:-1L,long-key_id:-1L,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;(-1L, -1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternalWithStreams(android.content.Intent,java.io.InputStream,java.io.OutputStream)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService, org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET, org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:-1L,long-key_id:-1L,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;(-1L, -1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent executeInternal(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="android.app.Notification getNotification()" methodtrace="android.app.Notification getNotification()"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService getNotification" type="CreateMethod" unit="$r12 = new android.content.Intent"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r13, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="pendingIntentCreation" unit="$r14 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r13, 0, $r12, 134217728)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230878, $r8, $r14)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="void updateService()" methodtrace="android.app.Notification getNotification()"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService getNotification" type="CreateMethod" unit="$r12 = new android.content.Intent"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r13, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="pendingIntentCreation" unit="$r14 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r13, 0, $r12, 134217728)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230878, $r8, $r14)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="void removeScreenLockPassphrases()" methodtrace="android.app.Notification getNotification()"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService getNotification" type="CreateMethod" unit="$r12 = new android.content.Intent"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r13, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="pendingIntentCreation" unit="$r14 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r13, 0, $r12, 134217728)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230878, $r8, $r14)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="void access$200(org.sufficientlysecure.keychain.service.PassphraseCacheService)" methodtrace="android.app.Notification getNotification()"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService getNotification" type="CreateMethod" unit="$r12 = new android.content.Intent"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r13, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="pendingIntentCreation" unit="$r14 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r13, 0, $r12, 134217728)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230878, $r8, $r14)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.network.orbot.OrbotStatusReceiver">
    <singleIntent>
      <method method="int getProxyPortSocks(android.content.Context)" methodtrace="boolean requestStartTor(android.content.Context)
&lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()
android.content.Intent getOrbotStartIntent()"/>
      <source name="org.sufficientlysecure.keychain.network.orbot.OrbotStatusReceiver"/>
      <destinition name="interICC_org.torproject.android.intent.action.START"/>
      <sender action="org.torproject.android.intent.action.START" extras="String-org.torproject.android.intent.extra.PACKAGE_NAME"/>
      <nodes>
        <node method="OrbotHelper requestStartTor" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()"/>
        <node method="OrbotHelper getOrbotStartIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="OrbotHelper getOrbotStartIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.torproject.android.intent.action.START&quot;)"/>
        <node method="OrbotHelper requestStartTor" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;org.torproject.android.intent.extra.PACKAGE_NAME&quot;, $r2)"/>
        <node method="OrbotHelper requestStartTor" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void handleMessage(android.os.Message)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleMessage(android.os.Message)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleMessage(android.os.Message)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.CreateKeyActivity">
    <singleIntent>
      <method method="void finishWithFirstTimeHandling(android.content.Intent)" methodtrace="void finishWithFirstTimeHandling(android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <nodes>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void finishWithFirstTimeHandling(android.content.Intent)" methodtrace="void finishWithFirstTimeHandling(android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <nodes>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="SendIntent2ICC" unit="if $r1 == null goto virtualinvoke $r3.&lt;android.support.v4.app.TaskStackBuilder: void startActivities()&gt;()"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void finishWithFirstTimeHandling(android.content.Intent)" methodtrace="void finishWithFirstTimeHandling(android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <nodes>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.CreateKeyActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.CreateKeyActivity">
    <singleIntent>
      <method method="void finish()" methodtrace="void finish()
&lt;org.sufficientlysecure.keychain.ui.CreateKeyActivity: void finishWithFirstTimeHandling(android.content.Intent)&gt; --- virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.CreateKeyActivity: void finishWithFirstTimeHandling(android.content.Intent)&gt;(null)
void finishWithFirstTimeHandling(android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <nodes>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="SendIntent2ICC" unit="if $r1 == null goto virtualinvoke $r3.&lt;android.support.v4.app.TaskStackBuilder: void startActivities()&gt;()"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void finish()" methodtrace="void finish()
&lt;org.sufficientlysecure.keychain.ui.CreateKeyActivity: void finishWithFirstTimeHandling(android.content.Intent)&gt; --- virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.CreateKeyActivity: void finishWithFirstTimeHandling(android.content.Intent)&gt;(null)
void finishWithFirstTimeHandling(android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <nodes>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="CreateKeyActivity finishWithFirstTimeHandling" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.CreateKeyActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,int-RandomPosition:new byte[], new byte[], null,byte[]-DecoyHash2,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.String)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,int-RandomPosition:new byte[], new byte[], null,byte[]-DecoyHash2,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onPostExecute(java.lang.Object)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,int-RandomPosition:new byte[], new byte[], null,byte[]-DecoyHash2,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleGroupingActivity(int,android.content.Intent)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity onActivityResult" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity onActivityResult" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity onActivityResult" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity onActivityResult" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i2)"/>
        <node method="ExchangeActivity onActivityResult" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity onActivityResult" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity onActivityResult" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,int-RandomPosition:new byte[], new byte[], null,byte[]-DecoyHash2,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.UploadKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.UploadResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void lambda$createView$3$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$3$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt; --- $r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;)
android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$3$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$3$DebugActionsActivity(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$3$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt; --- $r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;)
android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <sender extras="String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$3$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdLegacyPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String)&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/SelectSignKeyIdActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdLegacyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity">
    <singleIntent>
      <method method="android.app.Notification createOrbotNotification(android.content.Context)" methodtrace="android.app.Notification createOrbotNotification(android.content.Context)"/>
      <source name="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity"/>
      <sender extras="boolean-start_orbot:1" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/ui/OrbotRequiredDialogActivity;&quot;)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;start_orbot&quot;, 1)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r6, 268435456)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230952, $r5, $r7)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity">
    <singleIntent>
      <method method="void showOrbotRequiredNotification(android.content.Context)" methodtrace="android.app.Notification createOrbotNotification(android.content.Context)"/>
      <source name="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity"/>
      <sender extras="boolean-start_orbot:1" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/ui/OrbotRequiredDialogActivity;&quot;)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="SetAttribute" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;start_orbot&quot;, 1)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r6, 268435456)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230952, $r5, $r7)"/>
        <node method="OrbotRequiredDialogActivity createOrbotNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r7)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationError(org.sufficientlysecure.keychain.operations.results.ImportKeyResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.ImportKeyResult"/>
      <nodes>
        <node method="ImportKeyResult$2 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ImportKeyResult$2 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="ImportKeyResult$2 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="ImportKeyResult$2 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationError(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.ImportKeyResult"/>
      <nodes>
        <node method="ImportKeyResult$2 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ImportKeyResult$2 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="ImportKeyResult$2 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="ImportKeyResult$2 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void lambda$createView$2$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$2$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r6 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r3, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r6)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$2$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r3, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$2$DebugActionsActivity(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$2$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt; --- $r6 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r3, $r4, $r5, 0)
android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r6)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSelectPubKeyActivity"/>
      <sender extras="Serializable@-missing_emails,boolean-no_user_ids,long[]-master_key_ids,Serializable@-dublicate_emails"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$2$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectPublicKeyPendingIntent(android.content.Intent,long[],java.util.ArrayList,java.util.ArrayList,boolean)&gt;($r2, $r3, $r4, $r5, 0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSelectPubKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;no_user_ids&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;missing_emails&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;dublicate_emails&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectPublicKeyPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="void startDeletionOperation()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startDeletionOperation()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startDeletionOperation()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="void access$300(org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$300(org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$300(org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void updateFromKeyserver()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateFromKeyserver()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateFromKeyserver()" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void processScannedContent(java.lang.String)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processScannedContent(java.lang.String)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processScannedContent(java.lang.String)" methodtrace="void processScannedContent(android.net.Uri)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <sender extras="int-init_frag:5,Parcelable@-openpgp_skt_info" flags="FLAG_ACTIVITY_CLEAR_TOP "/>
      <nodes>
        <node method="ImportKeysProxyActivity processScannedContent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;init_frag&quot;, 5)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;openpgp_skt_info&quot;, $r1)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(67108864)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void processScannedContent(java.lang.String)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void lambda$createView$4$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$4$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt; --- $r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r2, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;, 0)
android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$4$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r2, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;, 0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$4$DebugActionsActivity(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$4$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt; --- $r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r2, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;, 0)
android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <sender extras="boolean-show_autocrypt_hint,String-user_id,byte[]-package_signature,String-package_name"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$4$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r1.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectSignKeyIdPendingIntent(android.content.Intent,java.lang.String,byte[],java.lang.String,boolean)&gt;($r2, &quot;org.sufficientlysecure.keychain&quot;, $r4, &quot;test@openkeychain.org&quot;, 0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectIdKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r6)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;user_id&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_autocrypt_hint&quot;, $z0)"/>
        <node method="ApiPendingIntentFactory createSelectSignKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r5, $r3)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SettingsActivity">
    <singleIntent>
      <method method="boolean onPreferenceClick(android.preference.Preference)" methodtrace="boolean onPreferenceClick(android.preference.Preference)"/>
      <source name="org.sufficientlysecure.keychain.ui.SettingsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SettingsKeyServerActivity"/>
      <sender extras="Serializable@-key_servers:new java.util.ArrayList, new java.util.ArrayList"/>
      <nodes>
        <node method="SettingsActivity$CloudSearchPrefsFragment$1 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SettingsActivity$CloudSearchPrefsFragment$1 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/sufficientlysecure/keychain/ui/SettingsKeyServerActivity;&quot;)"/>
        <node method="SettingsActivity$CloudSearchPrefsFragment$1 onPreferenceClick" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;key_servers&quot;, $r6)"/>
        <node method="SettingsActivity$CloudSearchPrefsFragment$1 onPreferenceClick" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.ui.SettingsActivity$CloudSearchPrefsFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, 28677)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SettingsActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="boolean onPreferenceClick(android.preference.Preference)"/>
      <source name="org.sufficientlysecure.keychain.ui.SettingsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SettingsKeyServerActivity"/>
      <sender extras="Serializable@-key_servers:new java.util.ArrayList, new java.util.ArrayList"/>
      <nodes>
        <node method="SettingsActivity$CloudSearchPrefsFragment$1 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="SettingsActivity$CloudSearchPrefsFragment$1 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/sufficientlysecure/keychain/ui/SettingsKeyServerActivity;&quot;)"/>
        <node method="SettingsActivity$CloudSearchPrefsFragment$1 onPreferenceClick" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;key_servers&quot;, $r6)"/>
        <node method="SettingsActivity$CloudSearchPrefsFragment$1 onPreferenceClick" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.ui.SettingsActivity$CloudSearchPrefsFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, 28677)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity">
    <singleIntent>
      <method method="void launchImportOperation(org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void launchImportOperation(org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void launchImportOperation(org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity">
    <singleIntent>
      <method method="void access$500(org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity,org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$500(org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity,org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$500(org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity,org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SettingsActivity">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="org.sufficientlysecure.keychain.ui.SettingsActivity"/>
      <nodes>
        <node method="SettingsActivity onResume" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.SettingsActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="SettingsActivity onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.SettingsActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void lambda$createView$0$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$0$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$0$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$0$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$0$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$0$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$0$DebugActionsActivity(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$0$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$0$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$0$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r5)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$0$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r5 = virtualinvoke $r3.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="void clearCachedPassphrases(android.content.Context)" methodtrace="void clearCachedPassphrases(android.content.Context)"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService clearCachedPassphrases" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="PassphraseCacheService clearCachedPassphrases" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrases" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrases" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.PanicResponderActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void exitAndRemoveFromRecentApps(android.app.Activity)"/>
      <source name="org.sufficientlysecure.keychain.ui.PanicResponderActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PanicExitActivity"/>
      <sender flags="FLAG_ACTIVITY_CLEAR_TASK FLAG_ACTIVITY_NO_ANIMATION FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="PanicExitActivity exitAndRemoveFromRecentApps" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PanicExitActivity exitAndRemoveFromRecentApps" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PanicExitActivity;&quot;)"/>
        <node method="PanicExitActivity exitAndRemoveFromRecentApps" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(276922368)"/>
        <node method="PanicExitActivity exitAndRemoveFromRecentApps" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void clearCachedPassphrases(android.content.Context)"/>
      <source name="org.sufficientlysecure.keychain.ui.PanicResponderActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService clearCachedPassphrases" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="PassphraseCacheService clearCachedPassphrases" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrases" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrases" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="void removeTimeoutedPassphrase(long)" methodtrace="android.app.Notification getNotification()"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService getNotification" type="CreateMethod" unit="$r12 = new android.content.Intent"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r13, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="pendingIntentCreation" unit="$r14 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r13, 0, $r12, 134217728)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230878, $r8, $r14)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="void access$100(org.sufficientlysecure.keychain.service.PassphraseCacheService,long)" methodtrace="android.app.Notification getNotification()"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService getNotification" type="CreateMethod" unit="$r12 = new android.content.Intent"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r13, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="pendingIntentCreation" unit="$r14 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r13, 0, $r12, 134217728)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230878, $r8, $r14)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.ContactSyncAdapterService">
    <singleIntent>
      <method method="void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)" methodtrace="void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)"/>
      <source name="org.sufficientlysecure.keychain.service.ContactSyncAdapterService"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SettingsActivity"/>
      <sender extras="String-:android:show_fragment:class Lorg/sufficientlysecure/keychain/ui/SettingsActivity$SyncPrefsFragment;"/>
      <nodes>
        <node method="ContactSyncAdapterService$ContactSyncAdapter onSecurityException" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="ContactSyncAdapterService$ContactSyncAdapter onSecurityException" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r8, class &quot;Lorg/sufficientlysecure/keychain/ui/SettingsActivity;&quot;)"/>
        <node method="ContactSyncAdapterService$ContactSyncAdapter onSecurityException" type="SetIntentExtra" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;:android:show_fragment&quot;, $r3)"/>
        <node method="ContactSyncAdapterService$ContactSyncAdapter onSecurityException" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r8, 0, $r7, 134217728)"/>
        <node method="ContactSyncAdapterService$ContactSyncAdapter onSecurityException" type="sendOutWrapperredIntent" unit="$r11 = virtualinvoke $r11.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r10)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void lambda$onCreate$1$ViewKeyActivity(android.view.View)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptFilesActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_DATA" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptFilesActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_DATA&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$onCreate$1$ViewKeyActivity(android.view.View)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptTextActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_TEXT" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptTextActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_TEXT&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptFilesActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_DATA" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptFilesActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_DATA&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void encrypt(boolean)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.EncryptTextActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.ENCRYPT_TEXT" extras="long[]-org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity encrypt" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/EncryptTextActivity;&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.ENCRYPT_TEXT&quot;)"/>
        <node method="ViewKeyActivity encrypt" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;org.sufficientlysecure.keychain.EXTRA_SIGNATURE_KEY_IDS&quot;, $r4)"/>
        <node method="ViewKeyActivity encrypt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity">
    <singleIntent>
      <method method="void obtainPassphraseIfRequired()" methodtrace="void checkPinAvailability()
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void obtainPassphraseIfRequired()" methodtrace="void obtainSecurityTokenPin(org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input:new org.sufficientlysecure.keychain.service.input.RequiredInputParcel"/>
      <nodes>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PassphraseDialogActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r2)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void checkPinAvailability()
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void obtainSecurityTokenPin(org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input:new org.sufficientlysecure.keychain.service.input.RequiredInputParcel"/>
      <nodes>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PassphraseDialogActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r2)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="Parcelable@-token_info:new org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo"/>
      <nodes>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;token_info&quot;, $r1)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void checkPinAvailability()
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void obtainSecurityTokenPin(org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input:new org.sufficientlysecure.keychain.service.input.RequiredInputParcel"/>
      <nodes>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PassphraseDialogActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r2)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="Parcelable@-token_info:new org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo"/>
      <nodes>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;token_info&quot;, $r1)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SafeSlingerActivity">
    <singleIntent>
      <method method="void startExchange(long,int)" methodtrace="void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="int-NumUsers"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startExchange(long,int)" methodtrace="void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="String-HostName:slinger-openpgp.appspot.com,int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;HostName&quot;, &quot;slinger-openpgp.appspot.com&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startExchange(long,int)" methodtrace="void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startExchange(long,int)" methodtrace="void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startExchange(long,int)" methodtrace="void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="String-HostName:slinger-openpgp.appspot.com,int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;HostName&quot;, &quot;slinger-openpgp.appspot.com&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startActivityForResult(android.content.Intent,int)&gt;($r3, 211)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SafeSlingerActivity">
    <singleIntent>
      <method method="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)" methodtrace="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="int-NumUsers"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)" methodtrace="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="String-HostName:slinger-openpgp.appspot.com,int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;HostName&quot;, &quot;slinger-openpgp.appspot.com&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)" methodtrace="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)" methodtrace="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)" methodtrace="void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="String-HostName:slinger-openpgp.appspot.com,int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;HostName&quot;, &quot;slinger-openpgp.appspot.com&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startActivityForResult(android.content.Intent,int)&gt;($r3, 211)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void lambda$createView$5$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$5$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r2 = virtualinvoke $r4.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;)
android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r2)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectAuthenticationKeyActivity"/>
      <sender extras="String-package_name"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$5$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke $r4.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectAuthenticationKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$5$DebugActionsActivity(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$5$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r2 = virtualinvoke $r4.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;)
android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r2)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectAuthenticationKeyActivity"/>
      <sender extras="String-package_name"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$5$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke $r4.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSelectAuthenticationKeyIdPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/dialog/RemoteSelectAuthenticationKeyActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSelectAuthenticationKeyIdPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void lambda$createView$7$DebugActionsActivity(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void lambda$createView$7$DebugActionsActivity(android.view.View)" methodtrace="void lambda$createView$7$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt; --- $r9 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r8)
android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r9)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RequestKeyPermissionActivity"/>
      <sender extras="String-package_name,long[]-requested_key_ids"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$7$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r8)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RequestKeyPermissionActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;requested_key_ids&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DebugActionsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <nodes>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void lambda$createView$7$DebugActionsActivity(android.view.View)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt; --- $r9 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r8)
android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startPendingIntent(android.app.PendingIntent)&gt;($r9)
void startPendingIntent(android.app.PendingIntent)"/>
      <source name="org.sufficientlysecure.keychain.ui.DebugActionsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RequestKeyPermissionActivity"/>
      <sender extras="String-package_name,long[]-requested_key_ids"/>
      <nodes>
        <node method="DebugActionsActivity lambda$createView$7$DebugActionsActivity" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r7.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRequestKeyPermissionPendingIntent(android.content.Intent,java.lang.String,long[])&gt;($r1, &quot;org.sufficientlysecure.keychain&quot;, $r8)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RequestKeyPermissionActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;requested_key_ids&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createRequestKeyPermissionPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="DebugActionsActivity startPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.app.PendingIntent"/>
        <node method="DebugActionsActivity startPendingIntent" type="sendOutWrapperredIntent" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.DebugActionsActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)&gt;($r1, 0, null, 0, 0, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity">
    <singleIntent>
      <method method="void startQrCodeCaptureActivity()" methodtrace="void startQrCodeCaptureActivity()
&lt;org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity$2: void &lt;init&gt;(org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity,android.content.Intent)&gt; --- specialinvoke $r3.&lt;org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity$2: void &lt;init&gt;(org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity,android.content.Intent)&gt;(r0, $r1)
void &lt;init&gt;(org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.IMPORT_KEY_FROM_QR_CODE"/>
      <nodes>
        <node method="RedirectImportKeysActivity startQrCodeCaptureActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="RedirectImportKeysActivity startQrCodeCaptureActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/ImportKeysProxyActivity;&quot;)"/>
        <node method="RedirectImportKeysActivity startQrCodeCaptureActivity" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.IMPORT_KEY_FROM_QR_CODE&quot;)"/>
        <node method="RedirectImportKeysActivity$2 &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="RedirectImportKeysActivity startQrCodeCaptureActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void startQrCodeCaptureActivity()
&lt;org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity$2: void &lt;init&gt;(org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity,android.content.Intent)&gt; --- specialinvoke $r3.&lt;org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity$2: void &lt;init&gt;(org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity,android.content.Intent)&gt;(r0, $r1)
void &lt;init&gt;(org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.ui.RedirectImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <sender action="org.sufficientlysecure.keychain.action.IMPORT_KEY_FROM_QR_CODE"/>
      <nodes>
        <node method="RedirectImportKeysActivity startQrCodeCaptureActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="RedirectImportKeysActivity startQrCodeCaptureActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/ImportKeysProxyActivity;&quot;)"/>
        <node method="RedirectImportKeysActivity startQrCodeCaptureActivity" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.IMPORT_KEY_FROM_QR_CODE&quot;)"/>
        <node method="RedirectImportKeysActivity$2 &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="RedirectImportKeysActivity startQrCodeCaptureActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity">
    <singleIntent>
      <method method="void access$100(org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity)" methodtrace="void checkPinAvailability()
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$100(org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity)" methodtrace="void obtainSecurityTokenPin(org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input:new org.sufficientlysecure.keychain.service.input.RequiredInputParcel"/>
      <nodes>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PassphraseDialogActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r2)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void deleteKey()" methodtrace="void deleteKey()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <sender extras="boolean-extra_has_secret:1, 0,long[]-extra_delete_master_key_ids:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity deleteKey" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity deleteKey" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/DeleteKeyDialogActivity;&quot;)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_delete_master_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;extra_has_secret&quot;, $z0)"/>
        <node method="ViewKeyActivity deleteKey" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void deleteKey()" methodtrace="void deleteKey()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <sender extras="Parcelable@-extra_keyserver:null,boolean-extra_has_secret:1, 0,long[]-extra_delete_master_key_ids:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity deleteKey" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity deleteKey" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/DeleteKeyDialogActivity;&quot;)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_delete_master_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;extra_has_secret&quot;, $z0)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;extra_keyserver&quot;, $r5)"/>
        <node method="ViewKeyActivity deleteKey" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationError(org.sufficientlysecure.keychain.operations.results.EditKeyResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationError(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void startBackupActivity()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.BackupActivity"/>
      <sender extras="long[]-master_key_ids:newarray (long)[1],boolean-export_secret:1"/>
      <nodes>
        <node method="ViewKeyActivity startBackupActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/BackupActivity;&quot;)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;export_secret&quot;, 1)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void certifyImmediate()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CertifyKeyActivity"/>
      <sender extras="long[]-extra_key_ids:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity certifyImmediate" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity certifyImmediate" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CertifyKeyActivity;&quot;)"/>
        <node method="ViewKeyActivity certifyImmediate" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity certifyImmediate" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void startPassphraseActivity(int)" methodtrace="void startBackupActivity()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.BackupActivity"/>
      <sender extras="long[]-master_key_ids:newarray (long)[1],boolean-export_secret:1"/>
      <nodes>
        <node method="ViewKeyActivity startBackupActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/BackupActivity;&quot;)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;export_secret&quot;, 1)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startPassphraseActivity(int)" methodtrace="void startPassphraseActivity(int)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input:new org.sufficientlysecure.keychain.service.input.RequiredInputParcel"/>
      <nodes>
        <node method="ViewKeyActivity startPassphraseActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startPassphraseActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PassphraseDialogActivity;&quot;)"/>
        <node method="ViewKeyActivity startPassphraseActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r3)"/>
        <node method="ViewKeyActivity startPassphraseActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity">
    <singleIntent>
      <method method="android.app.Dialog onCreateDialog(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.app.Dialog onCreateDialog(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.app.Dialog onCreateDialog(android.os.Bundle)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity">
    <singleIntent>
      <method method="void launchImportOperation(org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void launchImportOperation(org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void launchImportOperation(org.sufficientlysecure.keychain.service.ImportKeyringParcel)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.dialog.RemoteSelectIdKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.UploadKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationError(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenChangePinOperationActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenChangePinOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="Parcelable@-token_info:new org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo"/>
      <nodes>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;token_info&quot;, $r1)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity">
    <singleIntent>
      <method method="void onSecurityTokenPinError(java.lang.String,org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo)" methodtrace="void onSecurityTokenPinError(java.lang.String,org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void clearCachedPassphrase(android.content.Context,long,long)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: void clearCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
void clearCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR" extras="long-subkey_id,long-key_id"/>
      <nodes>
        <node method="PassphraseCacheService clearCachedPassphrase" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService clearCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.MainActivity">
    <singleIntent>
      <method method="boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)" methodtrace="boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)"/>
      <source name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SettingsActivity"/>
      <nodes>
        <node method="MainActivity$1 onItemClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MainActivity$1 onItemClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/ui/SettingsActivity;&quot;)"/>
        <node method="MainActivity$1 onItemClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.ui.MainActivity: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)" methodtrace="boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)"/>
      <source name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.HelpActivity"/>
      <nodes>
        <node method="MainActivity$1 onItemClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MainActivity$1 onItemClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/ui/HelpActivity;&quot;)"/>
        <node method="MainActivity$1 onItemClick" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;org.sufficientlysecure.keychain.ui.MainActivity: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)" methodtrace="boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)"/>
      <source name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SettingsActivity"/>
      <nodes>
        <node method="MainActivity$1 onItemClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MainActivity$1 onItemClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/ui/SettingsActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)" methodtrace="boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)"/>
      <source name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.HelpActivity"/>
      <nodes>
        <node method="MainActivity$1 onItemClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MainActivity$1 onItemClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/ui/HelpActivity;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService2">
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService, org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET, org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:-1L,long-key_id:-1L,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;(-1L, -1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService2"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.ViewKeyAdvActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/ViewKeyAdvActivity;&quot;)"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l1)"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void certifyFingerprint()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CertifyFingerprintActivity"/>
      <sender extras="long-master_key_id"/>
      <nodes>
        <node method="ViewKeyActivity certifyFingerprint" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity certifyFingerprint" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CertifyFingerprintActivity;&quot;)"/>
        <node method="ViewKeyActivity certifyFingerprint" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;master_key_id&quot;, $l0)"/>
        <node method="ViewKeyActivity certifyFingerprint" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void startBackupActivity()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.BackupActivity"/>
      <sender extras="long[]-master_key_ids:newarray (long)[1],boolean-export_secret:1"/>
      <nodes>
        <node method="ViewKeyActivity startBackupActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/BackupActivity;&quot;)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;master_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;export_secret&quot;, 1)"/>
        <node method="ViewKeyActivity startBackupActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void deleteKey()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <sender extras="boolean-extra_has_secret:1, 0,long[]-extra_delete_master_key_ids:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity deleteKey" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity deleteKey" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/DeleteKeyDialogActivity;&quot;)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_delete_master_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;extra_has_secret&quot;, $z0)"/>
        <node method="ViewKeyActivity deleteKey" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void startPassphraseActivity(int)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input:new org.sufficientlysecure.keychain.service.input.RequiredInputParcel"/>
      <nodes>
        <node method="ViewKeyActivity startPassphraseActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity startPassphraseActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PassphraseDialogActivity;&quot;)"/>
        <node method="ViewKeyActivity startPassphraseActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r3)"/>
        <node method="ViewKeyActivity startPassphraseActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <sender flags="FLAG_ACTIVITY_CLEAR_TOP "/>
      <nodes>
        <node method="ViewKeyActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <sender extras="int-init_frag:5" flags="FLAG_ACTIVITY_CLEAR_TOP "/>
      <nodes>
        <node method="ViewKeyActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;init_frag&quot;, 5)"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(67108864)"/>
        <node method="ViewKeyActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void deleteKey()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.DeleteKeyDialogActivity"/>
      <sender extras="Parcelable@-extra_keyserver:null,boolean-extra_has_secret:1, 0,long[]-extra_delete_master_key_ids:newarray (long)[1]"/>
      <nodes>
        <node method="ViewKeyActivity deleteKey" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ViewKeyActivity deleteKey" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/DeleteKeyDialogActivity;&quot;)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;extra_delete_master_key_ids&quot;, $r2)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;extra_has_secret&quot;, $z0)"/>
        <node method="ViewKeyActivity deleteKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;extra_keyserver&quot;, $r5)"/>
        <node method="ViewKeyActivity deleteKey" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService$2">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="android.app.Notification getNotification()"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService$2"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService getNotification" type="CreateMethod" unit="$r12 = new android.content.Intent"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r13, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="pendingIntentCreation" unit="$r14 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r13, 0, $r12, 134217728)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230878, $r8, $r14)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, -1, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, -1, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, -1, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i2)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, -1, null)
void onActivityResult(int,int,android.content.Intent)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void handleGroupingActivity(int,android.content.Intent)&gt; --- specialinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void handleGroupingActivity(int,android.content.Intent)&gt;($i1, $r1)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$9 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$9 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,int-RandomPosition:new byte[], new byte[], null,byte[]-DecoyHash2,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.network.orbot.OrbotStatusReceiver">
    <singleIntent>
      <method method="int getProxyPortHttp(android.content.Context)" methodtrace="boolean requestStartTor(android.content.Context)
&lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()
android.content.Intent getOrbotStartIntent()"/>
      <source name="org.sufficientlysecure.keychain.network.orbot.OrbotStatusReceiver"/>
      <destinition name="interICC_org.torproject.android.intent.action.START"/>
      <sender action="org.torproject.android.intent.action.START" extras="String-org.torproject.android.intent.extra.PACKAGE_NAME"/>
      <nodes>
        <node method="OrbotHelper requestStartTor" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()"/>
        <node method="OrbotHelper getOrbotStartIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="OrbotHelper getOrbotStartIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.torproject.android.intent.action.START&quot;)"/>
        <node method="OrbotHelper requestStartTor" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;org.torproject.android.intent.extra.PACKAGE_NAME&quot;, $r2)"/>
        <node method="OrbotHelper requestStartTor" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void &lt;init&gt;()" methodtrace="void &lt;init&gt;()"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity &lt;init&gt;" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity &lt;init&gt;" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.MainActivity">
    <singleIntent>
      <method method="void onNewIntent(android.content.Intent)" methodtrace="void onNewIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void onNewIntent(android.content.Intent)&gt; --- specialinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void onNewIntent(android.content.Intent)&gt;($r1)"/>
      <source name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <nodes>
        <node method="MainActivity onNewIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onNewIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="MainActivity onNewIntent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.MainActivity: void setIntent(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.UploadKeyActivity">
    <singleIntent>
      <method method="void onCryptoOperationSuccess(org.sufficientlysecure.keychain.operations.results.OperationResult)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.OpenPgpService">
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createPassphrasePendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemotePassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemotePassphraseDialogActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createPassphrasePendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService, org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET, org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:-1L,long-key_id:-1L,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r27 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;(-1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l2, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation$EncryptStreamResult handleEncryptedPacket(org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.bouncycastle.openpgp.PGPEncryptedDataList,org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog,int,org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt; --- $r44 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpDecryptVerifyOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)&gt;($l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r4 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;(-1L, -1L)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent requiredInputPi(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt; --- $r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)
android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityTokenOperationActivity"/>
      <sender extras="Parcelable@-required_input,Parcelable@-crypto_input"/>
      <nodes>
        <node method="ApiPendingIntentFactory requiredInputPi" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createSecurityTokenOperationPendingIntent(android.content.Intent,org.sufficientlysecure.keychain.service.input.RequiredInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)&gt;($r2, $r3, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteSecurityTokenOperationActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r5)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;crypto_input&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createSecurityTokenOperationPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1342177280)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-intent,Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteRegisterActivity"/>
      <sender extras="Parcelable@-data,String-package_name,byte[]-package_signature"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteRegisterActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;package_name&quot;, $r3)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;package_signature&quot;, $r4)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;data&quot;, $r2)"/>
        <node method="ApiPendingIntentFactory createRegisterPendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, $r1, 1409286144)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.content.Intent isAllowedOrReturnIntent(android.content.Intent)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])&gt;($r1, $r4, $r8)
android.app.PendingIntent createRegisterPendingIntent(android.content.Intent,java.lang.String,byte[])
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt; --- $r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)
android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message,Parcelable@-intent"/>
      <nodes>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="ReceiveIntentFromRetValue" unit="$r9 = virtualinvoke $r2.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)&gt;($r1, $r4)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter0: android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
        <node method="ApiPermissionHelper isAllowedOrReturnIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;intent&quot;, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="android.app.PendingIntent createErrorPendingIntent(android.content.Intent,java.lang.String)
&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt; --- $r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)
android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.ui.RemoteErrorActivity"/>
      <sender extras="String-error_message"/>
      <nodes>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lorg/sufficientlysecure/keychain/remote/ui/RemoteErrorActivity;&quot;)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;error_message&quot;, $r1)"/>
        <node method="ApiPendingIntentFactory createErrorPendingIntent" type="ReceiveIntentFromRetValue" unit="$r3 = specialinvoke r0.&lt;org.sufficientlysecure.keychain.remote.ApiPendingIntentFactory: android.app.PendingIntent createInternal(android.content.Intent,android.content.Intent)&gt;($r4, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)" methodtrace="org.sufficientlysecure.keychain.service.input.CryptoInputParcel getCryptoInputParcel(android.content.Context,java.util.UUID)"/>
      <source name="org.sufficientlysecure.keychain.remote.OpenPgpService"/>
      <destinition name="org.sufficientlysecure.keychain.remote.CryptoInputParcelCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.GET" extras="long-uuid1,long-uuid2,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/remote/CryptoInputParcelCacheService;&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.GET&quot;)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid1&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;uuid2&quot;, $l0)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r9)"/>
        <node method="CryptoInputParcelCacheService getCryptoInputParcel" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.CreateKeyActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)"/>
      <source name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="Parcelable@-token_info:new org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo"/>
      <nodes>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;token_info&quot;, $r1)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;(6, -1, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;(6, -1, null)
void onActivityResult(int,int,android.content.Intent)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void handleGroupingActivity(int,android.content.Intent)&gt; --- specialinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void handleGroupingActivity(int,android.content.Intent)&gt;($i1, $r1)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;(6, -1, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,int-RandomPosition:new byte[], new byte[], null,byte[]-DecoyHash2,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;(6, -1, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i2)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;(6, -1, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$3 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="boolean requestStartTor(android.content.Context)
&lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()
android.content.Intent getOrbotStartIntent()"/>
      <source name="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity"/>
      <destinition name="interICC_org.torproject.android.intent.action.START"/>
      <sender action="org.torproject.android.intent.action.START" extras="String-org.torproject.android.intent.extra.PACKAGE_NAME"/>
      <nodes>
        <node method="OrbotHelper requestStartTor" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()"/>
        <node method="OrbotHelper getOrbotStartIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="OrbotHelper getOrbotStartIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.torproject.android.intent.action.START&quot;)"/>
        <node method="OrbotHelper requestStartTor" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;org.torproject.android.intent.extra.PACKAGE_NAME&quot;, $r2)"/>
        <node method="OrbotHelper requestStartTor" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SafeSlingerActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="int-NumUsers"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="String-HostName:slinger-openpgp.appspot.com,int-NumUsers:new int,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;HostName&quot;, &quot;slinger-openpgp.appspot.com&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="String-HostName:slinger-openpgp.appspot.com,int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;HostName&quot;, &quot;slinger-openpgp.appspot.com&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="int-NumUsers:new int,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="String-HostName:slinger-openpgp.appspot.com,int-NumUsers:new int,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;HostName&quot;, &quot;slinger-openpgp.appspot.com&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startActivityForResult(android.content.Intent,int)&gt;($r3, 211)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="int-NumUsers:new int"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt; --- staticinvoke &lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)&gt;($r2, $l0, $i1)
void access$200(org.sufficientlysecure.keychain.ui.SafeSlingerActivity,long,int)
&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt; --- specialinvoke $r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startExchange(long,int)&gt;($l0, $i1)
void startExchange(long,int)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <sender extras="String-HostName:slinger-openpgp.appspot.com,int-NumUsers,byte[]-UserData:null, null"/>
      <nodes>
        <node method="SafeSlingerActivity startExchange" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SafeSlingerActivity startExchange" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/ExchangeActivity;&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;UserData&quot;, $r1)"/>
        <node method="SafeSlingerActivity startExchange" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;HostName&quot;, &quot;slinger-openpgp.appspot.com&quot;)"/>
        <node method="SafeSlingerActivity startExchange" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.SafeSlingerActivity: void startActivityForResult(android.content.Intent,int)&gt;($r3, 211)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SettingsActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="boolean onPreferenceClick(android.preference.Preference)"/>
      <source name="org.sufficientlysecure.keychain.ui.SettingsActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.SettingsSmartPGPAuthoritiesActivity"/>
      <nodes>
        <node method="SettingsActivity$ExperimentalPrefsFragment$1 onPreferenceClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="SettingsActivity$ExperimentalPrefsFragment$1 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/ui/SettingsSmartPGPAuthoritiesActivity;&quot;)"/>
        <node method="SettingsActivity$ExperimentalPrefsFragment$1 onPreferenceClick" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;org.sufficientlysecure.keychain.ui.SettingsActivity$ExperimentalPrefsFragment: void startActivityForResult(android.content.Intent,int)&gt;($r3, 28678)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.UploadKeyActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.UploadKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void checkPinAvailability()
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity">
    <singleIntent>
      <method method="void setupListenersForPresenter()" methodtrace="void onClickViewKey()"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <sender extras="Serializable@-master_key_id:new java.lang.Long"/>
      <nodes>
        <node method="SecurityProblemPresenter onClickViewKey" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/keyview/ViewKeyActivity;&quot;)"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;master_key_id&quot;, $r3)"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity">
    <singleIntent>
      <method method="android.app.Dialog onCreateDialog(android.os.Bundle)" methodtrace="void onClickViewKey()"/>
      <source name="org.sufficientlysecure.keychain.remote.ui.RemoteSecurityProblemDialogActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <sender extras="Serializable@-master_key_id:new java.lang.Long"/>
      <nodes>
        <node method="SecurityProblemPresenter onClickViewKey" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/keyview/ViewKeyActivity;&quot;)"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;master_key_id&quot;, $r3)"/>
        <node method="SecurityProblemPresenter onClickViewKey" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ShowNfcSweetspotActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)"/>
      <source name="org.sufficientlysecure.keychain.ui.ShowNfcSweetspotActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="Parcelable@-token_info:new org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo"/>
      <nodes>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;token_info&quot;, $r1)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysActivity">
    <singleIntent>
      <method method="void loadKeys(org.sufficientlysecure.keychain.keyimport.processing.LoaderState)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void loadKeys(org.sufficientlysecure.keychain.keyimport.processing.LoaderState)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void loadKeys(org.sufficientlysecure.keychain.keyimport.processing.LoaderState)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.ImportKeyResult"/>
      <nodes>
        <node method="ImportKeyResult$2 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ImportKeyResult$2 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="ImportKeyResult$2 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="ImportKeyResult$2 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void loadKeys(org.sufficientlysecure.keychain.keyimport.processing.LoaderState)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void loadKeys(org.sufficientlysecure.keychain.keyimport.processing.LoaderState)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, 0, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, 0, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity access$1200" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity access$1200" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity access$1200" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, 0, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, 0, null)
void onActivityResult(int,int,android.content.Intent)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void handleGroupingActivity(int,android.content.Intent)&gt; --- specialinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void handleGroupingActivity(int,android.content.Intent)&gt;($i1, $r1)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onPostExecute(java.lang.String)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt; --- staticinvoke &lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)&gt;($r2, $r4, $r5, $r6, $i0)
void access$1200(edu.cmu.cylab.starslinger.exchange.ExchangeActivity,byte[],byte[],byte[],int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt; --- specialinvoke $r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void showVerify(byte[],byte[],byte[],int)&gt;($r1, $r2, $r3, $i0)
void showVerify(byte[],byte[],byte[],int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,int-RandomPosition:new byte[], new byte[], null,byte[]-DecoyHash2,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showVerify" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showVerify" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$SyncCommitsDataTask onPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showVerify" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt; --- virtualinvoke $r2.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, 0, null)
void onActivityResult(int,int,android.content.Intent)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i2)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity$10 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity$10 onClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void checkPinAvailability()
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void obtainSecurityTokenPin(org.sufficientlysecure.keychain.service.input.RequiredInputParcel)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l0, $l1)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.PassphraseDialogActivity"/>
      <sender extras="Parcelable@-required_input:new org.sufficientlysecure.keychain.service.input.RequiredInputParcel"/>
      <nodes>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/PassphraseDialogActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;required_input&quot;, $r2)"/>
        <node method="BaseSecurityTokenActivity obtainSecurityTokenPin" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivityForResult(android.content.Intent,int)&gt;($r5, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity">
    <singleIntent>
      <method method="void run()" methodtrace="boolean requestStartTor(android.content.Context)
&lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt; --- $r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()
android.content.Intent getOrbotStartIntent()"/>
      <source name="org.sufficientlysecure.keychain.ui.OrbotRequiredDialogActivity"/>
      <destinition name="interICC_org.torproject.android.intent.action.START"/>
      <sender action="org.torproject.android.intent.action.START" extras="String-org.torproject.android.intent.extra.PACKAGE_NAME"/>
      <nodes>
        <node method="OrbotHelper requestStartTor" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.sufficientlysecure.keychain.network.orbot.OrbotHelper: android.content.Intent getOrbotStartIntent()&gt;()"/>
        <node method="OrbotHelper getOrbotStartIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="OrbotHelper getOrbotStartIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.torproject.android.intent.action.START&quot;)"/>
        <node method="OrbotHelper requestStartTor" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;org.torproject.android.intent.extra.PACKAGE_NAME&quot;, $r2)"/>
        <node method="OrbotHelper requestStartTor" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.service.PassphraseCacheService">
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="android.app.Notification getNotification()"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR"/>
      <nodes>
        <node method="PassphraseCacheService getNotification" type="CreateMethod" unit="$r12 = new android.content.Intent"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r13, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_CLEAR&quot;)"/>
        <node method="PassphraseCacheService getNotification" type="pendingIntentCreation" unit="$r14 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)&gt;($r13, 0, $r12, 134217728)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>
        <node method="PassphraseCacheService getNotification" type="sendOutWrapperredIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131230878, $r8, $r14)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="int onStartCommand(android.content.Intent,int,int)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: android.app.PendingIntent buildIntent(android.content.Context,long)&gt; --- $r9 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: android.app.PendingIntent buildIntent(android.content.Context,long)&gt;(r0, $l3)
android.app.PendingIntent buildIntent(android.content.Context,long)"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <nodes>
        <node method="PassphraseCacheService onStartCommand" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: android.content.Intent getIntent()&gt;()"/>
        <node method="PassphraseCacheService onStartCommand" type="ReceiveIntentFromRetValue" unit="$r9 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: android.app.PendingIntent buildIntent(android.content.Context,long)&gt;(r0, $l3)"/>
        <node method="PassphraseCacheService onStartCommand" type="sendOutWrapperredIntent" unit="virtualinvoke $r6.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l4, $r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="int onStartCommand(android.content.Intent,int,int)" methodtrace="int onStartCommand(android.content.Intent,int,int)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: android.app.PendingIntent buildIntent(android.content.Context,long)&gt; --- $r9 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: android.app.PendingIntent buildIntent(android.content.Context,long)&gt;(r0, $l3)
android.app.PendingIntent buildIntent(android.content.Context,long)"/>
      <source name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService$2"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_BROADCAST" extras="long-key_id"/>
      <nodes>
        <node method="PassphraseCacheService onStartCommand" type="ReceiveIntentFromRetValue" unit="$r9 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: android.app.PendingIntent buildIntent(android.content.Context,long)&gt;(r0, $l3)"/>
        <node method="PassphraseCacheService buildIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="PassphraseCacheService buildIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_BROADCAST&quot;)"/>
        <node method="PassphraseCacheService buildIntent" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l0)"/>
        <node method="PassphraseCacheService buildIntent" type="pendingIntentCreation" unit="$r1 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i1, $r0, 268435456)"/>
        <node method="PassphraseCacheService onStartCommand" type="sendOutWrapperredIntent" unit="virtualinvoke $r6.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l4, $r9)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="edu.cmu.cylab.starslinger.exchange.ExchangeActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void showLowestUserIdPrompt(int)"/>
      <source name="edu.cmu.cylab.starslinger.exchange.ExchangeActivity"/>
      <destinition name="edu.cmu.cylab.starslinger.exchange.GroupingActivity, edu.cmu.cylab.starslinger.exchange.VerifyActivity, edu.cmu.cylab.starslinger.exchange.GroupingActivity"/>
      <sender extras="int-UserId,byte[]-DecoyHash2,int-RandomPosition,byte[]-FlagHash,byte[]-DecoyHash1,int-NumUsers:new int"/>
      <nodes>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/VerifyActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;FlagHash&quot;, $r1)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash1&quot;, $r2)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])&gt;(&quot;DecoyHash2&quot;, $r3)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;RandomPosition&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Ledu/cmu/cylab/starslinger/exchange/GroupingActivity;&quot;)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;UserId&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;NumUsers&quot;, $i0)"/>
        <node method="ExchangeActivity showLowestUserIdPrompt" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;edu.cmu.cylab.starslinger.exchange.ExchangeActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void processScannedContent(android.net.Uri)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <sender extras="int-init_frag:5,Parcelable@-openpgp_skt_info" flags="FLAG_ACTIVITY_CLEAR_TOP "/>
      <nodes>
        <node method="ImportKeysProxyActivity processScannedContent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;init_frag&quot;, 5)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;openpgp_skt_info&quot;, $r1)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(67108864)"/>
        <node method="ImportKeysProxyActivity processScannedContent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysProxyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.piwik.sdk.extra.InstallReferrerReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)"/>
      <source name="org.piwik.sdk.extra.InstallReferrerReceiver"/>
      <sender extras="boolean-forwarded:1"/>
      <nodes>
        <node method="InstallReferrerReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r3 = virtualinvoke r0.&lt;org.piwik.sdk.extra.InstallReferrerReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="InstallReferrerReceiver onReceive" type="SetAttribute" unit="if $z0 == 0 goto virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;(null)"/>
        <node method="InstallReferrerReceiver onReceive" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;(null)"/>
        <node method="InstallReferrerReceiver onReceive" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;forwarded&quot;, 1)"/>
        <node method="InstallReferrerReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)"/>
      <source name="org.piwik.sdk.extra.InstallReferrerReceiver"/>
      <sender extras="boolean-forwarded:1"/>
      <nodes>
        <node method="InstallReferrerReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r3 = virtualinvoke r0.&lt;org.piwik.sdk.extra.InstallReferrerReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="InstallReferrerReceiver onReceive" type="SetAttribute" unit="if $z0 == 0 goto virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;(null)"/>
        <node method="InstallReferrerReceiver onReceive" type="SetAttribute" unit="if $r5 == null goto virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;(null)"/>
        <node method="InstallReferrerReceiver onReceive" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;(null)"/>
        <node method="InstallReferrerReceiver onReceive" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;forwarded&quot;, 1)"/>
        <node method="InstallReferrerReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SafeSlingerActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SafeSlingerActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysActivity">
    <singleIntent>
      <method method="void importKeys(java.util.List)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void importKeys(java.util.List)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void importKeys(java.util.List)" methodtrace="org.sufficientlysecure.keychain.operations.results.PgpSignEncryptResult executeInternal(org.sufficientlysecure.keychain.pgp.PgpSignEncryptData,org.sufficientlysecure.keychain.service.input.CryptoInputParcel,org.sufficientlysecure.keychain.util.InputData,java.io.OutputStream)
&lt;org.sufficientlysecure.keychain.operations.BaseOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt; --- $r79 = virtualinvoke r0.&lt;org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)&gt;($l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(long,long)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r2 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;($r1, $l1, $l0)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id:new long,long-key_id:new long,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.ImportKeysActivity">
    <singleIntent>
      <method method="void handleResult(org.sufficientlysecure.keychain.operations.results.ImportKeyResult,java.lang.Integer)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.ImportKeyResult"/>
      <nodes>
        <node method="ImportKeyResult$2 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ImportKeyResult$2 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="ImportKeyResult$2 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="ImportKeyResult$2 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleResult(org.sufficientlysecure.keychain.operations.results.ImportKeyResult,java.lang.Integer)" methodtrace="void handleResult(org.sufficientlysecure.keychain.operations.results.ImportKeyResult,java.lang.Integer)"/>
      <source name="org.sufficientlysecure.keychain.ui.ImportKeysActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <sender extras="Parcelable@-operation_result" flags="FLAG_ACTIVITY_CLEAR_TASK FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="ImportKeysActivity handleResult" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ImportKeysActivity handleResult" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/MainActivity;&quot;)"/>
        <node method="ImportKeysActivity handleResult" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;operation_result&quot;, $r1)"/>
        <node method="ImportKeysActivity handleResult" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268468224)"/>
        <node method="ImportKeysActivity handleResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.ImportKeysActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)"/>
      <source name="org.sufficientlysecure.keychain.ui.keyview.ViewKeyActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="Parcelable@-token_info:new org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo"/>
      <nodes>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;token_info&quot;, $r1)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.MainActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)"/>
      <source name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="boolean-first_time:1"/>
      <nodes>
        <node method="MainActivity onCreate" type="CreateMethod" unit="$r19 = new android.content.Intent"/>
        <node method="MainActivity onCreate" type="SetAttribute" unit="specialinvoke $r19.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="MainActivity onCreate" type="SetIntentExtra" unit="virtualinvoke $r19.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;first_time&quot;, 1)"/>
        <node method="MainActivity onCreate" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.MainActivity: void startActivity(android.content.Intent)&gt;($r19)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onAction()"/>
      <source name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.LogDisplayActivity"/>
      <sender extras="Parcelable@-log:new org.sufficientlysecure.keychain.operations.results.OperationResult"/>
      <nodes>
        <node method="OperationResult$1 onAction" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="OperationResult$1 onAction" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lorg/sufficientlysecure/keychain/ui/LogDisplayActivity;&quot;)"/>
        <node method="OperationResult$1 onAction" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;log&quot;, $r3)"/>
        <node method="OperationResult$1 onAction" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onSecurityTokenPostExecute(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)"/>
      <source name="org.sufficientlysecure.keychain.ui.MainActivity"/>
      <destinition name="org.sufficientlysecure.keychain.ui.CreateKeyActivity"/>
      <sender extras="Parcelable@-token_info:new org.sufficientlysecure.keychain.securitytoken.SecurityTokenInfo"/>
      <nodes>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lorg/sufficientlysecure/keychain/ui/CreateKeyActivity;&quot;)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;token_info&quot;, $r1)"/>
        <node method="BaseSecurityTokenActivity onSecurityTokenPostExecute" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity">
    <singleIntent>
      <method method="void doSecurityTokenInBackground(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)" methodtrace="void doSecurityTokenInBackground(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection)
&lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt; --- $r23 = staticinvoke &lt;org.sufficientlysecure.keychain.service.PassphraseCacheService: org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)&gt;(r0, $l2, $l3)
org.sufficientlysecure.keychain.util.Passphrase getCachedPassphrase(android.content.Context,long,long)"/>
      <source name="org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity"/>
      <destinition name="org.sufficientlysecure.keychain.service.PassphraseCacheService"/>
      <sender action="org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET" extras="long-subkey_id,long-key_id,Parcelable@-messenger:new android.os.Messenger"/>
      <nodes>
        <node method="PassphraseCacheService getCachedPassphrase" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lorg/sufficientlysecure/keychain/service/PassphraseCacheService;&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET&quot;)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;key_id&quot;, $l1)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;subkey_id&quot;, $l0)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;messenger&quot;, $r11)"/>
        <node method="PassphraseCacheService getCachedPassphrase" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
</root>
