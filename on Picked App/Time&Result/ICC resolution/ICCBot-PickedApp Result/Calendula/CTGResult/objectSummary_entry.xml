<?xml version="1.0" encoding="UTF-8"?>

<root>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void launchActivity(android.content.Intent)" methodtrace="void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.AllergiesActivity">
    <singleIntent>
      <method method="void showSearchView()" methodtrace="void showSearchView()"/>
      <source name="es.usc.citius.servando.calendula.activities.AllergiesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.AllergiesSearchActivity"/>
      <nodes>
        <node method="AllergiesActivity showSearchView" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AllergiesActivity showSearchView" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/AllergiesSearchActivity;&quot;)"/>
        <node method="AllergiesActivity showSearchView" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.AllergiesActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.v14.PlatformAlarmService">
    <singleIntent>
      <method method="android.content.Intent a(android.content.Context,int)" methodtrace="android.content.Intent a(android.content.Context,int)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <sender extras="int-EXTRA_JOB_ID"/>
      <nodes>
        <node method="PlatformAlarmService a" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="PlatformAlarmService a" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)"/>
        <node method="PlatformAlarmService a" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;EXTRA_JOB_ID&quot;, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void run()"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="java.lang.Class"/>
      <nodes>
        <node method="HomePagerActivity$2 run" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="HomePagerActivity$2 run" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, $r2)"/>
        <node method="HomePagerActivity$2 run" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.AllergiesSearchActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.f,com.afollestad.materialdialogs.b)" methodtrace="void onClick(com.afollestad.materialdialogs.f,com.afollestad.materialdialogs.b)"/>
      <source name="es.usc.citius.servando.calendula.activities.AllergiesSearchActivity"/>
      <destinition name="es.usc.citius.servando.calendula.settings.CalendulaSettingsActivity"/>
      <sender extras="boolean-show_db_dialog:1"/>
      <nodes>
        <node method="AllergiesSearchActivity$2 onClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="AllergiesSearchActivity$2 onClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Les/usc/citius/servando/calendula/settings/CalendulaSettingsActivity;&quot;)"/>
        <node method="AllergiesSearchActivity$2 onClick" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_db_dialog&quot;, 1)"/>
        <node method="AllergiesSearchActivity$2 onClick" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.activities.AllergiesSearchActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)" methodtrace="void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)" methodtrace="void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke $r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r1)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity access$800" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void onMedicineSelected(es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void onMedicineSelected(es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r1)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicineInfoActivity"/>
      <sender extras="Serializable@-medicine_id:new java.lang.Long"/>
      <nodes>
        <node method="HomePagerActivity onMedicineSelected" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="HomePagerActivity onMedicineSelected" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/MedicineInfoActivity;&quot;)"/>
        <node method="HomePagerActivity onMedicineSelected" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;medicine_id&quot;, $r2)"/>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onMedicineSelected(es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.PatientsActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onClick(android.view.View)"/>
      <source name="es.usc.citius.servando.calendula.activities.PatientsActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.PatientDetailActivity"/>
      <nodes>
        <node method="PatientsActivity$1 onClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="PatientsActivity$1 onClick" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/PatientDetailActivity;&quot;)"/>
        <node method="PatientsActivity$1 onClick" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;es.usc.citius.servando.calendula.activities.PatientsActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onNewIntent(android.content.Intent)" methodtrace="void onNewIntent(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="ConfirmActivity onNewIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="ConfirmActivity onNewIntent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.ConfirmActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.PatientsActivity">
    <singleIntent>
      <method method="void onItemClick(android.widget.AdapterView,android.view.View,int,long)" methodtrace="void onItemClick(android.widget.AdapterView,android.view.View,int,long)"/>
      <source name="es.usc.citius.servando.calendula.activities.PatientsActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.PatientDetailActivity"/>
      <sender extras="Serializable@-patient_id:new java.lang.Long"/>
      <nodes>
        <node method="PatientsActivity onItemClick" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PatientsActivity onItemClick" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/PatientDetailActivity;&quot;)"/>
        <node method="PatientsActivity onItemClick" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;patient_id&quot;, $r6)"/>
        <node method="PatientsActivity onItemClick" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.PatientsActivity: void startActivity(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onItemClick(android.widget.AdapterView,android.view.View,int,long)" methodtrace="void onItemClick(android.widget.AdapterView,android.view.View,int,long)"/>
      <source name="es.usc.citius.servando.calendula.activities.PatientsActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.PatientDetailActivity"/>
      <sender extras="Serializable@-patient_id:new java.lang.Long"/>
      <nodes>
        <node method="PatientsActivity onItemClick" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="PatientsActivity onItemClick" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/PatientDetailActivity;&quot;)"/>
        <node method="PatientsActivity onItemClick" type="SetIntentExtra" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;patient_id&quot;, $r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void onRoutineSelected(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineSelected(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineSelected(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r1)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long"/>
      <nodes>
        <node method="HomePagerActivity onRoutineSelected" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="HomePagerActivity onRoutineSelected" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/RoutinesActivity;&quot;)"/>
        <node method="HomePagerActivity onRoutineSelected" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r2)"/>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.v14.PlatformAlarmReceiver">
    <singleIntent>
      <method method="android.content.Intent a(android.content.Context,int)" methodtrace="android.content.Intent a(android.content.Context,int)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <sender extras="int-EXTRA_JOB_ID"/>
      <nodes>
        <node method="PlatformAlarmReceiver a" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="PlatformAlarmReceiver a" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)"/>
        <node method="PlatformAlarmReceiver a" type="SetIntentExtra" unit="$r0 = virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;EXTRA_JOB_ID&quot;, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void onScheduleSelected(es.usc.citius.servando.calendula.persistence.Schedule)" methodtrace="void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onScheduleSelected(es.usc.citius.servando.calendula.persistence.Schedule)" methodtrace="void onScheduleSelected(es.usc.citius.servando.calendula.persistence.Schedule)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r1)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <sender extras="Serializable@-schedule_id:new java.lang.Long"/>
      <nodes>
        <node method="HomePagerActivity onScheduleSelected" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="HomePagerActivity onScheduleSelected" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/ScheduleCreationActivity;&quot;)"/>
        <node method="HomePagerActivity onScheduleSelected" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r2)"/>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void run()
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.HomePagerActivity: void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)&gt;($r1, $r2)
void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke $r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r1)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MaterialIntroActivity"/>
      <nodes>
        <node method="HomePagerActivity$7 run" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="HomePagerActivity$7 run" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/MaterialIntroActivity;&quot;)"/>
        <node method="HomePagerActivity access$800" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke $r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r1)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity access$800" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.WebViewActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="es.usc.citius.servando.calendula.activities.WebViewActivity"/>
      <destinition name="interICC_android.intent.action.SEND"/>
      <sender action="android.intent.action.SEND" type="text/plain" extras="String-android.intent.extra.TEXT:new java.lang.String,String-android.intent.extra.SUBJECT"/>
      <nodes>
        <node method="WebViewActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="WebViewActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>
        <node method="WebViewActivity onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.TEXT&quot;, $r3)"/>
        <node method="WebViewActivity onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.SUBJECT&quot;, $r3)"/>
        <node method="WebViewActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>
        <node method="WebViewActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.WebViewActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="es.usc.citius.servando.calendula.activities.WebViewActivity"/>
      <nodes>
        <node method="WebViewActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="WebViewActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.WebViewActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService">
    <singleIntent>
      <method method="void showNotification(int,int)" methodtrace="void showNotification(int,int)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicinesActivity"/>
      <nodes>
        <node method="InstallDatabaseService showNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="InstallDatabaseService showNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/MedicinesActivity;&quot;)"/>
        <node method="InstallDatabaseService showNotification" type="pendingIntentCreation" unit="$r2 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService">
    <singleIntent>
      <method method="void access$000(es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService,int,int)" methodtrace="void showNotification(int,int)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicinesActivity"/>
      <nodes>
        <node method="InstallDatabaseService showNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="InstallDatabaseService showNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/MedicinesActivity;&quot;)"/>
        <node method="InstallDatabaseService showNotification" type="pendingIntentCreation" unit="$r2 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.f,com.afollestad.materialdialogs.b)" methodtrace="void onClick(com.afollestad.materialdialogs.f,com.afollestad.materialdialogs.b)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="es.usc.citius.servando.calendula.settings.CalendulaSettingsActivity"/>
      <sender extras="boolean-show_db_dialog:1"/>
      <nodes>
        <node method="MedicinesSearchActivity$2 onClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="MedicinesSearchActivity$2 onClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Les/usc/citius/servando/calendula/settings/CalendulaSettingsActivity;&quot;)"/>
        <node method="MedicinesSearchActivity$2 onClick" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_db_dialog&quot;, 1)"/>
        <node method="MedicinesSearchActivity$2 onClick" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.activities.MedicinesSearchActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.pinlock.PinLockActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.f,com.afollestad.materialdialogs.b)" methodtrace="void onClick(com.afollestad.materialdialogs.f,com.afollestad.materialdialogs.b)"/>
      <source name="es.usc.citius.servando.calendula.pinlock.PinLockActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <nodes>
        <node method="PinLockActivity$2 onClick" type="CreateMethod" unit="$r8 = new android.content.Intent"/>
        <node method="PinLockActivity$2 onClick" type="SetAttribute" unit="specialinvoke $r8.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/activities/StartActivity;&quot;)"/>
        <node method="PinLockActivity$2 onClick" type="SendIntent2ICC" unit="virtualinvoke $r7.&lt;es.usc.citius.servando.calendula.pinlock.PinLockActivity: void startActivity(android.content.Intent)&gt;($r8)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void onClick(com.afollestad.materialdialogs.f,com.afollestad.materialdialogs.b)" methodtrace="void onClick(com.afollestad.materialdialogs.f,com.afollestad.materialdialogs.b)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.settings.CalendulaSettingsActivity"/>
      <sender extras="boolean-show_db_dialog:1"/>
      <nodes>
        <node method="HomePagerActivity$5 onClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="HomePagerActivity$5 onClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Les/usc/citius/servando/calendula/settings/CalendulaSettingsActivity;&quot;)"/>
        <node method="HomePagerActivity$5 onClick" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;show_db_dialog&quot;, 1)"/>
        <node method="HomePagerActivity$5 onClick" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicineInfoActivity">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicineInfoActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <sender extras="boolean-StartActivity.extras.return_to_previous:1"/>
      <nodes>
        <node method="CalendulaActivity onResume" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="CalendulaActivity onResume" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/StartActivity;&quot;)"/>
        <node method="CalendulaActivity onResume" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;StartActivity.extras.return_to_previous&quot;, 1)"/>
        <node method="CalendulaActivity onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.CalendulaActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity">
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule()" methodtrace="void updateSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r2, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.PatientDetailActivity">
    <singleIntent>
      <method method="void startScanActivity()" methodtrace="void startScanActivity()"/>
      <source name="es.usc.citius.servando.calendula.activities.PatientDetailActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <sender extras="String-after_scan_pkg,String-after_scan_cls:class Les/usc/citius/servando/calendula/activities/PatientDetailActivity;,long-patient_id:new long"/>
      <nodes>
        <node method="PatientDetailActivity startScanActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PatientDetailActivity startScanActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/ScanActivity;&quot;)"/>
        <node method="PatientDetailActivity startScanActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;after_scan_pkg&quot;, $r2)"/>
        <node method="PatientDetailActivity startScanActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;after_scan_cls&quot;, $r2)"/>
        <node method="PatientDetailActivity startScanActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;patient_id&quot;, $l0)"/>
        <node method="PatientDetailActivity startScanActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.PatientDetailActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void launchActivityDelayed(java.lang.Class,int)" methodtrace="void run()"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="java.lang.Class"/>
      <nodes>
        <node method="HomePagerActivity$2 run" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="HomePagerActivity$2 run" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, $r2)"/>
        <node method="HomePagerActivity$2 run" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.v21.PlatformJobService">
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <sender action="com.google.android.gms.gcm.ACTION_TASK_READY"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.google.android.gms.gcm.ACTION_TASK_READY&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/gcm/PlatformGcmService;&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity">
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity">
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void saveSchedule()" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void createSchedule()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r3, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScheduleCreationActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onAllChecked()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onAllChecked()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onAllChecked()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onAllChecked()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onAllChecked()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onAllChecked()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onClickFab()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClickFab()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClickFab()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClickFab()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClickFab()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClickFab()" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.RoutinesActivity">
    <singleIntent>
      <method method="void onRoutineDeleted(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineDeleted(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineDeleted(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineDeleted(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineDeleted(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineDeleted(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onDeleteRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void cancelAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 0, 0)"/>
        <node method="AlarmScheduler cancelAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity$2"/>
      <sender action="finish_lock_screen_alarm_activity"/>
      <nodes>
        <node method="NotificationEventReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;finish_lock_screen_alarm_activity&quot;)"/>
        <node method="NotificationEventReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r11, $r7, $r1)
void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r11, $r7, $r1)
void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender action="finish_lock_screen_alarm_activity" extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="NotificationEventReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;finish_lock_screen_alarm_activity&quot;)"/>
        <node method="NotificationEventReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r11, $r7, $r1)
void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender action="finish_lock_screen_alarm_activity" extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="NotificationEventReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;finish_lock_screen_alarm_activity&quot;)"/>
        <node method="NotificationEventReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r10, $r8, $r7, $r1)
void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3, $r4)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender action="finish_lock_screen_alarm_activity" extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="NotificationEventReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;finish_lock_screen_alarm_activity&quot;)"/>
        <node method="NotificationEventReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r10, $r8, $r7, $r1)
void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3, $r4)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender action="finish_lock_screen_alarm_activity" extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="NotificationEventReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;finish_lock_screen_alarm_activity&quot;)"/>
        <node method="NotificationEventReceiver onReceive" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r11, $r7, $r1)
void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r10, $r8, $r7, $r1)
void onIntakeConfirmAll(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3, $r4)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="NotificationEventReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r10, $r8, $r7, $r1)
void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3, $r4)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r10, $r8, $r7, $r1)
void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3, $r4)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r9.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r11, $r7, $r1)
void onIntakeCancelled(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r2, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.JobRescheduleService">
    <singleIntent>
      <method method="void a(android.content.Context)" methodtrace="android.content.ComponentName a(android.content.Context,android.content.Intent)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <sender extras="int-com.evernote.android.job.wakelockid:1"/>
      <nodes>
        <node method="l a" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="l a" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;com.evernote.android.job.wakelockid&quot;, $i0)"/>
        <node method="l a" type="SendIntent2ICC" unit="$r3 = virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Context)" methodtrace="void a(android.content.Context)
&lt;com.evernote.android.job.l: android.content.ComponentName a(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;com.evernote.android.job.l: android.content.ComponentName a(android.content.Context,android.content.Intent)&gt;($r0, $r1)
android.content.ComponentName a(android.content.Context,android.content.Intent)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.JobRescheduleService"/>
      <sender extras="int-com.evernote.android.job.wakelockid:1"/>
      <nodes>
        <node method="JobRescheduleService a" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="JobRescheduleService a" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/JobRescheduleService;&quot;)"/>
        <node method="l a" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="l a" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;com.evernote.android.job.wakelockid&quot;, $i0)"/>
        <node method="l a" type="SendIntent2ICC" unit="$r3 = virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Context)" methodtrace="void a(android.content.Context)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="JobRescheduleService a" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="JobRescheduleService a" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/JobRescheduleService;&quot;)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.v14.PlatformAlarmService">
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <sender action="com.google.android.gms.gcm.ACTION_TASK_READY"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.google.android.gms.gcm.ACTION_TASK_READY&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/gcm/PlatformGcmService;&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="interICC_com.evernote.android.job.ADD_JOB_CREATOR"/>
      <sender action="com.evernote.android.job.ADD_JOB_CREATOR"/>
      <nodes>
        <node method="e b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="e b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.evernote.android.job.ADD_JOB_CREATOR&quot;)"/>
        <node method="e b" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.v14.PlatformAlarmService">
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="interICC_com.evernote.android.job.ADD_JOB_CREATOR"/>
      <sender action="com.evernote.android.job.ADD_JOB_CREATOR"/>
      <nodes>
        <node method="e b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="e b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.evernote.android.job.ADD_JOB_CREATOR&quot;)"/>
        <node method="e b" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <sender action="com.google.android.gms.gcm.ACTION_TASK_READY"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.google.android.gms.gcm.ACTION_TASK_READY&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/gcm/PlatformGcmService;&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void a(com.evernote.android.job.v14.PlatformAlarmService,android.content.Intent)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.scheduling.BootReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="BootReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="BootReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.BootReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="BootReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="BootReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.BootReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="BootReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="BootReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.BootReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.BootReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.UpdateFromFileActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)"/>
      <source name="es.usc.citius.servando.calendula.activities.UpdateFromFileActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="UpdateFromFileActivity onCreate" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="UpdateFromFileActivity onCreate" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r8, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmSchedulesActivity;&quot;)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)"/>
      <source name="es.usc.citius.servando.calendula.activities.UpdateFromFileActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <sender extras="Bundle-,(,)"/>
      <nodes>
        <node method="UpdateFromFileActivity onCreate" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="UpdateFromFileActivity onCreate" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r8, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmSchedulesActivity;&quot;)"/>
        <node method="UpdateFromFileActivity onCreate" type="SetIntentExtra" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)&gt;($r1)"/>
        <node method="UpdateFromFileActivity onCreate" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.UpdateFromFileActivity: void startActivity(android.content.Intent)&gt;($r7)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)"/>
      <source name="es.usc.citius.servando.calendula.activities.UpdateFromFileActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <sender extras="Bundle-,(,)"/>
      <nodes>
        <node method="UpdateFromFileActivity onCreate" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="UpdateFromFileActivity onCreate" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r8, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmSchedulesActivity;&quot;)"/>
        <node method="UpdateFromFileActivity onCreate" type="SetIntentExtra" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicinesActivity">
    <singleIntent>
      <method method="void showSearchView(java.lang.String)" methodtrace="void showSearchView(java.lang.String)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <sender extras="String-MedicinesSearchActivity.extras.EXTRA_SEARCH_TERM"/>
      <nodes>
        <node method="MedicinesActivity showSearchView" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MedicinesActivity showSearchView" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/MedicinesSearchActivity;&quot;)"/>
        <node method="MedicinesActivity showSearchView" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MedicinesSearchActivity.extras.EXTRA_SEARCH_TERM&quot;, $r2)"/>
        <node method="MedicinesActivity showSearchView" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.MedicinesActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, 1314)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.WebViewActivity">
    <singleIntent>
      <method method="boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)" methodtrace="boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)"/>
      <source name="es.usc.citius.servando.calendula.activities.WebViewActivity"/>
      <nodes>
        <node method="WebViewActivity$CustomWebViewClient shouldOverrideUrlLoading" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="WebViewActivity$CustomWebViewClient shouldOverrideUrlLoading" type="SendIntent2ICC" unit="virtualinvoke $r5.&lt;es.usc.citius.servando.calendula.activities.WebViewActivity: void startActivity(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void processIntent()" methodtrace="void processIntent()"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <sender extras="boolean-invalid_notification_error:1"/>
      <nodes>
        <node method="ConfirmActivity processIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ConfirmActivity processIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/HomePagerActivity;&quot;)"/>
        <node method="ConfirmActivity processIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;invalid_notification_error&quot;, 1)"/>
        <node method="ConfirmActivity processIntent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.ConfirmActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.StartActivity">
    <singleIntent>
      <method method="void verifyUnlockAndLaunch()" methodtrace="void verifyUnlockAndLaunch()"/>
      <source name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <destinition name="es.usc.citius.servando.calendula.pinlock.PinLockActivity"/>
      <sender action="PinLockActivity.action.verify_pin"/>
      <nodes>
        <node method="StartActivity verifyUnlockAndLaunch" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/pinlock/PinLockActivity;&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;PinLockActivity.action.verify_pin&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.StartActivity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 15766)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void verifyUnlockAndLaunch()" methodtrace="void verifyUnlockAndLaunch()"/>
      <source name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <destinition name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="StartActivity verifyUnlockAndLaunch" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/HomePagerActivity;&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.StartActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.StartActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void verifyUnlockAndLaunch()"/>
      <source name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <destinition name="es.usc.citius.servando.calendula.pinlock.PinLockActivity"/>
      <sender action="PinLockActivity.action.verify_pin"/>
      <nodes>
        <node method="StartActivity verifyUnlockAndLaunch" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/pinlock/PinLockActivity;&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;PinLockActivity.action.verify_pin&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.StartActivity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 15766)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void verifyUnlockAndLaunch()"/>
      <source name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <destinition name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="StartActivity verifyUnlockAndLaunch" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/HomePagerActivity;&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.StartActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicineInfoActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicineInfoActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicinesActivity"/>
      <sender extras="Serializable@-medicine_id:new java.lang.Long"/>
      <nodes>
        <node method="MedicineInfoActivity onOptionsItemSelected" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="MedicineInfoActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/MedicinesActivity;&quot;)"/>
        <node method="MedicineInfoActivity onOptionsItemSelected" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;medicine_id&quot;, $r4)"/>
        <node method="MedicineInfoActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.MedicineInfoActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver">
    <singleIntent>
      <method method="void showNotification(android.content.Context,java.lang.String)" methodtrace="void showNotification(android.content.Context,java.lang.String)
&lt;es.usc.citius.servando.calendula.activities.PickupNotification: void notify(android.content.Context,java.lang.String,java.lang.String,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.PickupNotification: void notify(android.content.Context,java.lang.String,java.lang.String,android.content.Intent)&gt;($r1, &quot;Remember to pickup your meds&quot;, $r2, $r3)
void notify(android.content.Context,java.lang.String,java.lang.String,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.activities.CalendarActivity"/>
      <sender extras="int-action:1"/>
      <nodes>
        <node method="PickupAlarmReceiver showNotification" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="PickupAlarmReceiver showNotification" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/activities/CalendarActivity;&quot;)"/>
        <node method="PickupAlarmReceiver showNotification" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 1)"/>
        <node method="PickupNotification notify" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter3: android.content.Intent"/>
        <node method="PickupNotification notify" type="pendingIntentCreation" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r3, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void showNotification(android.content.Context,java.lang.String)
&lt;es.usc.citius.servando.calendula.activities.PickupNotification: void notify(android.content.Context,java.lang.String,java.lang.String,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.PickupNotification: void notify(android.content.Context,java.lang.String,java.lang.String,android.content.Intent)&gt;($r1, &quot;Remember to pickup your meds&quot;, $r2, $r3)
void notify(android.content.Context,java.lang.String,java.lang.String,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.activities.CalendarActivity"/>
      <sender extras="int-action:1"/>
      <nodes>
        <node method="PickupAlarmReceiver showNotification" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="PickupAlarmReceiver showNotification" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/activities/CalendarActivity;&quot;)"/>
        <node method="PickupAlarmReceiver showNotification" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 1)"/>
        <node method="PickupNotification notify" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter3: android.content.Intent"/>
        <node method="PickupNotification notify" type="pendingIntentCreation" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r3, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.v14.PlatformAlarmReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;com.evernote.android.job.v14.PlatformAlarmService: android.content.Intent a(android.content.Context,int)&gt; --- $r2 = staticinvoke &lt;com.evernote.android.job.v14.PlatformAlarmService: android.content.Intent a(android.content.Context,int)&gt;($r1, $i0)
android.content.Intent a(android.content.Context,int)
&lt;com.evernote.android.job.g$a: android.content.ComponentName a(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: android.content.ComponentName a(android.content.Context,android.content.Intent)&gt;($r1, $r2)
android.content.ComponentName a(android.content.Context,android.content.Intent)
&lt;com.evernote.android.job.l: android.content.ComponentName a(android.content.Context,android.content.Intent)&gt; --- $r1 = staticinvoke &lt;com.evernote.android.job.l: android.content.ComponentName a(android.content.Context,android.content.Intent)&gt;($r2, $r0)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <sender extras="int-EXTRA_JOB_ID"/>
      <nodes>
        <node method="PlatformAlarmReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = staticinvoke &lt;com.evernote.android.job.v14.PlatformAlarmService: android.content.Intent a(android.content.Context,int)&gt;($r1, $i0)"/>
        <node method="PlatformAlarmService a" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="PlatformAlarmService a" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)"/>
        <node method="PlatformAlarmService a" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;EXTRA_JOB_ID&quot;, $i0)"/>
        <node method="g$a a" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="android.content.ComponentName a(android.content.Context,android.content.Intent)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <sender extras="int-com.evernote.android.job.wakelockid:1"/>
      <nodes>
        <node method="l a" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="l a" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;com.evernote.android.job.wakelockid&quot;, $i0)"/>
        <node method="l a" type="SendIntent2ICC" unit="$r3 = virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="android.content.ComponentName a(android.content.Context,android.content.Intent)
&lt;com.evernote.android.job.l: android.content.ComponentName a(android.content.Context,android.content.Intent)&gt; --- $r1 = staticinvoke &lt;com.evernote.android.job.l: android.content.ComponentName a(android.content.Context,android.content.Intent)&gt;($r2, $r0)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <sender extras="int-com.evernote.android.job.wakelockid:1"/>
      <nodes>
        <node method="g$a a" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter1: android.content.Intent"/>
        <node method="l a" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="l a" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;com.evernote.android.job.wakelockid&quot;, $i0)"/>
        <node method="l a" type="SendIntent2ICC" unit="$r3 = virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity">
    <singleIntent>
      <method method="void run()" methodtrace="void run()
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r2)
android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
      <source name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <nodes>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity">
    <singleIntent>
      <method method="void animateAndFinish()" methodtrace="void run()
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r2)
android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
      <source name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <nodes>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity">
    <singleIntent>
      <method method="void access$000(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)" methodtrace="void run()
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r2)
android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
      <source name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <nodes>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void run()
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r2)
android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
      <source name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <nodes>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.CalendarActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)&gt; --- virtualinvoke $r3.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)&gt;($r4, $r2)
void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)
&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt; --- $r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)
android.app.PendingIntent alarmPendingIntent(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.activities.CalendarActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver"/>
      <sender extras="int-action:10"/>
      <nodes>
        <node method="PickupReminderMgr setCheckPickupsAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)"/>
        <node method="PickupReminderMgr setCheckPickupsAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/PickupAlarmReceiver;&quot;)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 10)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)&gt; --- virtualinvoke $r3.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)&gt;($r4, $r2)
void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)
&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt; --- $r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)
android.app.PendingIntent alarmPendingIntent(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.activities.CalendarActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver"/>
      <sender extras="int-action:10"/>
      <nodes>
        <node method="PickupReminderMgr setCheckPickupsAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/PickupAlarmReceiver;&quot;)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 10)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="android.app.PendingIntent alarmPendingIntent(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.activities.CalendarActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver"/>
      <sender extras="int-action:10"/>
      <nodes>
        <node method="PickupReminderMgr alarmPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/PickupAlarmReceiver;&quot;)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 10)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)&gt; --- virtualinvoke $r3.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)&gt;($r4, $r2)
void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)
&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt; --- $r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)
android.app.PendingIntent alarmPendingIntent(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.activities.CalendarActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver"/>
      <sender extras="int-action:10"/>
      <nodes>
        <node method="PickupReminderMgr setCheckPickupsAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)"/>
        <node method="PickupReminderMgr setCheckPickupsAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/PickupAlarmReceiver;&quot;)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 10)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 134217728)"/>
        <node method="PickupReminderMgr setCheckPickupsAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r6.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r4)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)&gt; --- virtualinvoke $r3.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)&gt;($r4, $r2)
void setCheckPickupsAlarm(android.content.Context,org.joda.time.LocalDate)
&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt; --- $r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)
android.app.PendingIntent alarmPendingIntent(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.activities.CalendarActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.PickupAlarmReceiver"/>
      <sender extras="int-action:10"/>
      <nodes>
        <node method="PickupReminderMgr setCheckPickupsAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.PickupReminderMgr: android.app.PendingIntent alarmPendingIntent(android.content.Context)&gt;($r1)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/PickupAlarmReceiver;&quot;)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 10)"/>
        <node method="PickupReminderMgr alarmPendingIntent" type="pendingIntentCreation" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 134217728)"/>
        <node method="PickupReminderMgr setCheckPickupsAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r6.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r4)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.pinlock.PinLockActivity">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="es.usc.citius.servando.calendula.pinlock.PinLockActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <sender extras="boolean-StartActivity.extras.return_to_previous:1"/>
      <nodes>
        <node method="CalendulaActivity onResume" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="CalendulaActivity onResume" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/StartActivity;&quot;)"/>
        <node method="CalendulaActivity onResume" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;StartActivity.extras.return_to_previous&quot;, 1)"/>
        <node method="CalendulaActivity onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.CalendulaActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService">
    <singleIntent>
      <method method="void onProgressUpdate(int)" methodtrace="void showNotification(int,int)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicinesActivity"/>
      <nodes>
        <node method="InstallDatabaseService showNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="InstallDatabaseService showNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/MedicinesActivity;&quot;)"/>
        <node method="InstallDatabaseService showNotification" type="pendingIntentCreation" unit="$r2 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService">
    <singleIntent>
      <method method="void onComplete()" methodtrace="void onComplete()"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="interICC_calendula.persistence.medDatabases.action.DONE"/>
      <sender action="calendula.persistence.medDatabases.action.DONE"/>
      <nodes>
        <node method="InstallDatabaseService onComplete" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="InstallDatabaseService onComplete" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.action.DONE&quot;)"/>
        <node method="InstallDatabaseService onComplete" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void sendBroadcast(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.StartActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void verifyUnlockAndLaunch()"/>
      <source name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <destinition name="es.usc.citius.servando.calendula.pinlock.PinLockActivity"/>
      <sender action="PinLockActivity.action.verify_pin"/>
      <nodes>
        <node method="StartActivity verifyUnlockAndLaunch" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/pinlock/PinLockActivity;&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;PinLockActivity.action.verify_pin&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.StartActivity: void startActivityForResult(android.content.Intent,int)&gt;($r2, 15766)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void verifyUnlockAndLaunch()"/>
      <source name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <destinition name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="StartActivity verifyUnlockAndLaunch" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/HomePagerActivity;&quot;)"/>
        <node method="StartActivity verifyUnlockAndLaunch" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.StartActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <sender extras="boolean-StartActivity.extras.return_to_previous:1"/>
      <nodes>
        <node method="CalendulaActivity onResume" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="CalendulaActivity onResume" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/StartActivity;&quot;)"/>
        <node method="CalendulaActivity onResume" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;StartActivity.extras.return_to_previous&quot;, 1)"/>
        <node method="CalendulaActivity onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.CalendulaActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <nodes>
        <node method="ConfirmActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ConfirmActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/StartActivity;&quot;)"/>
        <node method="ConfirmActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.ConfirmActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity">
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onDailyAgendaItemCheck(android.widget.ImageButton)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void &lt;init&gt;(es.usc.citius.servando.calendula.activities.ConfirmActivity$ConfirmItemAdapter,android.view.View)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onAllChecked()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r4, $r5, $r1, r0)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r7, $r8, r0)
void onDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r2, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="android.support.v7.widget.RecyclerView$x onCreateViewHolder(android.view.ViewGroup,int)" methodtrace="void onDailyAgendaItemCheck(android.widget.ImageButton)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r9, $r10, $r8, r0)
void onDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r7, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ScanActivity">
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void doScan()" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ScanActivity">
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;android.support.v4.app.j: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r4.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void c()
&lt;com.e.c.e.a.a: android.content.Intent d()&gt; --- $r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()
android.content.Intent d()
&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt; --- specialinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent)&gt;($r1)
void a(android.content.Intent)
&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt; --- virtualinvoke r0.&lt;com.e.c.e.a.a: void a(android.content.Intent,int)&gt;($r1, $i0)
void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.Class"/>
      <sender action="com.google.zxing.client.android.SCAN" extras="String-SCAN_FORMATS:44null" flags="FLAG_ACTIVITY_CLEAR_TOP , FLAG_ACTIVITY_NEW_DOCUMENT "/>
      <nodes>
        <node method="a c" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.e.c.e.a.a: android.content.Intent d()&gt;()"/>
        <node method="a d" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="a d" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.google.zxing.client.android.SCAN&quot;)"/>
        <node method="a d" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;SCAN_FORMATS&quot;, $r8)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>
        <node method="a d" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.view.View)" methodtrace="void a(android.content.Intent,int)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <nodes>
        <node method="a a" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="a a" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;android.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService">
    <singleIntent>
      <method method="void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)" methodtrace="void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <sender extras="String-calendula.persistence.medDatabases.extra.DB_VERSION:new java.lang.Object,String-calendula.persistence.medDatabases.extra.DB_PATH,String-calendula.persistence.medDatabases.extra.DB_PREF_VALUE:new java.lang.Object"/>
      <nodes>
        <node method="InstallDatabaseService startSetup" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/drugdb/download/InstallDatabaseService;&quot;)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PATH&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PREF_VALUE&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_VERSION&quot;, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)" methodtrace="void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <sender action="calendula.persistence.medDatabases.action.UPDATE, calendula.persistence.medDatabases.action.SETUP" extras="String-calendula.persistence.medDatabases.extra.DB_VERSION:new java.lang.Object,String-calendula.persistence.medDatabases.extra.DB_PATH,String-calendula.persistence.medDatabases.extra.DB_PREF_VALUE:new java.lang.Object"/>
      <nodes>
        <node method="InstallDatabaseService startSetup" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/drugdb/download/InstallDatabaseService;&quot;)"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;($r6)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PATH&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PREF_VALUE&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_VERSION&quot;, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ScanActivity">
    <singleIntent>
      <method method="void onActivityResult(int,int,android.content.Intent)" methodtrace="void onActivityResult(int,int,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <destinition name="java.lang.String"/>
      <sender extras="Bundle-,(,)"/>
      <nodes>
        <node method="ScanActivity onActivityResult" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ScanActivity onActivityResult" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)&gt;($r6, $r9)"/>
        <node method="ScanActivity onActivityResult" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)&gt;($r17)"/>
        <node method="ScanActivity onActivityResult" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.ScanActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.RoutinesActivity">
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineCreated(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void processIntent()"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <sender extras="boolean-invalid_notification_error:1"/>
      <nodes>
        <node method="ConfirmActivity processIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ConfirmActivity processIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/HomePagerActivity;&quot;)"/>
        <node method="ConfirmActivity processIntent" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;invalid_notification_error&quot;, 1)"/>
        <node method="ConfirmActivity processIntent" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.ConfirmActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.PatientsActivity">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="es.usc.citius.servando.calendula.activities.PatientsActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <sender extras="boolean-StartActivity.extras.return_to_previous:1"/>
      <nodes>
        <node method="CalendulaActivity onResume" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="CalendulaActivity onResume" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/StartActivity;&quot;)"/>
        <node method="CalendulaActivity onResume" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;StartActivity.extras.return_to_previous&quot;, 1)"/>
        <node method="CalendulaActivity onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.CalendulaActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.JobBootReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <sender action="com.google.android.gms.gcm.ACTION_TASK_READY"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.google.android.gms.gcm.ACTION_TASK_READY&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/gcm/PlatformGcmService;&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void b(android.content.Context)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="interICC_com.evernote.android.job.ADD_JOB_CREATOR"/>
      <sender action="com.evernote.android.job.ADD_JOB_CREATOR"/>
      <nodes>
        <node method="e b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="e b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.evernote.android.job.ADD_JOB_CREATOR&quot;)"/>
        <node method="e b" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobBootReceiver"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.CalendarActivity"/>
      <nodes>
        <node method="HomePagerActivity onOptionsItemSelected" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="HomePagerActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/CalendarActivity;&quot;)"/>
        <node method="HomePagerActivity onOptionsItemSelected" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r7)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="boolean onOptionsItemSelected(android.view.MenuItem)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r7)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.SchedulesHelpActivity"/>
      <nodes>
        <node method="HomePagerActivity onOptionsItemSelected" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="HomePagerActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/SchedulesHelpActivity;&quot;)"/>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <sender extras="boolean-StartActivity.extras.return_to_previous:1"/>
      <nodes>
        <node method="CalendulaActivity onResume" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="CalendulaActivity onResume" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/StartActivity;&quot;)"/>
        <node method="CalendulaActivity onResume" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;StartActivity.extras.return_to_previous&quot;, 1)"/>
        <node method="CalendulaActivity onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.CalendulaActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicineInfoActivity">
    <singleIntent>
      <method method="void handleEvent(es.usc.citius.servando.calendula.events.PersistenceEvents$ModelCreateOrUpdateEvent)" methodtrace="void openProspect(es.usc.citius.servando.calendula.drugdb.model.persistence.Prescription,android.content.Context,boolean)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicineInfoActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.WebViewActivity"/>
      <sender extras="Parcelable@-webview_param_request:new es.usc.citius.servando.calendula.activities.WebViewRequest"/>
      <nodes>
        <node method="ProspectUtils openProspect" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ProspectUtils openProspect" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/activities/WebViewActivity;&quot;)"/>
        <node method="ProspectUtils openProspect" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;webview_param_request&quot;, $r11)"/>
        <node method="ProspectUtils openProspect" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleEvent(es.usc.citius.servando.calendula.events.PersistenceEvents$ModelCreateOrUpdateEvent)" methodtrace="void onClick(android.view.View)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicineInfoActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicinesActivity"/>
      <sender extras="String-MedicinesActivity.extras.SEARCH_TEXT:new es.usc.citius.servando.calendula.persistence.Medicine,Serializable@-medicine_id:new java.lang.Long"/>
      <nodes>
        <node method="MedInfoFragment$2 onClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="MedInfoFragment$2 onClick" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Les/usc/citius/servando/calendula/activities/MedicinesActivity;&quot;)"/>
        <node method="MedInfoFragment$2 onClick" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MedicinesActivity.extras.SEARCH_TEXT&quot;, $r6)"/>
        <node method="MedInfoFragment$2 onClick" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;medicine_id&quot;, $r7)"/>
        <node method="MedInfoFragment$2 onClick" type="SendIntent2ICC" unit="virtualinvoke $r3.&lt;es.usc.citius.servando.calendula.fragments.MedInfoFragment: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.UpdateDatabaseService">
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void onDownloadFailed(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.UpdateDatabaseService"/>
      <destinition name="interICC_calendula.persistence.medDatabases.action.ERROR"/>
      <sender action="calendula.persistence.medDatabases.action.ERROR"/>
      <nodes>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="SetAttribute" unit="virtualinvoke $r9.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.action.ERROR&quot;)"/>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.v14.PlatformAlarmService">
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="interICC_com.evernote.android.job.ADD_JOB_CREATOR"/>
      <sender action="com.evernote.android.job.ADD_JOB_CREATOR"/>
      <nodes>
        <node method="e b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="e b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.evernote.android.job.ADD_JOB_CREATOR&quot;)"/>
        <node method="e b" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <sender action="com.google.android.gms.gcm.ACTION_TASK_READY"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.google.android.gms.gcm.ACTION_TASK_READY&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/gcm/PlatformGcmService;&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void run()" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmActivity">
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r5, $r6, $r1, $i1)
void onUserDelayRoutine(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, 0)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r5, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r5)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onClick(android.content.DialogInterface,int)" methodtrace="void onClick(android.content.DialogInterface,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt; --- virtualinvoke $r4.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)&gt;($r7, $r8, $r6, $r1, $l0)
void onUserDelayHourlySchedule(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r4, $r2, $r3, 0)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)&gt;($r1, $r6, $r3, $l0)
void setRepeatAlarm(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context,long)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r1, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService">
    <singleIntent>
      <method method="void handleSetup(java.lang.String,java.lang.String,java.lang.String)" methodtrace="void onDownloadFailed(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="interICC_calendula.persistence.medDatabases.action.ERROR"/>
      <sender action="calendula.persistence.medDatabases.action.ERROR"/>
      <nodes>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="SetAttribute" unit="virtualinvoke $r9.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.action.ERROR&quot;)"/>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void handleSetup(java.lang.String,java.lang.String,java.lang.String)" methodtrace="void onComplete()"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="interICC_calendula.persistence.medDatabases.action.DONE"/>
      <sender action="calendula.persistence.medDatabases.action.DONE"/>
      <nodes>
        <node method="InstallDatabaseService onComplete" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="InstallDatabaseService onComplete" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.action.DONE&quot;)"/>
        <node method="InstallDatabaseService onComplete" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void sendBroadcast(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService">
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onDownloadFailed(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="interICC_calendula.persistence.medDatabases.action.ERROR"/>
      <sender action="calendula.persistence.medDatabases.action.ERROR"/>
      <nodes>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="SetAttribute" unit="virtualinvoke $r9.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.action.ERROR&quot;)"/>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onComplete()"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <destinition name="interICC_calendula.persistence.medDatabases.action.DONE"/>
      <sender action="calendula.persistence.medDatabases.action.DONE"/>
      <nodes>
        <node method="InstallDatabaseService onComplete" type="CreateMethod" unit="$r5 = new android.content.Intent"/>
        <node method="InstallDatabaseService onComplete" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.action.DONE&quot;)"/>
        <node method="InstallDatabaseService onComplete" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void sendBroadcast(android.content.Intent)&gt;($r5)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.RoutinesActivity">
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)" methodtrace="void onRoutineEdited(es.usc.citius.servando.calendula.persistence.Routine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt; --- virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateRoutine(es.usc.citius.servando.calendula.persistence.Routine,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r6, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.RoutinesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity">
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)" methodtrace="void createSchedule(es.usc.citius.servando.calendula.persistence.Schedule,java.util.List,es.usc.citius.servando.calendula.persistence.Medicine)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r13.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.v21.PlatformJobService">
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <sender action="com.google.android.gms.gcm.ACTION_TASK_READY"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.google.android.gms.gcm.ACTION_TASK_READY&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="int b(android.content.Context)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/gcm/PlatformGcmService;&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void a(boolean)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r1, $i0)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="void b(android.content.Context)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="interICC_com.evernote.android.job.ADD_JOB_CREATOR"/>
      <sender action="com.evernote.android.job.ADD_JOB_CREATOR"/>
      <nodes>
        <node method="e b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="e b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.evernote.android.job.ADD_JOB_CREATOR&quot;)"/>
        <node method="e b" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="boolean onStartJob(android.app.job.JobParameters)" methodtrace="boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)"/>
      <source name="com.evernote.android.job.v21.PlatformJobService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity">
    <singleIntent>
      <method method="void onBackPressed()" methodtrace="void run()
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r2)
android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)
&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt; --- $r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
      <source name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <nodes>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent access$400(es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity)&gt;($r5)"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="ReceiveIntentFromOutMethod" unit="$r4 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: android.content.Intent getIntent()&gt;()"/>
        <node method="LockScreenAlarmActivity$5 run" type="SendIntent2ICC" unit="virtualinvoke $r2.&lt;es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.PatientDetailActivity">
    <singleIntent>
      <method method="boolean onOptionsItemSelected(android.view.MenuItem)" methodtrace="void startScanActivity()"/>
      <source name="es.usc.citius.servando.calendula.activities.PatientDetailActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ScanActivity"/>
      <sender extras="String-after_scan_pkg,String-after_scan_cls:class Les/usc/citius/servando/calendula/activities/PatientDetailActivity;,long-patient_id:new long"/>
      <nodes>
        <node method="PatientDetailActivity startScanActivity" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="PatientDetailActivity startScanActivity" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/ScanActivity;&quot;)"/>
        <node method="PatientDetailActivity startScanActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;after_scan_pkg&quot;, $r2)"/>
        <node method="PatientDetailActivity startScanActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;after_scan_cls&quot;, $r2)"/>
        <node method="PatientDetailActivity startScanActivity" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;patient_id&quot;, $l0)"/>
        <node method="PatientDetailActivity startScanActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.PatientDetailActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity">
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)" methodtrace="void updateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.persistence.Schedule,java.util.List)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt; --- virtualinvoke $r23.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)&gt;($r1, r0)
void onCreateOrUpdateSchedule(es.usc.citius.servando.calendula.persistence.Schedule,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r7, $r2)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.drugdb.download.DBDownloadReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)&gt;($r1, $r8, $r10, $r16)
void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.DBDownloadReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <sender extras="String-calendula.persistence.medDatabases.extra.DB_VERSION:new java.lang.Object,String-calendula.persistence.medDatabases.extra.DB_PATH,String-calendula.persistence.medDatabases.extra.DB_PREF_VALUE:new java.lang.Object"/>
      <nodes>
        <node method="InstallDatabaseService startSetup" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/drugdb/download/InstallDatabaseService;&quot;)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PATH&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PREF_VALUE&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_VERSION&quot;, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onDownloadFailed(android.content.Context)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.DBDownloadReceiver"/>
      <destinition name="interICC_calendula.persistence.medDatabases.action.ERROR"/>
      <sender action="calendula.persistence.medDatabases.action.ERROR"/>
      <nodes>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="CreateMethod" unit="$r9 = new android.content.Intent"/>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="SetAttribute" unit="virtualinvoke $r9.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.action.ERROR&quot;)"/>
        <node method="DownloadDatabaseHelper onDownloadFailed" type="SendIntent2ICC" unit="virtualinvoke $r1.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r9)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)&gt;($r1, $r8, $r10, $r16)
void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.DBDownloadReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <sender action="calendula.persistence.medDatabases.action.UPDATE, calendula.persistence.medDatabases.action.SETUP" extras="String-calendula.persistence.medDatabases.extra.DB_VERSION:new java.lang.Object,String-calendula.persistence.medDatabases.extra.DB_PATH:new java.lang.Object,String-calendula.persistence.medDatabases.extra.DB_PREF_VALUE:new java.lang.Object"/>
      <nodes>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PATH&quot;, $r2)"/>
        <node method="DBDownloadReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="DBDownloadReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.drugdb.download.DBDownloadReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="InstallDatabaseService startSetup" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/drugdb/download/InstallDatabaseService;&quot;)"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;($r6)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PATH&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PREF_VALUE&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_VERSION&quot;, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)&gt;($r1, $r8, $r10, $r16)
void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.DBDownloadReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <sender action="calendula.persistence.medDatabases.action.UPDATE, calendula.persistence.medDatabases.action.SETUP" extras="String-calendula.persistence.medDatabases.extra.DB_VERSION:new java.lang.Object,String-calendula.persistence.medDatabases.extra.DB_PATH,String-calendula.persistence.medDatabases.extra.DB_PREF_VALUE:new java.lang.Object"/>
      <nodes>
        <node method="InstallDatabaseService startSetup" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/drugdb/download/InstallDatabaseService;&quot;)"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;($r6)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PATH&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PREF_VALUE&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_VERSION&quot;, $r2)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService: void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)&gt;($r1, $r8, $r10, $r16)
void startSetup(android.content.Context,java.lang.String,android.support.v4.i.j,es.usc.citius.servando.calendula.drugdb.download.DBInstallType)"/>
      <source name="es.usc.citius.servando.calendula.drugdb.download.DBDownloadReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.drugdb.download.InstallDatabaseService"/>
      <sender extras="String-calendula.persistence.medDatabases.extra.DB_VERSION:new java.lang.Object,String-calendula.persistence.medDatabases.extra.DB_PATH:new java.lang.Object,String-calendula.persistence.medDatabases.extra.DB_PREF_VALUE:new java.lang.Object"/>
      <nodes>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PATH&quot;, $r2)"/>
        <node method="DBDownloadReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
        <node method="DBDownloadReceiver onReceive" type="ReceiveIntentFromOutMethod" unit="$r2 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.drugdb.download.DBDownloadReceiver: android.content.Intent getIntent()&gt;()"/>
        <node method="InstallDatabaseService startSetup" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="InstallDatabaseService startSetup" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/drugdb/download/InstallDatabaseService;&quot;)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PATH&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_PREF_VALUE&quot;, $r2)"/>
        <node method="InstallDatabaseService startSetup" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;calendula.persistence.medDatabases.extra.DB_VERSION&quot;, $r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.MedicinesActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)
&lt;es.usc.citius.servando.calendula.activities.MedicinesActivity: void showSearchView(java.lang.String)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.MedicinesActivity: void showSearchView(java.lang.String)&gt;($r7)
void showSearchView(java.lang.String)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <sender extras="String-MedicinesSearchActivity.extras.EXTRA_SEARCH_TERM:new java.lang.String"/>
      <nodes>
        <node method="MedicinesActivity showSearchView" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MedicinesSearchActivity.extras.EXTRA_SEARCH_TERM&quot;, $r2)"/>
        <node method="MedicinesActivity showSearchView" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MedicinesActivity showSearchView" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/MedicinesSearchActivity;&quot;)"/>
        <node method="MedicinesActivity showSearchView" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MedicinesSearchActivity.extras.EXTRA_SEARCH_TERM&quot;, $r2)"/>
        <node method="MedicinesActivity showSearchView" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.MedicinesActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, 1314)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void onCreate(android.os.Bundle)
&lt;es.usc.citius.servando.calendula.activities.MedicinesActivity: void showSearchView(java.lang.String)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.MedicinesActivity: void showSearchView(java.lang.String)&gt;($r7)
void showSearchView(java.lang.String)"/>
      <source name="es.usc.citius.servando.calendula.activities.MedicinesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MedicinesSearchActivity"/>
      <sender extras="String-MedicinesSearchActivity.extras.EXTRA_SEARCH_TERM"/>
      <nodes>
        <node method="MedicinesActivity showSearchView" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="MedicinesActivity showSearchView" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/MedicinesSearchActivity;&quot;)"/>
        <node method="MedicinesActivity showSearchView" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;MedicinesSearchActivity.extras.EXTRA_SEARCH_TERM&quot;, $r2)"/>
        <node method="MedicinesActivity showSearchView" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.activities.MedicinesActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, 1314)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.scheduling.AlarmReceiver">
    <singleIntent>
      <method method="void onReceive(android.content.Context,android.content.Intent)" methodtrace="void onReceive(android.content.Context,android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r2, $r3)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService$Companion: void enqueueWork(android.content.Context,android.content.Intent)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService$Companion: void enqueueWork(android.content.Context,android.content.Intent)&gt;($r1, $r2)
void enqueueWork(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="AlarmReceiver onReceive" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmIntentService;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmIntentService$Companion enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void onResume()" methodtrace="void onResume()"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.StartActivity"/>
      <sender extras="boolean-StartActivity.extras.return_to_previous:1"/>
      <nodes>
        <node method="CalendulaActivity onResume" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="CalendulaActivity onResume" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Les/usc/citius/servando/calendula/activities/StartActivity;&quot;)"/>
        <node method="CalendulaActivity onResume" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;StartActivity.extras.return_to_previous&quot;, 1)"/>
        <node method="CalendulaActivity onResume" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.CalendulaActivity: void startActivity(android.content.Intent)&gt;($r2)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="com.evernote.android.job.JobRescheduleService">
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void b(android.content.Context)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="interICC_com.evernote.android.job.ADD_JOB_CREATOR"/>
      <sender action="com.evernote.android.job.ADD_JOB_CREATOR"/>
      <nodes>
        <node method="e b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="e b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.evernote.android.job.ADD_JOB_CREATOR&quot;)"/>
        <node method="e b" type="sendOutWrapperredIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <sender action="com.google.android.gms.gcm.ACTION_TASK_READY"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.google.android.gms.gcm.ACTION_TASK_READY&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void a(com.evernote.android.job.i)
&lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt; --- staticinvoke &lt;com.evernote.android.job.g$a: void a(android.content.Context,int)&gt;($r6, $i2)
void a(android.content.Context,int)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z0 = virtualinvoke $r3.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z2 = virtualinvoke $r7.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r6)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="int"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v21.PlatformJobService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.gcm.PlatformGcmService"/>
      <nodes>
        <node method="b b" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="b b" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/evernote/android/job/gcm/PlatformGcmService;&quot;)"/>
        <node method="b b" type="sendOutWrapperredIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r1, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;($r2, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r2, 0)"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmService;&quot;)
boolean a(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt; --- $z0 = specialinvoke r0.&lt;com.evernote.android.job.a.c: boolean b(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/evernote/android/job/v14/PlatformAlarmReceiver;&quot;)
boolean b(android.content.Context,java.lang.Class)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="boolean"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmService"/>
      <nodes>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <nodes>
        <node method="c a" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="c a" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, $r3)"/>
        <node method="c a" type="sendOutWrapperredIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r4, 0)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleIntent(android.content.Intent)" methodtrace="void &lt;init&gt;(android.content.Context)
&lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt; --- $r6 = staticinvoke &lt;com.evernote.android.job.a.c: com.evernote.android.job.a.c a(android.content.Context,boolean)&gt;($r1, $z0)
com.evernote.android.job.a.c a(android.content.Context,boolean)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt; --- $z1 = virtualinvoke $r1.&lt;com.evernote.android.job.a.c: boolean a(android.content.Context)&gt;($r0)
boolean a(android.content.Context)
&lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt; --- $z0 = staticinvoke &lt;com.evernote.android.job.a.c: boolean a(android.content.Context,java.lang.Class,java.lang.String)&gt;($r1, class &quot;Lcom/evernote/android/job/v21/PlatformJobService;&quot;, &quot;android.permission.BIND_JOB_SERVICE&quot;)
boolean a(android.content.Context,java.lang.Class,java.lang.String)"/>
      <source name="com.evernote.android.job.JobRescheduleService"/>
      <destinition name="com.evernote.android.job.v14.PlatformAlarmReceiver"/>
      <nodes>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
        <node method="c a" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="c b" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.scheduling.AlarmIntentService">
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,String-date:new java.lang.String"/>
      <nodes>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,Serializable@-schedule_id:new java.lang.Long,int-action:12"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,Serializable@-schedule_id:new java.lang.Long,int-action:12"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,Serializable@-schedule_id:new java.lang.Long,int-action:12"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <sender extras="String-schedule_time:new java.lang.String,String-date:new java.lang.String,Serializable@-schedule_id:new java.lang.Long"/>
      <nodes>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r5 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11,String-date:new java.lang.String"/>
      <nodes>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11,String-date:new java.lang.String"/>
      <nodes>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="Parcelable@-target" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,String-date:new java.lang.String,int-action:12"/>
      <nodes>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="AlarmScheduler onRoutineTime" type="CreateMethod" unit="$r17 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineTime" type="SetAttribute" unit="specialinvoke $r17.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineTime" type="SetIntentExtra" unit="virtualinvoke $r17.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r18)"/>
        <node method="AlarmScheduler onRoutineTime" type="SetIntentExtra" unit="virtualinvoke $r17.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="AlarmScheduler onRoutineTime" type="CreateMethod" unit="$r17 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineTime" type="SetAttribute" unit="specialinvoke $r17.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineTime" type="SetIntentExtra" unit="virtualinvoke $r17.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r18)"/>
        <node method="AlarmScheduler onRoutineTime" type="SetIntentExtra" unit="virtualinvoke $r17.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-schedule_id:new java.lang.Long,String-schedule_time:new java.lang.String,String-date:new java.lang.String,int-action:12"/>
      <nodes>
        <node method="AlarmScheduler onHourlyScheduleTime" type="CreateMethod" unit="$r8 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleTime" type="SetAttribute" unit="specialinvoke $r8.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleTime" type="SetIntentExtra" unit="virtualinvoke $r8.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r9)"/>
        <node method="AlarmScheduler onHourlyScheduleTime" type="SetIntentExtra" unit="virtualinvoke $r8.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r10)"/>
        <node method="AlarmScheduler onHourlyScheduleTime" type="SetIntentExtra" unit="virtualinvoke $r8.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,Serializable@-schedule_id:new java.lang.Long,int-action:12"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,Serializable@-schedule_id:new java.lang.Long,int-action:12"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setRepeatAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r4, $r5, 1, $i1)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt; --- virtualinvoke $r8.&lt;es.usc.citius.servando.calendula.scheduling.DailyAgenda: void setupForToday(android.content.Context,boolean)&gt;($r7, 0)
void setupForToday(android.content.Context,boolean)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r15.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r1)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="Parcelable@-target" flags="FLAG_ACTIVITY_NEW_TASK , FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,Serializable@-schedule_id:new java.lang.Long,int-action:12"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,Serializable@-schedule_id:new java.lang.Long,int-action:12"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="int-action:5,Serializable@-routine_id:new java.lang.Long,String-date"/>
      <nodes>
        <node method="ReminderNotification getIntentsForRoutine" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification getIntentsForRoutine" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification getIntentsForRoutine" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 5)"/>
        <node method="ReminderNotification getIntentsForRoutine" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r4)"/>
        <node method="ReminderNotification getIntentsForRoutine" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="AlarmIntentService onHandleWork" type="ReceiveIntentFromOutMethod" unit="$r1 = virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmIntentService: android.content.Intent getIntent()&gt;()"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmIntentService onHandleWork" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="Parcelable@-target" flags="FLAG_ACTIVITY_NEW_TASK , FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="String-schedule_time,int-action:9,String-date,Serializable@-schedule_id:new java.lang.Long"/>
      <nodes>
        <node method="ReminderNotification getIntentsForSchedule" type="CreateMethod" unit="$r7 = new android.content.Intent"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetIntentExtra" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 9)"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetIntentExtra" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r5)"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetIntentExtra" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r6)"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetIntentExtra" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,int-action:11"/>
      <nodes>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onHourlyAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <sender extras="String-action:delay,String-date,String-schedule_time,Serializable@-schedule_id:new java.lang.Long"/>
      <nodes>
        <node method="ReminderNotification getIntentsForSchedule" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;action&quot;, &quot;delay&quot;)"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r5)"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r6)"/>
        <node method="ReminderNotification getIntentsForSchedule" type="SetIntentExtra" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r6)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,Serializable@-routine_id:new java.lang.Long,Parcelable@-target,int-action:11,Bundle-,(,)" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler onRoutineLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onRoutineLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r7)"/>
        <node method="AlarmScheduler onRoutineLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 11)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onRoutineLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.activities.ConfirmActivity"/>
      <sender extras="Serializable@-routine_id:new java.lang.Long,String-date,String-action:delay"/>
      <nodes>
        <node method="ReminderNotification getIntentsForRoutine" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="ReminderNotification getIntentsForRoutine" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="ReminderNotification getIntentsForRoutine" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;action&quot;, &quot;delay&quot;)"/>
        <node method="ReminderNotification getIntentsForRoutine" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;routine_id&quot;, $r4)"/>
        <node method="ReminderNotification getIntentsForRoutine" type="SetIntentExtra" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r5)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHandleWork(android.content.Intent)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- virtualinvoke $r6.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r2, $r7)
void onAlarmReceived(es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)&gt;($r3, $r1, $r2)
void onRoutineLost(es.usc.citius.servando.calendula.persistence.Routine,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 1)
void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt; --- $r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r0, $r5)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelDelayedAlarm(es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,android.content.Context,int)&gt;($r2, $r1, $r3, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Routine,java.util.List,org.joda.time.LocalDate,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r10, $r3, $r2, $r4)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r2)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler cancelDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r1, $r2, $r3, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onHandleWork(android.content.Intent)" methodtrace="void onHourlyScheduleLost(es.usc.citius.servando.calendula.persistence.Schedule,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- virtualinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r1, $r5, $r6, $r3)
void onIntakeCompleted(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 1)
void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void cancelHourlyDelayedAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context,int)&gt;($r1, $r2, $r3, $r4, 0)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)&gt;($r3, $r8, $r1, $r6, $r5, $r4, 1)
void notify(android.content.Context,java.lang.String,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,org.joda.time.LocalTime,android.content.Intent,boolean)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)&gt;($r0, $i1, $r1, $r9, $r6, $r5, $r12)
void notify(android.content.Context,int,java.lang.String,android.support.v4.i.j,android.content.Intent,android.content.Intent,es.usc.citius.servando.calendula.activities.ReminderNotification$NotificationOptions)
&lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.activities.ReminderNotification: void showInsistentScreen(android.content.Context,android.content.Intent)&gt;($r0, $r5)
void showInsistentScreen(android.content.Context,android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.scheduling.AlarmIntentService"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.scheduling.AlarmReceiver, es.usc.citius.servando.calendula.activities.ConfirmActivity, es.usc.citius.servando.calendula.scheduling.NotificationEventReceiver, es.usc.citius.servando.calendula.notifications.LockScreenAlarmActivity"/>
      <sender extras="String-date:new java.lang.String,String-schedule_time,String-schedule_time:new java.lang.String,Serializable@-schedule_id:new java.lang.Long,Parcelable@-target,Bundle-,(,),int-action:12" flags="FLAG_ACTIVITY_NEW_TASK "/>
      <nodes>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler cancelHourlyDelayedAlarm" type="ReceiveIntentFromRetValue" unit="$r7 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 1, $i0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="CreateMethod" unit="$r4 = new android.content.Intent"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/ConfirmActivity;&quot;)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r7)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r8)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="SetIntentExtra" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r8)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="CreateMethod" unit="$r6 = new android.content.Intent"/>
        <node method="ReminderNotification notify" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/scheduling/NotificationEventReceiver;&quot;)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;action&quot;, 12)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;schedule_id&quot;, $r10)"/>
        <node method="ReminderNotification notify" type="SetIntentExtra" unit="virtualinvoke $r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;schedule_time&quot;, $r11)"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>
        <node method="ReminderNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter5: android.content.Intent"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="ReminderNotification notify" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r9 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r10 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r5, 134217728)"/>
        <node method="AlarmScheduler onHourlyScheduleLost" type="pendingIntentCreation" unit="$r13 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, $r4, 134217728)"/>
        <node method="ReminderNotification showInsistentScreen" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="CreateMethod" unit="$r3 = new android.content.Intent"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Les/usc/citius/servando/calendula/notifications/LockScreenAlarmActivity;&quot;)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>
        <node method="ReminderNotification showInsistentScreen" type="SetIntentExtra" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;target&quot;, $r1)"/>
        <node method="ReminderNotification showInsistentScreen" type="SendIntent2ICC" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.HomePagerActivity">
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void run()
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.HomePagerActivity: void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)&gt;($r1, $r2)
void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke $r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r1)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <destinition name="es.usc.citius.servando.calendula.activities.MaterialIntroActivity"/>
      <nodes>
        <node method="HomePagerActivity$7 run" type="CreateMethod" unit="$r2 = new android.content.Intent"/>
        <node method="HomePagerActivity$7 run" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Les/usc/citius/servando/calendula/activities/MaterialIntroActivity;&quot;)"/>
        <node method="HomePagerActivity access$800" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="void onCreate(android.os.Bundle)" methodtrace="void access$800(es.usc.citius.servando.calendula.HomePagerActivity,android.content.Intent)
&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt; --- specialinvoke $r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void launchActivity(android.content.Intent)&gt;($r1)
void launchActivity(android.content.Intent)"/>
      <source name="es.usc.citius.servando.calendula.HomePagerActivity"/>
      <nodes>
        <node method="HomePagerActivity access$800" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>
        <node method="HomePagerActivity launchActivity" type="SendIntent2ICC" unit="virtualinvoke r0.&lt;es.usc.citius.servando.calendula.HomePagerActivity: void startActivity(android.content.Intent)&gt;($r1)"/>
      </nodes>
    </singleIntent>
  </Component>
  <Component source="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity">
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <nodes>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r2, $i0, $r1, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <sender extras="String-date:new java.lang.String,Bundle-,(,)"/>
      <nodes>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler setAlarmParams" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)&gt;(&quot;alarm_params&quot;, $r2)"/>
        <node method="AlarmScheduler setAlarmParams" type="SetIntentExtra" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;date&quot;, $r3)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
      </nodes>
    </singleIntent>
    <singleIntent>
      <method method="java.lang.Object call()" methodtrace="java.lang.Object call()
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt; --- virtualinvoke $r37.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void updateAllAlarms(android.content.Context)&gt;($r2)
void updateAllAlarms(android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)&gt;($r5, $r6, $r1)
void setAlarmsIfNeeded(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)&gt;($r3, $r9, $r1, $r2)
void setFirstAlarm(es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,android.content.Context)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt; --- $r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r4, $r1, 0, 0)
android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Schedule,org.joda.time.LocalTime,org.joda.time.LocalDate,boolean,int)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt; --- staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)&gt;($r1, $r6)
void setAlarmParams(android.content.Intent,es.usc.citius.servando.calendula.scheduling.AlarmIntentParams)
&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt; --- specialinvoke r0.&lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: void setExactAlarm(android.content.Context,long,android.app.PendingIntent)&gt;($r2, $l0, $r6)
void setExactAlarm(android.content.Context,long,android.app.PendingIntent)"/>
      <source name="es.usc.citius.servando.calendula.activities.ConfirmSchedulesActivity"/>
      <destinition name="es.usc.citius.servando.calendula.scheduling.AlarmReceiver"/>
      <nodes>
        <node method="AlarmScheduler setFirstAlarm" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;es.usc.citius.servando.calendula.scheduling.AlarmScheduler: android.app.PendingIntent pendingIntent(android.content.Context,es.usc.citius.servando.calendula.persistence.Routine,org.joda.time.LocalDate,boolean,int)&gt;($r2, $r3, $r1, 0, 0)"/>
        <node method="AlarmScheduler pendingIntent" type="CreateMethod" unit="$r0 = new android.content.Intent"/>
        <node method="AlarmScheduler pendingIntent" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Les/usc/citius/servando/calendula/scheduling/AlarmReceiver;&quot;)"/>
        <node method="AlarmScheduler pendingIntent" type="pendingIntentCreation" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r1, $i0, $r0, 268435456)"/>
        <node method="AlarmScheduler setExactAlarm" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>
        <node method="AlarmScheduler setExactAlarm" type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l0, $r1)"/>
      </nodes>
    </singleIntent>
  </Component>
</root>
